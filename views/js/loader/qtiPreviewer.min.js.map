{"version":3,"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","compilerInfo","merge","runnerComponentFactory","runnerTpl","previewerFactory","container","config","arguments","length","on","fullPage","readOnly","hideActionBars","getConfig","options","setState","runner","destroy","context","qtiItemPreviewerFactory","testRunnerConfig","testDefinition","serviceCallId","providers","id","module","bundle","category","proxy","communicator","plugins","view","pluginsOptions","loadFromBundle","itemState","itemRunner","itemUri","loadItem","_","loggerFactory","feedback","logger","defaultPlugins","name","init","uri","state","Array","isArray","window","document","body","err","isUndefined","message","error","helper","buffer","helperMissing","escapeExpression","__","hash","call","stack1","functionType","title","$","componentFactory","topBlockTpl","topBlockDataTpl","topBlockFactory","topBlock","setTemplate","render","$info","isTest","$element","getElement","find","append","onClose","$icon","toggleClass","trigger","defer","urlUtil","configHelper","_defaults","bootstrap","serviceController","serviceExtension","_entries","timeout","itemPreviewerConfigFactory","undef","storage","from","getParameters","itemIdentifier","type","parameters","getServiceCallId","isPlainObject","TypeError","getServiceController","getServiceExtension","getTestActionUrl","action","route","getItemActionUrl","getTimeout","tablets","\"193986c3715c81838870f908fa98d69a\"","label","width","height","\"4e8eafab11aad1486992d7ee2c8c16ca\"","\"5aac2932d9ad00d6d8a1604b8f9e4e8d\"","\"9805d9753ad08c7630a9ee5418aa6c6c\"","d4a431cedf4705d6bf2cba6d5788378b","phones","\"1b89338531ef0155c8d6abc2ac02c81a\"","scaleFactor","dpWidth","dpHeight","\"3f89da99d84214cde7df87ebe0699a6f\"","\"0d36971a5b98b367f54ced708c9af849\"","\"026beffcc051af995660ebdede986ace\"","fd2dd53e667d6d49e4fa73356fa941dd","\"707584c1ae17d9b5b2cbe8603c91c147\"","\"91823264de952e7f2347e07db5c4058b\"","cd69817a6e147e8a4677389e56fcf568","\"75994faa6a38e31e99b53fcd75534a33\"","\"0cab4dfccdfc880687cb608cfe4159db\"","c4ff41fcba24d74fc21dc3490ca1edc9","fa969a5e0dd2de53700eeee4ba4ba142","\"33c4f9364e295ec03531f3a3425819cf\"","bc47f5275f0efd56fee52d43a8082981","\"0732887e6e324fd10777b735520a34cf\"","\"2e38a78364f09d0da0e9e1a3a68e7fb0\"","bd4b78dddc7c9625a4141a1b1ddabb87","\"3bf1edf21cfa81006183d2b02974c84e\"","ab5a352e0e016b97dac986f06c394f55","\"4826fb7d7257aeaac992ce699df41b3c\"","\"0a691ab20add7c432200f8fa6527b488\"","\"9c23ee31be29960fbac9e9bbfc2fc7b0\"","\"92177c0508c1d73905a58e2338f2a81f\"","\"5222b8866dc4cc606725e16ffcc0a783\"","\"37c1541e2bd55cfd0f4073b0ccdf68b3\"","\"2f7f64b7dda0144907ff300e83eed465\"","\"9c24f9057744dad56043702a9703127f\"","\"0a8b2732a016a9395c3af5f12dd9c0da\"","\"5a153d7f53d82dcb0801f041574a6a43\"","screens","\"9e523ae15b61dc766f5c818726881ecf\"","\"07769cd8d0a7d09818b2f0b018042fb7\"","\"72d5478a24194f98b9378e8e0fd65737\"","b7a6dd5900cc72e61f0d3479c7e314ec","\"43193b0ff671a37d8232ab664190a125\"","c29e48814af5443ff5688d9e967ce917","deviceList","deviceTypeMap","mobile","desktop","devicesHelper","getDevicesByType","key","map","mapDeviceData","device","identifier","value","getMobileDevices","getDesktopDevices","pluginFactory","testRunner","getTestRunner","after","clone","appendTo","isPluginAllowed","$contentArea","getAreaBroker","getContentArea","$extendedTextinteractionTextAreas","$ckeEditorsContent","each","style","scrollHeight","$ckeEditorContent","$ckeEditorIFrame","setTimeout","ckeEditorBody","contentWindow","querySelector","hider","buttonTpl","self","control","icon","text","className","e","preventDefault","getState","disable","enable","$container","getArea","remove","prop","removeClass","addClass","show","hide","time","moment","autoscroll","strPad","pciResponse","rendererStrategies","consoleTpl","consoleLineTpl","consoleCloserTpl","defaults","submitTitle","submitText","submitIcon","pluginConfig","getName","showConsole","controls","$console","$consoleBody","$consoleCloser","children","last","hideConsole","addConsoleLine","format","showResponses","responses","forEach","response","escape","prettyPrint","$button","itemSession","getContainer","$navigation","getNavigationArea","$el","deviceType","deviceOrientation","transformer","devicesPreviewerTpl","_Mathmin","Math","min","devicesPreviewerFactory","resetScale","$previewContent","removeAttr","$previewContainer","api","getDeviceWidth","deviceWidth","setDeviceWidth","componentConfig","parseInt","getDeviceHeight","deviceHeight","setDeviceHeight","getDeviceOrientation","setDeviceOrientation","orientation","is","attr","isDeviceMode","getDeviceType","setDeviceType","previewDevice","clearScale","applyScale","frameSize","frameMargins","getFrameSize","getFrameMargins","getScaleFactor","css","setTransformOrigin","scale","margins","outerWidth","outerHeight","size","innerWidth","innerHeight","x","y","wrap","element","unwrap","$wrappedElement","$wrappedElementContainer","parent","$wasWrappedElement","devicesPreviewer","$previewFrame","deviceWith","program1","selected","inverse","noop","fn","program","program2","items","lookupSelecter","devicesSelectorTpl","selectorTpl","getSelectorData","list","getValidIdentifier","first","updateSelect2","$selector","current","val","removeSelect2","hasClass","select2","devicesSelectorFactory","devicesList","typeData","setControlsProp","property","updateMode","getType","getOrientation","getDevice","getDeviceData","setType","deviceTypesList","$typeSelector","setDevice","setOrientation","deviceOrientationsList","$orientationSelector","select","setterName","callbackMap","isFunction","reset","devicesSelector","renderSelector","selectedValue","item","html","$desktopSelector","$mobileSelector","onSelectorChange","target","closest","uuid","namespaceHelper","nsId","resizeItem","areaBroker","namespaceAll","throttle","Promise","all","resolve","getHeaderArea","off","areaBrokerFactory","testStoreFactory","proxyFactory","toolboxFactory","qtiItemRunner","assetManagerFactory","assetStrategies","containerHelper","layoutTpl","setContext","$context","_$previousContext","getContext","restoreContext","assetManager","prependStrategy","taomedia","loadAreaBroker","$layout","contentWrapper","content","toolbox","navigation","actionsBar","panel","header","loadProxy","proxyProvider","loadTestStore","Date","now","install","getPlugins","plugin","setConfig","dataHolder","getDataHolder","setComponent","getToolbox","itemResponses","getResponses","getProxy","submitItem","get","then","catch","code","itemData","renderItem","itemRef","set","flush","renderTo","getToolboxArea","getItem","changeState","setItemState","reject","setData","baseUrl","assets","Object","assign","onItemRunnerInit","portableElements","onItemRunnerRender","unloadItem","clear","moduleLoader","moduleConfig","handlers","addList","load","itemDataHandlers","reduce","prev","cur","updateItemData","promiseQueue","coreRequest","configFactory","queue","prepareParams","actionParams","stringifyParams","mapValues","includes","JSON","stringify","request","url","reqParams","contentType","noToken","method","background","sequential","configStorage","setOnline","success","isConnectivityError","setOffline","params","callTestAction","callItemAction","itemResponse","mapHelper","_Mathmin2","updateTestContextWithItem","testMap","position","testContext","presetMap","jump","getJump","getItemAt","testPartId","part","sectionId","section","itemSessionState","itemSessionStates","initial","createContextOptions","allowSkipping","pluginId","keys","categoryId","categories","serviceControllerInit","serviceControllerGetItem","testSessionStates","freeze","interacting","modalFeedback","suspended","closed","solution","review","configs","itemStore","testUri","builtTestMap","reindex","firstJump","jumps","firstItem","itemPosition","canMoveBackward","attempt","Error","actions","move","_Mathmax","max","direction","scope","testPartPosition","parts","nextPartsSorted","values","filter","p","sort","a","b","stats","total","ref","flagItem","skip","loadingBar","qtiTestPreviewerFactory","stop","taoExtension","testPreviewerController","transformConfiguration","omit","configuration","testPreviewConfig","previewComponent","getTestMap","c","d","i","s","createElement","getElementsByTagName","appendChild","styleSheet","cssText","createTextNode"],"sources":["/github/workspace/tao/views/build/config-wrap-start-default.js","../previewer/runner!tpl","../previewer/runner.js","../previewer/provider/item/css/item!css","../previewer/component/qtiItem.js","../previewer/adapter/item/qtiItem.js","../previewer/component/topBlock/tpl/topBlock!tpl","../previewer/component/topBlock/tpl/topBlockData!tpl","../previewer/component/topBlock/css/topBlock!css","../previewer/component/topBlock/topBlock.js","../previewer/config/item.js","../previewer/resources/devices.json!json","../previewer/helpers/devices.js","../previewer/plugins/content/cloneLogoInTestPreview.js","../previewer/plugins/content/enhancedReadOnlyMode.js","../previewer/plugins/controls/close.js","tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console","tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-line","tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-closer","../previewer/plugins/navigation/submit/submit.js","tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-previewer","../previewer/plugins/tools/scale/component/css/devicesPreviewer!css","../previewer/plugins/tools/scale/component/devicesPreviewer.js","tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-selector","../previewer/plugins/tools/scale/component/tpl/selector!tpl","../previewer/plugins/tools/scale/component/css/devicesSelector!css","../previewer/plugins/tools/scale/component/devicesSelector.js","../previewer/plugins/tools/scale/scale.js","../previewer/provider/item/tpl/item!tpl","../previewer/provider/item/item.js","../previewer/proxy/itemDataHandlers.js","../previewer/proxy/item.js","../previewer/proxy/test.js","../previewer/component/test/tpl/qtiTest!tpl","../previewer/component/test/css/qtiTest!css","../previewer/component/test/qtiTest.js","../previewer/adapter/test/qtiTest.js","onLayerEnd0.js","module-create.js","/github/workspace/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/runner', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"previewer-component\\\"></div>\";\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Component that embeds the QTI previewer for tests and items\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/runner',[\n    'taoTests/runner/runnerComponent',\n    'tpl!taoQtiTestPreviewer/previewer/runner'\n], function (runnerComponentFactory, runnerTpl) {\n    'use strict';\n\n    /**\n     * Builds a test runner to preview test item\n     * @param {jQuery|HTMLElement|String} container - The container in which renders the component\n     * @param {Object}   config - The testRunner options\n     * @param {String}  [config.provider] - The provider to use\n     * @param {Object[]} [config.providers] - A collection of providers to load.\n     * @param {Boolean} [config.replace] - When the component is appended to its container, clears the place before\n     * @param {Number|String} [config.width] - The width in pixels, or 'auto' to use the container's width\n     * @param {Number|String} [config.height] - The height in pixels, or 'auto' to use the container's height\n     * @param {Boolean} [config.options.fullPage] - Force the previewer to occupy the full window.\n     * @param {Booleanh} [config.options.readOnly] - Do not allow to modify the previewed item.\n     * @param {Function} [template] - An optional template for the component\n     * @returns {previewer}\n     */\n    return function previewerFactory(container, config = {}, template = null) {\n\n        return runnerComponentFactory(container, config, template || runnerTpl)\n            .on('render', function() {\n                const { fullPage, readOnly, hideActionBars } = this.getConfig().options;\n                this.setState('fullpage', fullPage);\n                this.setState('readonly', readOnly);\n                this.setState('hideactionbars', hideActionBars);\n            })\n            .on('ready', function(runner) {\n                runner.on('destroy', () => this.destroy() );\n            });\n    };\n});\n\n","\ndefine('css!taoQtiTestPreviewer/previewer/provider/item/css/item',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/component/qtiItem',[\n    'context',\n    'taoQtiTestPreviewer/previewer/runner',\n    'css!taoQtiTestPreviewer/previewer/provider/item/css/item'\n], function (context, previewerFactory) {\n    'use strict';\n\n    /**\n     * Builds a test runner to preview test item\n     * @param {jQuery|HTMLElement|String} container - The container in which renders the component\n     * @param {Object} [config] - The testRunner options\n     * @param {String} [config.itemUri] - The URI of the item to load\n     * @param {Object} [config.itemState] - The state of the item when relevant\n     * @param {Object[]} [config.plugins] - Additional plugins to load\n     * @param {Object[]} [config.pluginsOptions] - Options for the plugins\n     * @param {String} [config.fullPage] - Force the previewer to occupy the full window.\n     * @param {String} [config.readOnly] - Do not allow to modify the previewed item.\n     * @param {Function} [template] - An optional template for the component\n     * @returns {previewer}\n     */\n    return function qtiItemPreviewerFactory(container, config = {}, template = null) {\n\n        const testRunnerConfig = {\n            testDefinition: 'test-container',\n            serviceCallId: 'previewer',\n            providers: {\n                runner: {\n                    id: 'qtiItemPreviewer',\n                    module: 'taoQtiTestPreviewer/previewer/provider/item/item',\n                    bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n                    category: 'runner'\n                },\n                proxy: {\n                    id: 'qtiItemPreviewerProxy',\n                    module: 'taoQtiTestPreviewer/previewer/proxy/item',\n                    bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n                    category: 'proxy'\n                },\n                communicator: {\n                    id: 'request',\n                    module: 'core/communicator/request',\n                    bundle: 'loader/vendor.min',\n                    category: 'communicator'\n                },\n                plugins: config.plugins || []\n            },\n            options: {\n                view: config.view,\n                readOnly: config.readOnly,\n                fullPage: config.fullPage,\n                plugins: config.pluginsOptions,\n                hideActionBars: config.hideActionBars,\n            }\n        };\n\n        //extra context config\n        testRunnerConfig.loadFromBundle = !!context.bundle;\n\n        return previewerFactory(container, testRunnerConfig, template)\n            .on('ready', runner => {\n                if (config.itemState) {\n                    runner.on('renderitem', () => runner.itemRunner.setState(config.itemState));\n                }\n                if (config.itemUri) {\n                    return runner.loadItem(config.itemUri);\n                }\n            });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/adapter/item/qtiItem',[\n    'lodash',\n    'core/logger',\n    'taoQtiTestPreviewer/previewer/component/qtiItem',\n    'ui/feedback'\n], function (_, loggerFactory, qtiItemPreviewerFactory, feedback) {\n    'use strict';\n\n    const logger = loggerFactory('taoQtiTest/previewer');\n\n    /**\n     * List of required plugins that should be loaded in order to make the previewer work properly\n     * @type {Object[]}\n     */\n    const defaultPlugins = [{\n        module: 'taoQtiTestPreviewer/previewer/plugins/controls/close',\n        bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n        category: 'controls'\n    }, {\n        module: 'taoQtiTestPreviewer/previewer/plugins/navigation/submit/submit',\n        bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n        category: 'navigation'\n    }, {\n        module: 'taoQtiTestPreviewer/previewer/plugins/tools/scale/scale',\n        bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n        category: 'tools'\n    }, {\n        module: 'taoQtiTest/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher',\n        bundle: 'taoQtiTest/loader/testPlugins.min',\n        category: 'tools'\n    }, {\n        module: 'taoQtiTestPreviewer/previewer/plugins/content/enhancedReadOnlyMode',\n        bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n        category: 'content'\n    }];\n\n    /**\n     * Wraps the legacy item previewer in order to be loaded by the taoItems previewer factory\n     */\n    return {\n        name: 'qtiItem',\n\n        /**\n         * Builds and shows the legacy item previewer\n         *\n         * @param {String} uri - The URI of the item to load\n         * @param {Object} state - The state of the item\n         * @param {Object} [config] - Some config entries\n         * @param {Object[]} [config.plugins] - Additional plugins to load\n         * @param {String} [config.fullPage] - Force the previewer to occupy the full window.\n         * @param {String} [config.readOnly] - Do not allow to modify the previewed item.\n         * @returns {Object}\n         */\n        init(uri, state, config = {}) {\n            config.itemUri = uri;\n            config.itemState = state;\n            config.plugins = Array.isArray(config.plugins) ? [...defaultPlugins, ...config.plugins] : defaultPlugins;\n            return qtiItemPreviewerFactory(window.document.body, config)\n                .on('error', function (err) {\n                    if (!_.isUndefined(err.message)) {\n                        feedback().error(err.message);\n                    } else {\n                        logger.error(err);\n                    }\n                });\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/component/topBlock/tpl/topBlock', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"top-block-preview open\\\">\\n\t<div class=\\\"top-block-preview-main\\\">\\n\t\t<div class=\\\"top-block-preview-info\\\"></div>\\n\t\t<button class=\\\"btn-info small close\\\" type=\\\"button\\\">\\n\t\t\t\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close\", options) : helperMissing.call(depth0, \"__\", \"Close\", options)))\n    + \"\\n\t\t\t<span class=\\\"icon icon-close\\\"></span>\\n\t\t</button>\\n\t</div>\\n\t<div class=\\\"top-block-preview-collapser\\\"><span class=\\\"icon icon-up\\\"></span></div>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/component/topBlock/tpl/topBlockData', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<p>\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" <b>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</b></p>\";\n  return buffer;\n  }); });\n","\ndefine('css!taoQtiTestPreviewer/previewer/component/topBlock/css/topBlock',[],function(){});\n","define('taoQtiTestPreviewer/previewer/component/topBlock/topBlock',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'tpl!taoQtiTestPreviewer/previewer/component/topBlock/tpl/topBlock',\n    'tpl!taoQtiTestPreviewer/previewer/component/topBlock/tpl/topBlockData',\n    'css!taoQtiTestPreviewer/previewer/component/topBlock/css/topBlock',\n], function ($, _, __, componentFactory, topBlockTpl, topBlockDataTpl) {\n    'use strict';\n\n    /**\n     * Builds a topBlock component\n     *\n     * @param {JQuery} container\n     * @param {Object} config\n     * @param {String} config.title - the test title\n     * @param {Function} config.onClose - the callback function\n     * @returns {component}\n     * @fires ready - When the component is ready to work\n     */\n    function topBlockFactory(container, config) {\n        const topBlock = componentFactory()\n            .setTemplate(topBlockTpl)\n            .on('init', function(){\n                this.render(container);\n            })\n            .on('render', function () {\n                const $info = $(topBlockDataTpl({\n                    name: config.isTest ? __('Test Preview:') : __('Item Preview:'),\n                    title: config.title\n                }));\n                const $element = this.getElement();\n                $element.find('.top-block-preview-info').append($info);\n                $element.find('.close').on('click', config.onClose);\n                const $icon = $element.find('.top-block-preview-collapser .icon');\n                $element.find('.top-block-preview-collapser').on('click', () => {\n                    $icon.toggleClass('icon-up');\n                    $icon.toggleClass('icon-down');\n                    $element.toggleClass('open');\n                    $element.toggleClass('close');\n                });\n                /**\n                 * @event ready\n                 */\n                this.trigger('ready');\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(function() {\n            topBlock.init(config);\n        });\n\n        return topBlock;\n    }\n\n    return topBlockFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Config manager for the proxy of the QTI item previewer\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/config/item',[\n    'lodash',\n    'util/url',\n    'util/config'\n], function(_, urlUtil, configHelper) {\n    'use strict';\n\n    /**\n     * Some default config values\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        bootstrap : {\n            serviceController : 'Previewer',\n            serviceExtension : 'taoQtiTestPreviewer'\n        }\n    };\n\n    /**\n     * The list of handled config entries. Each required entry is set to true, while optional entries are set to false.\n     * @type {Object}\n     * @private\n     */\n    var _entries = {\n        serviceCallId : true,\n        bootstrap : false,\n        timeout : false\n    };\n\n    /**\n     * Creates a config object for the proxy implementation\n     * @param {Object} config - Some required and optional config\n     * @param {String} config.serviceCallId - An identifier for the service call\n     * @param {String} [config.bootstrap.serviceController] - The name of the service controller\n     * @param {String} [config.bootstrap.serviceExtension] - The name of the extension containing the service controller\n     * @returns {Object}\n     */\n    return function itemPreviewerConfigFactory(config) {\n        // protected storage\n        var storage = configHelper.from(config, _entries, _defaults);\n        var undef;\n\n        // convert some values from seconds to milliseconds\n        if (storage.timeout) {\n            storage.timeout *= 1000;\n        } else {\n            storage.timeout = undef;\n        }\n\n        // returns only a proxy storage object : no direct access to data is provided\n        return {\n            /**\n             * Gets the list of parameters\n             * @param {String|Object} [itemIdentifier]\n             * @returns {Object}\n             */\n            getParameters: function getParameters(itemIdentifier) {\n                var type = typeof itemIdentifier;\n                var parameters = {\n                    serviceCallId : this.getServiceCallId()\n                };\n\n                if (type === 'string') {\n                    // simple item identifier\n                    parameters.itemUri = itemIdentifier;\n                    // structured item identifier (a list of parameters)\n                } else if (type === 'object' && _.isPlainObject(itemIdentifier)) {\n                    _.merge(parameters, itemIdentifier);\n                } else if (type !== 'undefined') {\n                    throw new TypeError('Wrong parameter type provided for itemIdentifier: ' + type + '. Only string or plain object are allowed!');\n                }\n\n                return parameters;\n            },\n\n            /**\n             * Gets the URI of the service call\n             * @returns {String}\n             */\n            getServiceCallId : function getServiceCallId() {\n                return storage.serviceCallId;\n            },\n\n            /**\n             * Gets the name of the service controller\n             * @returns {String}\n             */\n            getServiceController : function getServiceController() {\n                return storage.bootstrap.serviceController || _defaults.bootstrap.serviceController;\n            },\n\n            /**\n             * Gets the name of the extension containing the service controller\n             * @returns {String}\n             */\n            getServiceExtension : function getServiceExtension() {\n                return storage.bootstrap.serviceExtension || _defaults.bootstrap.serviceExtension;\n            },\n\n            /**\n             * Gets an URL of a service action\n             * @param {String} action - the name of the action to request\n             * @returns {String} - Returns the URL\n             */\n            getTestActionUrl : function getTestActionUrl(action) {\n                return urlUtil.route(action, this.getServiceController(), this.getServiceExtension(), this.getParameters());\n            },\n\n            /**\n             * Gets an URL of a service action related to a particular item\n             * @param {String|Object} itemIdentifier - The URI of the item\n             * @param {String} action - the name of the action to request\n             * @returns {String} - Returns the URL\n             */\n            getItemActionUrl : function getItemActionUrl(itemIdentifier, action) {\n                return urlUtil.route(action, this.getServiceController(), this.getServiceExtension(), this.getParameters(itemIdentifier));\n            },\n\n            /**\n             * Gets the request timeout\n             * @returns {Number}\n             */\n            getTimeout : function getTimeout() {\n                return storage.timeout;\n            }\n        };\n    };\n});\n\n","\ndefine(\"json!taoQtiTestPreviewer/previewer/resources/devices.json\", function(){ return {\n    \"tablets\": {\n        \"193986c3715c81838870f908fa98d69a\": {\n            \"label\": \"Amazon Kindle Fire HDX 7\\u2033\",\n            \"width\": 960,\n            \"height\": 600\n        },\n        \"4e8eafab11aad1486992d7ee2c8c16ca\": {\n            \"label\": \"Apple iPad\",\n            \"width\": 1024,\n            \"height\": 768\n        },\n        \"5aac2932d9ad00d6d8a1604b8f9e4e8d\": {\n            \"label\": \"Google Nexus 10, Motorola Xoom, Xyboard\",\n            \"width\": 1280,\n            \"height\": 800\n        },\n        \"9805d9753ad08c7630a9ee5418aa6c6c\": {\n            \"label\": \"Google Nexus 7\",\n            \"width\": 966,\n            \"height\": 604\n        },\n        \"d4a431cedf4705d6bf2cba6d5788378b\": {\n            \"label\": \"Samsung Galaxy Tab 7.7, 8.9, 10.1\",\n            \"width\": 1280,\n            \"height\": 800\n        }\n    },\n    \"phones\": {\n        \"1b89338531ef0155c8d6abc2ac02c81a\": {\n            \"label\": \"Apple iPhone 3GS\",\n            \"width\": 320,\n            \"height\": 480,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 320,\n            \"dpHeight\": 480\n        },\n        \"3f89da99d84214cde7df87ebe0699a6f\": {\n            \"label\": \"Apple iPhone 4\",\n            \"width\": 640,\n            \"height\": 960,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1920\n        },\n        \"0d36971a5b98b367f54ced708c9af849\": {\n            \"label\": \"Apple iPhone 5\",\n            \"width\": 640,\n            \"height\": 1136,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 320,\n            \"dpHeight\": 2272\n        },\n        \"026beffcc051af995660ebdede986ace\": {\n            \"label\": \"BlackBerry Z10\",\n            \"width\": 768,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 384,\n            \"dpHeight\": 2560\n        },\n        \"fd2dd53e667d6d49e4fa73356fa941dd\": {\n            \"label\": \"BlackBerry Z30\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"707584c1ae17d9b5b2cbe8603c91c147\": {\n            \"label\": \"Google Nexus 4\",\n            \"width\": 768,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 384,\n            \"dpHeight\": 2560\n        },\n        \"91823264de952e7f2347e07db5c4058b\": {\n            \"label\": \"Google Nexus 5\",\n            \"width\": 1080,\n            \"height\": 1920,\n            \"scaleFactor\": 3,\n            \"dpWidth\": 360,\n            \"dpHeight\": 5760\n        },\n        \"cd69817a6e147e8a4677389e56fcf568\": {\n            \"label\": \"Google Nexus S\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"75994faa6a38e31e99b53fcd75534a33\": {\n            \"label\": \"HTC Evo, Touch HD, Desire HD, Desire\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"0cab4dfccdfc880687cb608cfe4159db\": {\n            \"label\": \"HTC One X, EVO LTE\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"c4ff41fcba24d74fc21dc3490ca1edc9\": {\n            \"label\": \"HTC Sensation, Evo 3D\",\n            \"width\": 540,\n            \"height\": 960,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 360,\n            \"dpHeight\": 1440\n        },\n        \"fa969a5e0dd2de53700eeee4ba4ba142\": {\n            \"label\": \"LG Optimus 2X, Optimus 3D, Optimus Black\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"33c4f9364e295ec03531f3a3425819cf\": {\n            \"label\": \"LG Optimus G\",\n            \"width\": 768,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 384,\n            \"dpHeight\": 2560\n        },\n        \"bc47f5275f0efd56fee52d43a8082981\": {\n            \"label\": \"LG Optimus LTE, Optimus 4X HD\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 1.7,\n            \"dpWidth\": 424,\n            \"dpHeight\": 2176\n        },\n        \"0732887e6e324fd10777b735520a34cf\": {\n            \"label\": \"LG Optimus One\",\n            \"width\": 320,\n            \"height\": 480,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 213,\n            \"dpHeight\": 720\n        },\n        \"2e38a78364f09d0da0e9e1a3a68e7fb0\": {\n            \"label\": \"Motorola Defy, Droid, Droid X, Milestone\",\n            \"width\": 480,\n            \"height\": 854,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1281\n        },\n        \"bd4b78dddc7c9625a4141a1b1ddabb87\": {\n            \"label\": \"Motorola Droid 3, Droid 4, Droid Razr, Atrix 4G, Atrix 2\",\n            \"width\": 540,\n            \"height\": 960,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 540,\n            \"dpHeight\": 960\n        },\n        \"3bf1edf21cfa81006183d2b02974c84e\": {\n            \"label\": \"Motorola Droid Razr HD\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 720,\n            \"dpHeight\": 1280\n        },\n        \"ab5a352e0e016b97dac986f06c394f55\": {\n            \"label\": \"Nokia C5, C6, C7, N97, N8, X7\",\n            \"width\": 360,\n            \"height\": 640,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 360,\n            \"dpHeight\": 640\n        },\n        \"4826fb7d7257aeaac992ce699df41b3c\": {\n            \"label\": \"Nokia Lumia 7X0, Lumia 8XX, Lumia 900, N800, N810, N900\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"0a691ab20add7c432200f8fa6527b488\": {\n            \"label\": \"Samsung Galaxy Note\",\n            \"width\": 800,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 400,\n            \"dpHeight\": 2560\n        },\n        \"9c23ee31be29960fbac9e9bbfc2fc7b0\": {\n            \"label\": \"Samsung Galaxy Note 3\",\n            \"width\": 1080,\n            \"height\": 1920,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 540,\n            \"dpHeight\": 3840\n        },\n        \"92177c0508c1d73905a58e2338f2a81f\": {\n            \"label\": \"Samsung Galaxy Note II\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"5222b8866dc4cc606725e16ffcc0a783\": {\n            \"label\": \"Samsung Galaxy S III, Galaxy Nexus\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"37c1541e2bd55cfd0f4073b0ccdf68b3\": {\n            \"label\": \"Samsung Galaxy S, S II, W\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"2f7f64b7dda0144907ff300e83eed465\": {\n            \"label\": \"Samsung Galaxy S4\",\n            \"width\": 1080,\n            \"height\": 1920,\n            \"scaleFactor\": 3,\n            \"dpWidth\": 360,\n            \"dpHeight\": 5760\n        },\n        \"9c24f9057744dad56043702a9703127f\": {\n            \"label\": \"Sony Xperia S, Ion\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"0a8b2732a016a9395c3af5f12dd9c0da\": {\n            \"label\": \"Sony Xperia Sola, U\",\n            \"width\": 480,\n            \"height\": 854,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 480,\n            \"dpHeight\": 854\n        },\n        \"5a153d7f53d82dcb0801f041574a6a43\": {\n            \"label\": \"Sony Xperia Z, Z1\",\n            \"width\": 1080,\n            \"height\": 1920,\n            \"scaleFactor\": 3,\n            \"dpWidth\": 360,\n            \"dpHeight\": 5760\n        }\n    },\n    \"screens\": {\n        \"9e523ae15b61dc766f5c818726881ecf\": {\n            \"label\": \"1920 \\u00d7 1080\",\n            \"width\": 1920,\n            \"height\": 1080,\n            \"dpWidth\": 1920,\n            \"dpHeight\": 1080,\n            \"scaleFactor\": 1\n        },\n        \"07769cd8d0a7d09818b2f0b018042fb7\": {\n            \"label\": \"1366 \\u00d7 768\",\n            \"width\": 1366,\n            \"height\": 768,\n            \"dpWidth\": 1366,\n            \"dpHeight\": 768,\n            \"scaleFactor\": 1\n        },\n        \"72d5478a24194f98b9378e8e0fd65737\": {\n            \"label\": \"1280 \\u00d7 1024\",\n            \"width\": 1280,\n            \"height\": 1024,\n            \"dpWidth\": 1280,\n            \"dpHeight\": 1024,\n            \"scaleFactor\": 1\n        },\n        \"b7a6dd5900cc72e61f0d3479c7e314ec\": {\n            \"label\": \"1280 \\u00d7 800\",\n            \"width\": 1280,\n            \"height\": 800,\n            \"dpWidth\": 1280,\n            \"dpHeight\": 800,\n            \"scaleFactor\": 1\n        },\n        \"43193b0ff671a37d8232ab664190a125\": {\n            \"label\": \"1024 \\u00d7 768\",\n            \"width\": 1024,\n            \"height\": 768,\n            \"dpWidth\": 1024,\n            \"dpHeight\": 768,\n            \"scaleFactor\": 1\n        },\n        \"c29e48814af5443ff5688d9e967ce917\": {\n            \"label\": \"800 \\u00d7 600\",\n            \"width\": 800,\n            \"height\": 600,\n            \"dpWidth\": 800,\n            \"dpHeight\": 600,\n            \"scaleFactor\": 1\n        }\n    }\n};});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA;\n */\n/**\n * Helper to work with screen values and mobile devices list\n * for \"select device\" select-box  on any test-item preview  page\n * for example using scale plugin app/taoQtiTestPreviewer/views/js/previewer/plugins/tools/scale/scale.js\n *\n * @author Dieter Raber <dieter@taotesting.com>\n * @author Pavel Hendelman <pavel@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/helpers/devices',[\n    'lodash',\n    'json!taoQtiTestPreviewer/previewer/resources/devices.json'\n], function (\n    _,\n    deviceList\n) {\n    'use strict';\n\n    /**\n     * @typedef {Object} deviceScreen\n     * @property {String} value - The selector's value to use\n     * @property {String} label - The label to display in the selector\n     * @property {Number} width - The width of the screen\n     * @property {Number} height - The height of the screen\n     */\n\n    /**\n     * Translation map to convert a device type to a collection's name in the provided list.\n     * @type {Object}\n     */\n    var deviceTypeMap = {\n        'mobile': 'tablets',\n        'desktop': 'screens'\n    };\n\n    /**\n     * Helpers to get the list of devices\n     */\n    var devicesHelper = {\n        /**\n         * Gets the list of devices to test item through. This list is meant to be used by a selector.\n         * @param {String} type - The type of device from the list ['mobile', 'desktop']\n         * @returns {deviceScreen[]} - The list of devices to test item through, filtered by the provided type\n         */\n        getDevicesByType : function getDevicesByType(type) {\n            /*\n             * @todo\n             * The device list is currently based on the devices found on the Chrome emulator.\n             * This is not ideal and should be changed in the future.\n             * I have http://en.wikipedia.org/wiki/List_of_displays_by_pixel_density in mind but we\n             * will need to figure what criteria to apply when generating the list.\n             */\n            var key = deviceTypeMap[type];\n\n            return _.map(deviceList[key] || [], function mapDeviceData(device, identifier) {\n                return {\n                    value: identifier,\n                    label: device.label,\n                    width: device.width,\n                    height: device.height\n                };\n            });\n        },\n\n        /**\n         * Gets the list of mobile devices\n         * @returns {deviceScreen[]} - The list of mobile devices to test item through\n         */\n        getMobileDevices: function getMobileDevices() {\n            return devicesHelper.getDevicesByType('mobile');\n        },\n\n        /**\n         * Gets the list of desktop devices\n         * @returns {deviceScreen[]} - The list of desktop devices to test item through\n         */\n        getDesktopDevices: function getDesktopDevices() {\n            return devicesHelper.getDevicesByType('desktop');\n        }\n    };\n\n    return devicesHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Content Plugin : cloneLogoInTestPreview\n *\n * This plugin can be used as a hook to clone logo from the header in the back office to the header in the test preview\n *\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/content/cloneLogoInTestPreview',['jquery', 'taoTests/runner/plugin'], function ($, pluginFactory) {\n    'use strict';\n\n    return pluginFactory({\n        name: 'cloneLogoInTestPreview',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            const testRunner = this.getTestRunner();\n\n            testRunner.after('ready', () => {\n                // clone logo to preview - because logo source + class + styles can be customized by client extension\n                $('#tao-main-logo').clone().appendTo('.previewer-test-component header');\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Content Plugin : EnhancedReadOnlyMode\n *\n * This plugin can be used as a hook to do modification in the item preview for read only mode\n *\n * @author Ansul Sharma <ansul@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/content/enhancedReadOnlyMode',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin'\n], function ($, _, __, pluginFactory) {\n    'use strict';\n\n    return pluginFactory({\n\n        name: 'EnhancedReadOnlyMode',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            const testRunner = this.getTestRunner();\n\n            /**\n             * Enables the plugin only in readOnly mode\n             * @returns {Boolean}\n             */\n            const isPluginAllowed = () => {\n                const config = testRunner.getConfig();\n                return config.options.readOnly;\n            };\n\n            testRunner\n                .after('renderitem', () => {\n                    if (isPluginAllowed()) {\n                        const $contentArea = testRunner.getAreaBroker().getContentArea();\n                        const $extendedTextinteractionTextAreas = $contentArea.find('.qti-extendedTextInteraction textarea.text-container');\n                        const $ckeEditorsContent = $contentArea.find('.qti-extendedTextInteraction div.cke_contents');\n\n                        /**\n                         * Updates the height of textarea element of all extended text interactions based on the height of the content\n                         */\n                        if($extendedTextinteractionTextAreas.length) {\n                            $extendedTextinteractionTextAreas.each(function() {\n                                this.style.height = `${this.scrollHeight + 20}px`;\n                            });\n                        }\n\n                        /**\n                         * Updates the height of all the ckeEditor container of wysiwyg extended text interaction based on the height of the iFrame\n                         */\n                        if($ckeEditorsContent.length) {\n                            $ckeEditorsContent.each(function() {\n                                const $ckeEditorContent = $(this);\n                                const $ckeEditorIFrame = $ckeEditorContent.find('iframe.cke_wysiwyg_frame');\n\n                                /**\n                                 * Only update the height when the iFrame has finished loading the styles because font-size may change the height\n                                 */\n                                $ckeEditorIFrame.on('load', () => {\n                                    setTimeout(() => {\n                                        const ckeEditorBody = $ckeEditorIFrame[0].contentWindow.document.querySelector('body');\n                                        $ckeEditorContent[0].style.height = `${ckeEditorBody.scrollHeight + 20}px`;\n                                    }, 0);\n                                });\n                            });\n                        }\n                    }\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Control Plugin : Close\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/controls/close',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, buttonTpl) {\n    'use strict';\n\n    return pluginFactory({\n\n        name: 'close',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            function isPluginAllowed() {\n                var config = testRunner.getConfig();\n                return !config.options.hideActionBars;\n            }\n\n            this.$element = $(buttonTpl({\n                control: 'close',\n                title: __('Close the previewer'),\n                icon: 'close',\n                text: __('Close'),\n                className: 'context-action'\n            }));\n\n            this.$element.on('click', function (e) {\n                e.preventDefault();\n                if (self.getState('enabled') !== false) {\n                    self.disable();\n                    testRunner.trigger('finish');\n                }\n            });\n\n            this.disable();\n\n            testRunner\n                .on('enablenav', function () {\n                  if (isPluginAllowed()) {\n                      self.enable();\n                  }\n                })\n                .on('disablenav', function () {\n                    self.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n\n            //attach the element to the navigation area\n            var $container = this.getAreaBroker().getArea('context');\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.$element.prop('disabled', false)\n                .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.$element.prop('disabled', true)\n                .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"preview-console hidden\\\">\\n    <ul class=\\\"preview-console-body\\\"></ul>\\n</div>\";\n  }); });\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-line', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li><pre><span class=\\\"log-time\\\">\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span><span class=\\\"log-type\\\">\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span><span class=\\\"log-message\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span></pre></li>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-closer', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<span class=\\\"icon-close preview-console-closer hidden\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close console\", options) : helperMissing.call(depth0, \"__\", \"Close console\", options)))\n    + \"\\\"></span>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2021 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Navigation Plugin : Submit\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/navigation/submit/submit',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/hider',\n    'ui/autoscroll',\n    'util/strPad',\n    'taoTests/runner/plugin',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/runner/rendererStrategies',\n    'tpl!taoQtiTest/runner/plugins/templates/button',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-line',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-closer'\n], function (\n    $,\n    _,\n    __,\n    moment,\n    hider,\n    autoscroll,\n    strPad,\n    pluginFactory,\n    pciResponse,\n    rendererStrategies,\n    buttonTpl,\n    consoleTpl,\n    consoleLineTpl,\n    consoleCloserTpl\n) {\n    'use strict';\n\n    /**\n     * Some default config for the plugin\n     * @type {Object}\n     */\n    const defaults = {\n        submitTitle: __('Submit and show the result'),\n        submitText: __('Submit'),\n        submitIcon: 'forward'\n    };\n\n    return pluginFactory({\n\n        name: 'submit',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            const testRunner = this.getTestRunner();\n            const pluginConfig = _.defaults(this.getConfig(), defaults);\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            const isPluginAllowed = () => {\n                const config = testRunner.getConfig();\n                return !config.options.readOnly && rendererStrategies(config.options.view).getName() !== 'reviewRenderer';\n            };\n\n            // display the console and its related controls, then auto scrolls to the last element\n            const showConsole = () => {\n                hider.show(this.controls.$console);\n                hider.show(this.controls.$consoleBody);\n                hider.show(this.controls.$consoleCloser);\n                autoscroll(this.controls.$consoleBody.children().last(), this.controls.$consoleBody);\n            };\n\n            // hide the console and its related controls\n            const hideConsole = () => {\n                hider.hide(this.controls.$console);\n                hider.hide(this.controls.$consoleCloser);\n            };\n\n            // add a line to the console\n            const addConsoleLine = (type, message) => {\n                const data = {\n                    time: strPad(moment().format('HH:mm:ss'), 12, ' '),\n                    type: strPad(type || '', 18, ' '),\n                    message: strPad(message || '', 18, ' ')\n                };\n                this.controls.$consoleBody.append($(consoleLineTpl(data)));\n            };\n\n            // display responses in the console\n            const showResponses = (type, responses) => {\n                _.forEach(responses, (response, identifier) => {\n                    addConsoleLine(type, strPad(`${identifier}: `, 15, ' ') + _.escape(pciResponse.prettyPrint(response)));\n                });\n            };\n\n            this.controls = {\n                $button: $(buttonTpl({\n                    control: 'submit',\n                    title: pluginConfig.submitTitle,\n                    icon: pluginConfig.submitIcon,\n                    text: pluginConfig.submitText\n                })),\n                $console: $(consoleTpl()),\n                $consoleCloser: $(consoleCloserTpl())\n            };\n            this.controls.$consoleBody = this.controls.$console.find('.preview-console-body');\n\n            this.controls.$button.on('click', e => {\n                e.preventDefault();\n                if (this.getState('enabled') !== false) {\n                    this.disable();\n                    testRunner.trigger('submititem');\n                }\n            });\n\n            this.controls.$consoleCloser.on('click', e => {\n                e.preventDefault();\n                hideConsole();\n            });\n\n            if (!isPluginAllowed()) {\n                this.hide();\n            }\n\n            this.disable();\n\n            testRunner\n                .on('render', () => {\n                    if (isPluginAllowed()) {\n                        this.show();\n                    } else {\n                        this.hide();\n                    }\n                })\n                .on('submitresponse', responses => {\n                    showResponses(__('Submitted data'), responses);\n                    showConsole();\n                })\n                .on('scoreitem', responses => {\n                    if (responses.itemSession) {\n                        showResponses(__('Output data'), responses.itemSession);\n                        showConsole();\n                    }\n                })\n                .on('enablenav', () => {\n                    this.enable();\n                })\n                .on('disablenav', () => {\n                    this.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render() {\n            //attach the element to the navigation area\n            const $container = this.getAreaBroker().getContainer();\n            const $navigation = this.getAreaBroker().getNavigationArea();\n            $navigation.append(this.controls.$button);\n            $navigation.append(this.controls.$consoleCloser);\n            $container.append(this.controls.$console);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy() {\n            _.forEach(this.controls, $el => $el.remove());\n            this.controls = null;\n        },\n\n        /**\n         * Enable the button\n         */\n        enable() {\n            this.controls.$button\n                .prop('disabled', false)\n                .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable() {\n            this.controls.$button\n                .prop('disabled', true)\n                .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show() {\n            hider.show(this.controls.$button);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide() {\n            _.forEach(this.controls, hider.hide);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-previewer', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"devices-previewer\\\" data-type=\\\"\";\n  if (helper = helpers.deviceType) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.deviceType); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-orientation=\\\"\";\n  if (helper = helpers.deviceOrientation) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.deviceOrientation); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <div class=\\\"preview-container\\\">\\n        <div class=\\\"preview-frame\\\">\\n            <div class=\\\"preview-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('css!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesPreviewer',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/tools/scale/component/devicesPreviewer',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/transformer',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-previewer',\n    'css!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesPreviewer.css'\n], function ($, _, __, componentFactory, transformer, devicesPreviewerTpl) {\n    'use strict';\n\n    /**\n     * @typedef {Object} size\n     * @property {Number} width\n     * @property {Number} height\n     */\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    var defaults = {\n        deviceType: 'standard',\n        deviceWith: 0,\n        deviceHeight: 0,\n        deviceOrientation: null\n    };\n\n    /**\n     * Builds a devices previewer component. It will works in two modes:\n     * - the standard mode will do nothing special, this is simply a sleeping mode\n     * - the device mode will redesign the view to show a content using a device's layout and aspect ratio\n     *\n     * @example\n     *  var devicesPreviewer = devicesPreviewerFactory('.previewer .previewer-content);\n     *  ...\n     *  // react to changes\n     *  devicesPreviewer\n     *      .on('devicewidthchange', function(width) {\n     *          // the width has changed\n     *      })\n     *      .on('deviceheightchange', function(height) {\n     *          // the height has changed\n     *      })\n     *      .on('deviceorientationchange', function(orientation) {\n     *          // the orientation has changed\n     *      })\n     *      .on('devicetypechange', function(type) {\n     *          // the type has changed\n     *      })\n     *      .on('devicepreview', function() {\n     *          // the device preview mode has been applied\n     *      });\n     *  ...\n     *  // apply changes\n     *  devicesPreviewer\n     *      .setDeviceType(type)\n     *      .setDeviceOrientation(orientation)\n     *      .setDeviceWidth(width)\n     *      .setDeviceHeight(height)\n     *      .previewDevice();\n     * ...\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @param {String} [config.deviceType='standard'] - The preview mode to apply\n     * @param {Number} [config.deviceWidth=null] - The width of the device to preview\n     * @param {Number} [config.deviceHeight=null] - The height of the device to preview\n     * @param {String} [config.deviceOrientation='landscape'] - The device orientation\n     * @returns {devicesPreviewer}\n     * @fires ready - When the component is ready to work\n     */\n    function devicesPreviewerFactory(container, config) {\n        var controls = null;\n\n        /**\n         * Remove the applied scale\n         */\n        var resetScale = function resetScale() {\n            if (controls) {\n                controls.$previewContent.removeAttr('style');\n                controls.$previewContainer.removeAttr('style');\n            }\n        };\n\n        // component specific API\n        var api = {\n            /**\n             * Gets the device width.\n             * @returns {Number}\n             */\n            getDeviceWidth: function getDeviceWidth() {\n                return this.getConfig().deviceWidth;\n            },\n\n            /**\n             * Sets the device width.\n             * @param {String|Number} width\n             * @returns {devicesPreviewer}\n             * @fires devicewidthchange\n             */\n            setDeviceWidth: function setDeviceWidth(width) {\n                var componentConfig = this.getConfig();\n                componentConfig.deviceWidth = parseInt(width, 10) || 0;\n\n                /**\n                 * @event devicewidthchange\n                 * @param {Number} deviceWidth\n                 */\n                this.trigger('devicewidthchange', componentConfig.deviceWidth);\n\n                return this;\n            },\n\n            /**\n             * Gets the device height.\n             * @returns {Number}\n             */\n            getDeviceHeight: function getDeviceHeight() {\n                return this.getConfig().deviceHeight;\n            },\n\n            /**\n             * Sets the device height.\n             * @param {String|Number} height\n             * @returns {devicesPreviewer}\n             * @fires deviceheightchange\n             */\n            setDeviceHeight: function setDeviceHeight(height) {\n                var componentConfig = this.getConfig();\n                componentConfig.deviceHeight = parseInt(height, 10) || 0;\n\n                /**\n                 * @event deviceheightchange\n                 * @param {Number} deviceHeight\n                 */\n                this.trigger('deviceheightchange', componentConfig.deviceHeight);\n\n                return this;\n            },\n\n            /**\n             * Gets the device orientation.\n             * @returns {String}\n             */\n            getDeviceOrientation: function getDeviceOrientation() {\n                return this.getConfig().deviceOrientation;\n            },\n\n            /**\n             * Sets the device orientation.\n             * @param {String} orientation\n             * @returns {devicesPreviewer}\n             * @fires deviceorientationchange\n             */\n            setDeviceOrientation: function setDeviceOrientation(orientation) {\n                var componentConfig = this.getConfig();\n                componentConfig.deviceOrientation = orientation;\n\n                if (this.is('rendered')) {\n                    // use .attr() instead of .data() to ensure the DOM will be properly updated\n                    // this is required as CSS must take the relay to control the display\n                    this.getElement().attr('data-orientation', componentConfig.deviceOrientation);\n                }\n\n                /**\n                 * @event deviceorientationchange\n                 * @param {String} deviceOrientation\n                 */\n                this.trigger('deviceorientationchange', componentConfig.deviceOrientation);\n\n                return this;\n            },\n\n            /**\n             * Tells if the previewer has entered in a device mode or in the standard mode.\n             * Standard mode means 'actual size'.\n             * @returns {Boolean}\n             */\n            isDeviceMode: function isDeviceMode() {\n                return this.getDeviceType() !== 'standard';\n            },\n\n            /**\n             * Gets the device type.\n             * @returns {String}\n             */\n            getDeviceType: function getDeviceType() {\n                return this.getConfig().deviceType;\n            },\n\n            /**\n             * Sets the type of device\n             * @param {String} type\n             * @returns {devicesPreviewer}\n             * @fires devicetypechange\n             */\n            setDeviceType: function setDeviceType(type) {\n                var componentConfig = this.getConfig();\n                componentConfig.deviceType = type;\n\n                if (this.is('rendered')) {\n                    // use .attr() instead of .data() to ensure the DOM will be properly updated\n                    // this is required as CSS must take the relay to control the display\n                    this.getElement().attr('data-type', componentConfig.deviceType);\n                }\n\n                /**\n                 * @event devicetypechange\n                 * @param {String} deviceType\n                 */\n                this.trigger('devicetypechange', componentConfig.deviceType);\n\n                return this;\n            },\n\n            /**\n             * Previews the content using the current device settings\n             * @returns {devicesPreviewer}\n             * @fires devicepreview after the device has been set on preview\n             */\n            previewDevice: function previewDevice() {\n                var width, height;\n\n                if (this.is('rendered')) {\n                    if (this.is('disabled') || this.getDeviceType() === 'standard') {\n                        // standard mode and disabled state both should be reflected by a \"no scale\" view\n                        this.clearScale();\n                    } else {\n                        // in device preview mode, we need to apply the device's size with respect to the orientation\n                        if (this.getDeviceOrientation() === 'portrait') {\n                            width = this.getDeviceHeight();\n                            height = this.getDeviceWidth();\n                        } else {\n                            width = this.getDeviceWidth();\n                            height = this.getDeviceHeight();\n                        }\n                        this.applyScale(width, height);\n                    }\n\n                    /**\n                     * @event devicepreview\n                     */\n                    this.trigger('devicepreview');\n                }\n\n                return this;\n            },\n\n            /**\n             * Removes the scale settings applied on the devices previewer\n             * @returns {devicesPreviewer}\n             * @fires scaleclear after the scale settings have been cleared\n             */\n            clearScale: function clearScale() {\n                if (this.is('rendered')) {\n                    resetScale();\n\n                    /**\n                     * @event scaleclear\n                     */\n                    this.trigger('scaleclear');\n                }\n\n                return this;\n            },\n\n            /**\n             * Computes and applies the scale settings on the devices previewer\n             * @param {Number} width\n             * @param {Number} height\n             * @returns {devicesPreviewer}\n             * * @fires scalechange after the scale settings have been applied\n             */\n            applyScale: function applyScale(width, height) {\n                var frameSize, frameMargins, scaleFactor;\n\n                if (this.is('rendered')) {\n                    resetScale();\n\n                    frameSize = this.getFrameSize();\n                    frameMargins = this.getFrameMargins();\n                    scaleFactor = this.getScaleFactor(width, height);\n\n                    controls.$previewContent\n                        .width(width)\n                        .height(height);\n\n                    controls.$previewContainer\n                        .css('left', (frameSize.width - (width + frameMargins.width) * scaleFactor) / 2)\n                        .width(width + frameMargins.width)\n                        .height(height + frameMargins.height);\n\n                    transformer.setTransformOrigin(controls.$previewContainer, 0, 0);\n                    transformer.scale(controls.$previewContainer, scaleFactor);\n\n                    /**\n                     * @event scalechange\n                     */\n                    this.trigger('scalechange');\n                }\n\n                return this;\n            },\n\n            /**\n             * Computes and gets the margins of the previewer frame\n             * @returns {size}\n             */\n            getFrameMargins: function getFrameMargins() {\n                var margins = {\n                    width: 0,\n                    height: 0\n                };\n                if (this.is('rendered')) {\n                    margins.width = controls.$previewContainer.outerWidth() - controls.$previewContent.width();\n                    margins.height = controls.$previewContainer.outerHeight() - controls.$previewContent.height();\n                }\n                return margins;\n            },\n\n            /**\n             * Computes and gets the available size in the previewer frame\n             * @returns {size}\n             */\n            getFrameSize: function getFrameSize() {\n                var size = {\n                    width: 0,\n                    height: 0\n                };\n                if (this.is('rendered')) {\n                    size.width = this.getContainer().innerWidth();\n                    size.height = this.getContainer().innerHeight();\n                }\n                return size;\n            },\n\n            /**\n             * Computes and gets the scale factor of the previewer frame\n             * @param {Number} width\n             * @param {Number} height\n             * @returns {Number}\n             */\n            getScaleFactor: function getScaleFactor(width, height) {\n                var margins, frameSize;\n                var scaleFactor = {\n                    x: 1,\n                    y: 1\n                };\n                if (this.is('rendered') && this.isDeviceMode()) {\n                    frameSize = this.getFrameSize();\n                    margins = this.getFrameMargins();\n                    width += margins.width;\n                    height += margins.height;\n\n                    if (width > frameSize.width) {\n                        scaleFactor.x = frameSize.width / width;\n                    }\n\n                    if (height > frameSize.height) {\n                        scaleFactor.y = frameSize.height / height;\n                    }\n                }\n                return Math.min(scaleFactor.x, scaleFactor.y);\n            },\n\n            /**\n             * Wraps the previewed content into the previewer frame\n             * @param {HTMLElement|jQuery} element\n             * @returns {devicesPreviewer}\n             * @fires wrap after the element has been wrapped\n             */\n            wrap: function wrap(element) {\n                if (this.is('rendered')) {\n                    // restore current wrapped element to its previous place\n                    this.unwrap();\n\n                    // move the element to wrap in the preview container\n                    controls.$wrappedElement = $(element);\n                    controls.$wrappedElementContainer = controls.$wrappedElement.parent();\n                    controls.$previewContent.append(controls.$wrappedElement);\n\n                    /**\n                     * @event wrap\n                     * @param {jQuery} $wrappedElement - The element that has been wrapped\n                     */\n                    this.trigger('wrap', controls.$wrappedElement);\n                }\n\n                return this;\n            },\n\n            /**\n             * Unwraps the previewed content from the previewer frame\n             * @returns {devicesPreviewer}\n             * @fires unwrap after the element has been unwrapped\n             */\n            unwrap: function unwrap() {\n                var $wasWrappedElement;\n                if (this.is('rendered') && controls.$wrappedElement) {\n                    $wasWrappedElement = controls.$wrappedElement;\n\n                    // restore current wrapped element to its previous place\n                    controls.$wrappedElementContainer.append(controls.$wrappedElement);\n                    controls.$wrappedElement = null;\n                    controls.$wrappedElementContainer = null;\n\n                    /**\n                     * @event unwrap\n                     * @param {jQuery} $wrappedElement - The element that was wrapped\n                     */\n                    this.trigger('unwrap', $wasWrappedElement);\n                }\n\n                return this;\n            }\n        };\n\n        // build and setup the component\n        var devicesPreviewer = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(devicesPreviewerTpl)\n\n            // auto render on init\n            .on('init', function () {\n                var componentConfig = this.getConfig();\n\n                // init the internal state\n                this.setDeviceType(componentConfig.deviceType);\n                this.setDeviceWidth(componentConfig.deviceWidth);\n                this.setDeviceHeight(componentConfig.deviceHeight);\n                this.setDeviceOrientation(componentConfig.deviceOrientation);\n\n                // auto render on init\n                _.defer(function () {\n                    devicesPreviewer.render(container);\n                });\n            })\n\n            // renders the component\n            .on('render', function () {\n                var $element = this.getElement();\n                controls = {\n                    // internal elements\n                    $previewContainer: $element.find('.preview-container'),\n                    $previewFrame: $element.find('.preview-frame'),\n                    $previewContent: $element.find('.preview-content'),\n\n                    // placeholder for the wrapped element\n                    $wrappedElement: null,\n                    $wrappedElementContainer: null\n                };\n\n                /**\n                 * @event ready\n                 */\n                this.trigger('ready');\n            })\n\n            // take care of the disable state\n            .on('disable enable', function () {\n                var self = this;\n                if (this.is('rendered')) {\n                    // need to defer the call as the enable/disable events are emitted before the state is updated\n                    _.defer(function () {\n                        self.previewDevice();\n                    });\n                }\n            })\n\n            // cleanup the place\n            .on('destroy', function () {\n                this.unwrap();\n                controls = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(function () {\n            devicesPreviewer.init(config);\n        });\n\n        return devicesPreviewer;\n    }\n\n    return devicesPreviewerFactory;\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-selector', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"devices-selector\\\" data-type=\\\"standard\\\">\\n    <div class=\\\"selector type-selector\\\"></div>\\n    <div class=\\\"selector desktop-selector\\\"></div>\\n    <div class=\\\"selector mobile-selector\\\"></div>\\n    <div class=\\\"selector orientation-selector\\\"></div>\\n</div>\";\n  }); });\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/selector', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <option value=\\\"\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"selected=\\\"selected\\\"\";\n  }\n\n  buffer += \"<select class=\\\"select2\\\" name=\\\"\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-category=\\\"\";\n  if (helper = helpers.category) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.category); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-has-search=\\\"false\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</select>\";\n  return buffer;\n  }); });\n","\ndefine('css!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesSelector',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/tools/scale/component/devicesSelector',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/selecter',\n    'taoQtiTestPreviewer/previewer/helpers/devices',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-selector',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/selector',\n    'css!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesSelector.css'\n], function ($, _, __, componentFactory, lookupSelecter, devicesHelper, devicesSelectorTpl, selectorTpl) {\n    'use strict';\n\n    /**\n     * @typedef {Object} selectorEntry\n     * @property {String} value - The value that identifies the entry\n     * @property {String} label - The text displayed to describe the entry\n     */\n\n    /**\n     * @typedef {selectorEntry} mainSelectorEntry\n     * @property {Boolean} devicesList - tells if a list of devices is expected\n     * @property {Boolean} orientation - tells if a list of orientations is expected\n     */\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    var defaults = {\n        type: 'standard',\n        device: null,\n        orientation: 'landscape'\n    };\n\n    /**\n     * List of available types of devices\n     * @type {mainSelectorEntry[]}\n     */\n    var deviceTypesList = [{\n        value: 'standard',\n        label: __('Actual size'),\n        devicesList: false,\n        orientation: false\n    }, {\n        value: 'desktop',\n        label: __('Desktop preview'),\n        devicesList: true,\n        orientation: false\n    }, {\n        value: 'mobile',\n        label: __('Mobile preview'),\n        devicesList: true,\n        orientation: true\n    }];\n\n    /**\n     * List of available orientations\n     * @type {selectorEntry[]}\n     */\n    var deviceOrientationsList = [{\n        value: 'landscape',\n        label: __('Landscape')\n    }, {\n        value: 'portrait',\n        label: __('Portrait')\n    }];\n\n    /**\n     * Map selector's names to setter callbacks.\n     * This will be used to call the expected setter when selecting a value.\n     * @see devicesSelector.select()\n     * @type {Object}\n     */\n    var callbackMap = {\n        type: 'setType',\n        device: 'setDevice',\n        mobile: 'setDevice',\n        desktop: 'setDevice',\n        orientation: 'setOrientation'\n    };\n\n    /**\n     * Gets the data for a selected entry\n     * @param {String} selected\n     * @param {selectorEntry[]|deviceScreen[]} list\n     * @returns {selectorEntry|deviceScreen|null}\n     */\n    function getSelectorData(selected, list) {\n        if (selected && _.size(list)) {\n            return _.find(list, {value: selected}) || null;\n        }\n        return null;\n    }\n\n    /**\n     * Ensures an identifier is valid with respect to the provided list, or defaulted to null.\n     * @param {String} identifier\n     * @param {selectorEntry[]} list\n     * @returns {String|null}\n     */\n    function getValidIdentifier(identifier, list) {\n        if (list && list.length) {\n            if (_.find(list, {value: identifier})) {\n                return identifier;\n            } else {\n                return _.first(list).value;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Update a Select2 control\n     * @param {jQuery} $selector\n     * @param {String} value\n     * @returns {jQuery}\n     */\n    function updateSelect2($selector, value) {\n        var current = $selector.val();\n        // avoid to stress the setters if the value is already set\n        if (current !== value) {\n            $selector.val(value);\n            $selector.trigger('change');\n        }\n        return $selector;\n    }\n\n    /**\n     * Uninstalls a Select2 control\n     * @param {jQuery} $selector\n     * @returns {jQuery}\n     */\n    function removeSelect2($selector) {\n        if ($selector.hasClass(\"select2-offscreen\")) {\n            $selector.select2('destroy');\n        }\n        return $selector;\n    }\n\n    /**\n     * Builds a devices selector component. It will provides 3 selectors in cascade:\n     * - the first allows to select the type of device\n     * - the second allows to select the device itself, the list being filtered by the value of the first selector\n     * - the third allows to select the display orientation, if applicable\n     *\n     * @example\n     *  var devicesSelector = devicesSelectorFactory('.previewer .previewer-top-bar);\n     *  ...\n     *  // react to type change\n     *  devicesSelector.on('typechange', function(type) {\n     *      if (!this.isDeviceMode()) {\n     *          // reset the type to standard, we can re-apply the default size\n     *      }\n     *  });\n     *\n     *  // react to device change\n     *  devicesSelector.on('devicechange', function(device, data) {\n     *      // apply the size provided in data\n     *  });\n     *\n     *  // react to orientation change\n     *  devicesSelector.on('orientationchange', function(orientation) {\n     *      // apply the orientation\n     *  });\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @param {String} [config.type='standard'] - The default selected device type\n     * @param {String} [config.device=null] - The default selected device\n     * @param {String} [config.orientation='landscape'] - The default selected orientation\n     * @returns {devicesSelector}\n     * @fires ready - When the component is ready to work\n     */\n    function devicesSelectorFactory(container, config) {\n        // internal state\n        var selected = {\n            type: null,\n            device: null,\n            orientation: null,\n            desktop: null,\n            mobile: null\n        };\n        var devicesList = [];\n        var typeData = null;\n        var controls = null;\n\n        /**\n         * Changes a DOM property on each selector\n         * @param {String} property\n         * @param {String|Boolean|Number} value\n         */\n        var setControlsProp = function setControlsProp(property, value) {\n            _.forEach(controls, function($selector) {\n                $selector.prop(property, value);\n            });\n        };\n\n        // component specific API\n        var api = {\n            /**\n             * Tells if the selector has entered in a device mode or in the standard mode.\n             * Standard mode means 'actual size'.\n             * @returns {Boolean}\n             */\n            isDeviceMode: function isDeviceMode() {\n                return selected.type !== 'standard';\n            },\n\n            /**\n             * Reflects the mode to the DOM\n             * @returns {devicesSelector}\n             */\n            updateMode: function updateMode() {\n                // use .attr() instead of .data() to ensure the DOM will be properly updated\n                // this is required as CSS must take the relay to control the display\n                if (this.is('rendered')) {\n                    this.getElement().attr('data-type', selected.type);\n                }\n                return this;\n            },\n\n            /**\n             * Gets the selected device type.\n             * @returns {String} The type of device, from the list `['standard', 'mobile', 'desktop']`\n             */\n            getType: function getType() {\n                return selected.type;\n            },\n\n            /**\n             * Gets the selected device orientation.\n             * If the current mode is not a device mode (i.e. actual size), null is returned.\n             * @returns {String}\n             */\n            getOrientation: function getOrientation() {\n                if (typeData && typeData.orientation) {\n                    return selected.orientation;\n                }\n                return null;\n            },\n\n            /**\n             * Gets the identifier of the selected device.\n             * If the current mode is not a device mode (i.e. actual size), null is returned.\n             * @returns {String|null}\n             */\n            getDevice: function getDevice() {\n                if (typeData && typeData.devicesList) {\n                    return selected.device;\n                }\n                return null;\n            },\n\n            /**\n             * Gets the data for the selected device.\n             * If the current mode is not a device mode (i.e. actual size), null is returned.\n             * @returns {deviceScreen|null}\n             */\n            getDeviceData: function getDeviceData() {\n                return getSelectorData(this.getDevice(), devicesList);\n            },\n\n            /**\n             * Selects a type of device\n             * @param {String} identifier\n             * @returns {devicesSelector}\n             * @fires typechange event after the type has been changed\n             * @fires devicechange event after the device has been updated if a list of devices is expected\n             */\n            setType: function setType(identifier) {\n                // validate the identifier before applying the change\n                identifier = getValidIdentifier(identifier, deviceTypesList);\n                if (identifier !== selected.type) {\n                    selected.type = identifier;\n                    selected.device = null;\n\n                    // when the type changes, the list of devices must be updated\n                    devicesList = devicesHelper.getDevicesByType(selected.type);\n                    typeData = getSelectorData(selected.type, deviceTypesList);\n\n                    // update the rendered content\n                    if (this.is('rendered')) {\n                        updateSelect2(controls.$typeSelector, selected.type);\n                        this.updateMode();\n                    }\n\n                    /**\n                     * @event typechange\n                     * @param {String} selectedType\n                     */\n                    this.trigger('typechange', selected.type);\n\n                    // the current device must be adapted if a list of devices is expected\n                    if (typeData.devicesList) {\n                        this.setDevice(selected[selected.type]);\n                    }\n                }\n                return this;\n            },\n\n            /**\n             * Sets the selected device orientation\n             * @param {String} identifier\n             * @returns {devicesSelector}\n             * @fires orientationchange event after the type has been changed\n             */\n            setOrientation: function setOrientation(identifier) {\n                // validate the identifier before applying the change\n                identifier = getValidIdentifier(identifier, deviceOrientationsList);\n                if (identifier !== selected.orientation) {\n                    selected.orientation = identifier;\n\n                    // update the rendered content\n                    if (this.is('rendered')) {\n                        updateSelect2(controls.$orientationSelector, selected.orientation);\n                    }\n\n                    /**\n                     * @event orientationchange\n                     * @param {String} selectedOrientation\n                     */\n                    this.trigger('orientationchange', selected.orientation);\n                }\n                return this;\n            },\n\n            /**\n             * Selects a device\n             * @param {String} identifier\n             * @returns {devicesSelector}\n             * @fires devicechange event after the device has been changed\n             */\n            setDevice: function setDevice(identifier) {\n                var $selector;\n\n                // validate the identifier before applying the change\n                identifier = getValidIdentifier(identifier, devicesList);\n                if (identifier !== selected.device) {\n                    selected.device = identifier;\n                    selected[selected.type] = identifier;\n\n                    // update the rendered content, depending on the device's category\n                    if (this.is('rendered') && this.isDeviceMode()) {\n                        $selector = controls['$' + selected.type + 'Selector'];\n                        if ($selector) {\n                            updateSelect2($selector, selected.device);\n                        }\n                    }\n\n                    /**\n                     * @event devicechange\n                     * @param {String} selectedDevice\n                     * @param {deviceScreen} deviceData\n                     */\n                    this.trigger('devicechange', selected.device, this.getDeviceData());\n                }\n                return this;\n            },\n\n            /**\n             * Selects a value in the proper selector\n             * @param {String} name - The name of the selector\n             * @param {String} value - The value to select\n             * @returns {devicesSelector}\n             */\n            select: function select(name, value) {\n                var setterName = callbackMap[name];\n                if (setterName && _.isFunction(this[setterName])) {\n                    this[setterName](value);\n                }\n                return this;\n            },\n\n            /**\n             * Reset to default values, from the config.\n             * @returns {devicesSelector}\n             */\n            reset: function reset() {\n                var componentConfig = this.getConfig();\n                this.setType(componentConfig.type);\n                this.setDevice(componentConfig.device);\n                this.setOrientation(componentConfig.orientation);\n                return this;\n            }\n        };\n\n        // build and setup the component\n        var devicesSelector = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(devicesSelectorTpl)\n\n            // auto render on init\n            .on('init', function () {\n                // ensure the initial state is aligned with the config\n                this.reset();\n\n                // auto render on init\n                _.defer(function () {\n                    devicesSelector.render(container);\n                });\n            })\n\n            // renders the component\n            .on('render', function () {\n                var self = this;\n\n                /**\n                 * Renders a selector from a list of entries. Takes care of the currently selected value.\n                 * @param {String} name - The name of the selector\n                 * @param {selectorEntry[]} list - The list of entries\n                 * @param {String} selectedValue - The currently selected value\n                 * @param {String} [category=name] - The category of the selector (type, device, orientation).\n                 *                                   Defaulted to the name if not provided.\n                 * @returns {jQuery}\n                 */\n                function renderSelector(name, list, selectedValue, category) {\n                    var $selector = $(selectorTpl({\n                        name: name,\n                        category: category || name,\n                        items: _.map(list, function(item) {\n                            return {\n                                value: item.value,\n                                label: item.label,\n                                selected: selectedValue === item.value\n                            };\n                        })\n                    }));\n                    self.getElement().find('.' + name + '-selector').html($selector);\n                    return $selector;\n                }\n\n                // create each selector, and keep access to them\n                controls = {\n                    $typeSelector: renderSelector('type', deviceTypesList, selected.type),\n                    $desktopSelector: renderSelector('desktop', devicesHelper.getDesktopDevices(), selected.device, 'device'),\n                    $mobileSelector: renderSelector('mobile', devicesHelper.getMobileDevices(), selected.device, 'device'),\n                    $orientationSelector: renderSelector('orientation', deviceOrientationsList, selected.orientation)\n                };\n                lookupSelecter(this.getElement());\n\n                // react to any change in selectors and then forward the event to the related entry\n                this.getElement().on('change', '.selector', function onSelectorChange(e) {\n                    var $selector = $(e.target).closest('select');\n                    self.select($selector.attr('name'), $selector.val());\n                });\n\n                // initialize the display mode\n                this.updateMode();\n\n                /**\n                 * @event ready\n                 */\n                this.trigger('ready');\n            })\n\n            // take care of the disable state\n            .on('disable', function () {\n                if (this.is('rendered')) {\n                    setControlsProp(\"disabled\", true);\n                }\n            })\n            .on('enable', function () {\n                if (this.is('rendered')) {\n                    setControlsProp(\"disabled\", false);\n                }\n            })\n\n            // cleanup the place\n            .on('destroy', function () {\n                _.forEach(controls, removeSelect2);\n                controls = null;\n                selected = null;\n                typeData = null;\n                devicesList = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(function () {\n            devicesSelector.init(config);\n        });\n\n        return devicesSelector;\n    }\n\n    return devicesSelectorFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Responsive Scale plugin : Scale\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/tools/scale/scale',[\n    'jquery',\n    'lodash',\n    'lib/uuid',\n    'util/namespace',\n    'taoTests/runner/plugin',\n    'taoQtiTestPreviewer/previewer/plugins/tools/scale/component/devicesPreviewer',\n    'taoQtiTestPreviewer/previewer/plugins/tools/scale/component/devicesSelector'\n], function (\n    $,\n    _,\n    uuid,\n    namespaceHelper,\n    pluginFactory,\n    devicesPreviewerFactory,\n    devicesSelectorFactory\n) {\n    'use strict';\n\n    return pluginFactory({\n\n        name: 'scale',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            function isPluginAllowed() {\n                var config = testRunner.getConfig();\n                return !config.options.readOnly;\n            }\n\n            // generate unique id for global events\n            this.nsId = this.getName() + uuid(6);\n\n            if (!isPluginAllowed()) {\n                this.hide();\n            }\n\n            this.disable();\n\n            testRunner\n                .on('render', function () {\n                    if (isPluginAllowed()) {\n                        self.show();\n                    } else {\n                        self.hide();\n                    }\n                })\n                .on('resizeitem', function (size, orientation, type) {\n                    if (self.devicesPreviewer) {\n                        self.devicesPreviewer\n                            .setDeviceType(type)\n                            .setDeviceOrientation(orientation)\n                            .setDeviceWidth(size && size.width)\n                            .setDeviceHeight(size && size.height)\n                            .previewDevice();\n                    }\n                })\n                .on('enablenav', function () {\n                    self.enable();\n                })\n                .on('disablenav', function () {\n                    self.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         * Renders plugins controls on proper place\n         */\n        render: function render() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var areaBroker = this.getAreaBroker();\n\n            /**\n             * Triggers an item resize based on the current selected device\n             */\n            function resizeItem() {\n                if (self.devicesSelector && self.getState('enabled')) {\n                    /**\n                     * @event resizeitem\n                     * @param {deviceScreen} deviceData - The device data, containing width and height\n                     * @param {String} orientation - The device orientation\n                     * @param {String} type - The type of device\n                     */\n                    testRunner.trigger(\n                        'resizeitem',\n                        self.devicesSelector.getDeviceData(),\n                        self.devicesSelector.getOrientation(),\n                        self.devicesSelector.getType()\n                    );\n                }\n            }\n\n            /**\n             * adjust device frame position and size when browser size change\n             */\n            $(window).on(namespaceHelper.namespaceAll('resize orientationchange', this.nsId), _.throttle(function () {\n                if (self.devicesSelector && self.devicesSelector.isDeviceMode()) {\n                    resizeItem();\n                }\n            }, 50));\n\n            return Promise.all([\n                new Promise(function (resolve) {\n                    self.devicesSelector = devicesSelectorFactory(areaBroker.getHeaderArea())\n                        .on('ready', function () {\n                            if (!self.getState('enabled')) {\n                                this.disable();\n                            }\n\n                            this.on('typechange', function () {\n                                if (!this.isDeviceMode()) {\n                                    resizeItem();\n                                }\n                            });\n\n                            this.on('devicechange orientationchange', function () {\n                                resizeItem();\n                            });\n\n                            resolve();\n                        });\n                }),\n                new Promise(function (resolve) {\n                    self.devicesPreviewer = devicesPreviewerFactory(areaBroker.getArea('contentWrapper'))\n                        .on('ready', function () {\n                            this.wrap(areaBroker.getContentArea());\n                            resolve();\n                        });\n                })\n            ]);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         * clears all controls tied to applications DOM\n         * detaches the global events\n         */\n        destroy: function destroy() {\n            if (this.nsId) {\n                $(window).off('.' + this.nsId);\n            }\n            if (this.devicesSelector) {\n                this.devicesSelector.destroy();\n            }\n            if (this.devicesPreviewer) {\n                this.devicesPreviewer.destroy();\n            }\n            this.devicesSelector = null;\n            this.devicesPreviewer = null;\n        },\n\n        /**\n         * Enable default controls\n         */\n        enable: function enable() {\n            if (this.devicesSelector) {\n                this.devicesSelector.enable();\n            }\n        },\n\n        /**\n         * Disable default controls\n         */\n        disable: function disable() {\n            if (this.devicesSelector) {\n                this.devicesSelector.disable();\n            }\n        },\n\n        /**\n         * Show default controls\n         */\n        show: function show() {\n            if (this.devicesSelector) {\n                this.devicesSelector.show();\n            }\n        },\n\n        /**\n         * Hide default controls\n         */\n        hide: function hide() {\n            if (this.devicesSelector) {\n                this.devicesSelector.hide();\n            }\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/provider/item/tpl/item', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<main class=\\\"item-previewer-scope\\\">\\n    <div class=\\\"action-bar content-action-bar horizontal-action-bar top-action-bar\\\">\\n        <div class=\\\"control-box size-wrapper\\\">\\n            <div class=\\\"lft tools-box\\\"></div>\\n            <div class=\\\"rgt navi-box\\\">\\n                <ul class=\\\"plain navi-box-list\\\"></ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"test-runner-sections\\\">\\n\\n        <aside class=\\\"test-sidebar test-sidebar-left\\\"></aside>\\n\\n        <section class=\\\"content-wrapper\\\">\\n            <div id=\\\"qti-content\\\"></div>\\n        </section>\\n    </div>\\n\\n    <nav class=\\\"action-bar content-action-bar horizontal-action-bar bottom-action-bar\\\">\\n        <div class=\\\"control-box size-wrapper\\\">\\n            <div class=\\\"lft tools-box\\\"></div>\\n            <div class=\\\"rgt navi-box\\\">\\n                <ul class=\\\"plain navi-box-list\\\"></ul>\\n            </div>\\n        </div>\\n    </nav>\\n\\n</main>\";\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2020 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner provider for the QTI item previewer\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/provider/item/item',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/feedback',\n    'taoTests/runner/areaBroker',\n    'taoTests/runner/testStore',\n    'taoTests/runner/proxy',\n    'taoQtiTest/runner/ui/toolbox/toolbox',\n    'taoQtiItem/runner/qtiItemRunner',\n    'taoQtiTest/runner/config/assetManager',\n    'taoItems/assets/strategies',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'tpl!taoQtiTestPreviewer/previewer/provider/item/tpl/item'\n], function (\n    $,\n    _,\n    __,\n    feedback,\n    areaBrokerFactory,\n    testStoreFactory,\n    proxyFactory,\n    toolboxFactory,\n    qtiItemRunner,\n    assetManagerFactory,\n    assetStrategies,\n    containerHelper,\n    layoutTpl\n) {\n    'use strict';\n\n    //the asset strategies\n    const assetManager = assetManagerFactory();\n    assetManager.prependStrategy(assetStrategies.taomedia);\n\n    //store the current execution context of the common renderer (preview)\n    let _$previousContext = null;\n    function setContext($context){\n        _$previousContext = containerHelper.getContext();\n        containerHelper.setContext($context);\n    }\n    function restoreContext(){\n        containerHelper.setContext(_$previousContext);\n        _$previousContext = null;\n    }\n    /**\n     * A Test runner provider to be registered against the runner\n     */\n    return {\n\n        //provider name\n        name: 'qtiItemPreviewer',\n\n        /**\n         * Initialize and load the area broker with a correct mapping\n         * @returns {areaBroker}\n         */\n        loadAreaBroker() {\n            const $layout = $(layoutTpl());\n\n            return areaBrokerFactory($layout, {\n                contentWrapper: $('.content-wrapper', $layout),\n                content: $('#qti-content', $layout),\n                toolbox: $('.bottom-action-bar .tools-box', $layout),\n                navigation: $('.bottom-action-bar .navi-box-list', $layout),\n                control: $('.top-action-bar .control-box', $layout),\n                actionsBar: $('.bottom-action-bar .control-box', $layout),\n                panel: $('.test-sidebar-left', $layout),\n                header: $('.top-action-bar .tools-box', $layout),\n                context: $('.top-action-bar .navi-box-list', $layout)\n            });\n        },\n\n        /**\n         * Initialize and load the test runner proxy\n         * @returns {proxy}\n         */\n        loadProxy() {\n            const {proxyProvider, serviceCallId, bootstrap, timeout} = this.getConfig();\n            return proxyFactory(proxyProvider || 'qtiItemPreviewerProxy', {serviceCallId, bootstrap, timeout});\n        },\n\n        /**\n         * Initialize and load the test store\n         * @returns {testStore}\n         */\n        loadTestStore() {\n            const config = this.getConfig();\n\n            //the test run needs to be identified uniquely\n            const identifier = config.serviceCallId || `test-${Date.now()}`;\n            return testStoreFactory(identifier);\n        },\n\n        /**\n         * Installation of the provider, called during test runner init phase.\n         */\n        install() {\n            const {plugins} = this.getConfig().options;\n            if (plugins) {\n                _.forEach(this.getPlugins(), plugin => {\n                    if (_.isPlainObject(plugin) && _.isFunction(plugin.setConfig)) {\n                        const config = plugins[plugin.getName()];\n                        if (_.isPlainObject(config)) {\n                            plugin.setConfig(config);\n                        }\n                    }\n                });\n            }\n        },\n\n        /**\n         * Initialization of the provider, called during test runner init phase.\n         *\n         * We install behaviors during this phase (ie. even handlers)\n         * and we call proxy.init.\n         *\n         * @this {runner} the runner context, not the provider\n         * @returns {Promise} to chain proxy.init\n         */\n        init() {\n            const dataHolder = this.getDataHolder();\n            const areaBroker = this.getAreaBroker();\n\n            areaBroker.setComponent('toolbox', toolboxFactory());\n            areaBroker.getToolbox().init();\n\n            /*\n             * Install behavior on events\n             */\n            this\n                .on('submititem', () => {\n                    const itemState = this.itemRunner.getState();\n                    const itemResponses = this.itemRunner.getResponses();\n\n                    this.trigger('disabletools disablenav');\n                    this.trigger('submitresponse', itemResponses, itemState);\n\n                    return this.getProxy()\n                        .submitItem(dataHolder.get('itemIdentifier'), itemState, itemResponses)\n                        .then(response => {\n                            this.trigger('scoreitem', response);\n                            this.trigger('enabletools enablenav resumeitem');\n                        })\n                        .catch(err => {\n                            this.trigger('enabletools enablenav');\n\n                            //some server errors are valid, so we don't fail (prevent empty responses)\n                            if (err.code === 200) {\n                                this.trigger('alert.submitError',\n                                    err.message || __('An error occurred during results submission. Please retry.'),\n                                    () => this.trigger('resumeitem')\n                                );\n                            }\n                        });\n                })\n                .on('ready', () => {\n                    const itemIdentifier = dataHolder.get('itemIdentifier');\n                    const itemData = dataHolder.get('itemData');\n\n                    if (itemIdentifier) {\n                        if (itemData) {\n                            this.renderItem(itemIdentifier, itemData);\n                        } else {\n                            this.loadItem(itemIdentifier);\n                        }\n                    }\n                })\n                .on('loaditem', (itemRef, itemData) => {\n                    dataHolder.set('itemIdentifier', itemRef);\n                    dataHolder.set('itemData', itemData);\n                })\n                .on('renderitem', () => {\n                    this.trigger('enabletools enablenav');\n                })\n                .on('resumeitem', () => {\n                    this.trigger('enableitem enablenav');\n                })\n                .on('disableitem', () => {\n                    this.trigger('disabletools');\n                })\n                .on('enableitem', () => {\n                    this.trigger('enabletools');\n                })\n                .on('error', () => {\n                    this.trigger('disabletools enablenav');\n                })\n                .on('finish leave', () => {\n                    this.trigger('disablenav disabletools');\n                    this.flush();\n                })\n                .on('flush', () => {\n                    this.destroy();\n                });\n\n            return this.getProxy()\n                .init()\n                .then(data => {\n                    dataHolder.set('itemIdentifier', data.itemIdentifier);\n                    dataHolder.set('itemData', data.itemData);\n                });\n        },\n\n        /**\n         * Rendering phase of the test runner\n         *\n         * Attach the test runner to the DOM\n         *\n         * @this {runner} the runner context, not the provider\n         */\n        render() {\n            const config = this.getConfig();\n            const areaBroker = this.getAreaBroker();\n\n            config.renderTo.append(areaBroker.getContainer());\n\n            areaBroker.getToolbox().render(areaBroker.getToolboxArea());\n        },\n\n        /**\n         * LoadItem phase of the test runner\n         *\n         * We call the proxy in order to get the item data\n         *\n         * @this {runner} the runner context, not the provider\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @returns {Promise} that calls in parallel the state and the item data\n         */\n        loadItem(itemIdentifier) {\n            return this.getProxy().getItem(itemIdentifier);\n        },\n\n        /**\n         * RenderItem phase of the test runner\n         *\n         * Here we initialize the item runner and wrap it's call to the test runner\n         *\n         * @this {runner} the runner context, not the provider\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @param {Object} itemData - The definition data of the item\n         * @returns {Promise} resolves when the item is ready\n         */\n        renderItem(itemIdentifier, itemData) {\n            const areaBroker = this.getAreaBroker();\n            const options = this.getConfig().options;\n\n            const changeState = () => {\n                this.setItemState(itemIdentifier, 'changed', true);\n            };\n\n            setContext(areaBroker.getContentArea());\n\n            return new Promise((resolve, reject) => {\n                itemData.content = itemData.content || {};\n\n                assetManager.setData('baseUrl', itemData.baseUrl);\n                assetManager.setData('assets', itemData.content.assets);\n\n                this.itemRunner = qtiItemRunner(itemData.content.type, itemData.content.data, Object.assign({\n                    assetManager: assetManager\n                }, options))\n                    .on('error', err => {\n                        this.trigger('enablenav');\n                        reject(err);\n                        feedback().error(__('It seems that there is an error during item preview loading. Please, try again.'));\n                    })\n                    .on('init', function onItemRunnerInit() {\n                        const {state, portableElements} = itemData;\n                        this.render(areaBroker.getContentArea(), {state, portableElements});\n                    })\n                    .on('render', function onItemRunnerRender() {\n                        this.on('responsechange', changeState);\n                        this.on('statechange', changeState);\n                        resolve();\n                    })\n                    .init();\n            });\n        },\n\n        /**\n         * UnloadItem phase of the test runner\n         *\n         * Item clean up\n         *\n         * @this {runner} the runner context, not the provider\n         * @returns {Promise} resolves when the item is cleared\n         */\n        unloadItem() {\n            this.trigger('beforeunloaditem disablenav disabletools');\n\n            if (this.itemRunner) {\n                return new Promise(resolve => {\n                    this.itemRunner\n                        .on('clear', resolve)\n                        .clear();\n                });\n            }\n            return Promise.resolve();\n        },\n\n        /**\n         * Destroy phase of the test runner\n         *\n         * Clean up\n         *\n         * @this {runner} the runner context, not the provider\n         */\n        destroy() {\n            const areaBroker = this.getAreaBroker();\n\n            // prevent the item to be displayed while test runner is destroying\n            if (this.itemRunner) {\n                this.itemRunner\n                    .on('clear', restoreContext)\n                    .clear();\n            }\n            this.itemRunner = null;\n\n            if (areaBroker) {\n                areaBroker.getToolbox().destroy();\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiTestPreviewer/previewer/proxy/itemDataHandlers',[\n    'module',\n    'context',\n    'lodash',\n    'core/moduleLoader'\n], function (module, context, _, moduleLoader) {\n    'use strict';\n\n    const moduleConfig = module.config();\n    let handlers = [];\n    if (moduleConfig.handlers) {\n        /*\n         * This loads all the modules from module configuration, which are in the `handlers` array.\n         */\n        moduleLoader({}, _.isFunction)\n            .addList(moduleConfig.handlers)\n            .load(context.bundle)\n            .then(data => (handlers = data));\n    }\n\n    return function itemDataHandlers(itemData) {\n        if (!handlers.length) {\n            return Promise.resolve(itemData);\n        } if (handlers.length === 1) {\n            return handlers[0](itemData);\n        } else {\n            return handlers.reduce(function(prev, cur) {\n                return prev.then(updateItemData => cur(updateItemData)).catch(cur().reject);\n            }, handlers[0](itemData));\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2022 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner proxy for the QTI item previewer\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/proxy/item',[\n    'lodash',\n    'core/promiseQueue',\n    'core/request',\n    'taoQtiTestPreviewer/previewer/config/item',\n    'taoQtiTestPreviewer/previewer/proxy/itemDataHandlers'\n], function (_, promiseQueue, coreRequest, configFactory, itemDataHandlers) {\n    'use strict';\n\n    /**\n     * QTI proxy definition\n     * Related to remote services calls\n     * @type {Object}\n     */\n    return {\n        name: 'qtiItemPreviewerProxy',\n\n        /**\n         * Installs the proxy\n         */\n        install() {\n            /**\n             * A promise queue to ensure requests run sequentially\n             */\n            this.queue = promiseQueue();\n\n            /**\n             * Some parameters needs special handling...\n             * @param {Object} actionParams - the input parameters\n             * @returns {Object} output parameters\n             */\n            this.prepareParams = function prepareParams(actionParams) {\n                //some parameters need to be JSON.stringified\n                const stringifyParams = ['itemState', 'itemResponse'];\n\n                if (_.isPlainObject(actionParams)) {\n                    return _.mapValues(actionParams, (value, key) => {\n                        if (_.includes(stringifyParams, key)) {\n                            return JSON.stringify(value);\n                        }\n                        return value;\n                    });\n                }\n\n                return actionParams;\n            };\n\n            /**\n             * Proxy request function. Returns a promise\n             * Applied options: asynchronous call, JSON data, no cache\n             * @param {String} url\n             * @param {Object} [reqParams]\n             * @param {String} [contentType] - to force the content type\n             * @param {Boolean} [noToken] - to disable the token\n             * @returns {Promise}\n             */\n            this.request = function request(url, reqParams, contentType, noToken) {\n                return coreRequest({\n                    url: url,\n                    data: this.prepareParams(reqParams),\n                    method: reqParams ? 'POST' : 'GET',\n                    contentType: contentType,\n                    noToken: noToken,\n                    background: false,\n                    sequential: true,\n                    timeout: this.configStorage.getTimeout()\n                })\n                    .then(response => {\n                        this.setOnline();\n\n                        if (response && response.success) {\n                            return Promise.resolve(response);\n                        } else {\n                            return Promise.reject(response);\n                        }\n                    })\n                    .catch(error => {\n                        if (error.data && this.isConnectivityError(error.data)) {\n                            this.setOffline('request');\n                        }\n                        return Promise.reject(error);\n                    });\n            };\n        },\n\n        /**\n         * Initializes the proxy\n         * @param {Object} config - The config provided to the proxy factory\n         * @param {String} config.testDefinition - The URI of the test\n         * @param {String} config.testCompilation - The URI of the compiled delivery\n         * @param {String} config.serviceCallId - The URI of the service call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The proxy will be fully initialized on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        init(config, params) {\n            // store config in a dedicated configStorage\n            this.configStorage = configFactory(config || {});\n\n            // request for initialization\n            return this.request(this.configStorage.getTestActionUrl('init'), params, void 0, true);\n        },\n\n        /**\n         * Uninstalls the proxy\n         * @returns {Promise} - Returns a promise. The proxy will be fully uninstalled on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        destroy() {\n            // no request, just a resources cleaning\n            this.configStorage = null;\n            this.queue = null;\n\n            // the method must return a promise\n            return Promise.resolve();\n        },\n\n        /**\n         * Calls an action related to the test\n         * @param {String} action - The name of the action to call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callTestAction(action, params) {\n            return this.request(this.configStorage.getTestActionUrl(action), params, void 0, true);\n        },\n\n        /**\n         * Calls an action related to a particular item\n         * @param {String} itemIdentifier - The identifier of the item for which call the action\n         * @param {String} action - The name of the action to call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callItemAction(itemIdentifier, action, params) {\n            return this.request(this.configStorage.getItemActionUrl(itemIdentifier, action), params, void 0, true);\n        },\n\n        /**\n         * Gets an item definition by its identifier, also gets its current state\n         * @param {String} itemIdentifier - The identifier of the item to get\n         * @param {Object} [params] - additional parameters\n         * @returns {Promise} - Returns a promise. The item data will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        getItem(itemIdentifier, params) {\n            return this.request(\n                this.configStorage.getItemActionUrl(itemIdentifier, 'getItem'),\n                params,\n                void 0,\n                true\n            ).then(itemData => itemDataHandlers(itemData));\n        },\n\n        /**\n         * Submits the state and the response of a particular item\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @param {Object} state - The state to submit\n         * @param {Object} response - The response object to submit\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        submitItem(itemIdentifier, state, response, params) {\n            const body = _.merge(\n                {\n                    itemState: state,\n                    itemResponse: response\n                },\n                params || {}\n            );\n\n            return this.request(this.configStorage.getItemActionUrl(itemIdentifier, 'submitItem'), body, void 0, true);\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020-2022 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner proxy for the QTI test previewer\n *\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/proxy/test',[\n    'core/promiseQueue',\n    'core/request',\n    'util/url',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTestPreviewer/previewer/proxy/itemDataHandlers'\n], function (promiseQueue, request, urlUtil, mapHelper, itemDataHandlers) {\n    'use strict';\n\n    const serviceControllerInit = 'TestPreviewer';\n    const serviceControllerGetItem = 'Previewer';\n\n    const serviceExtension = 'taoQtiTestPreviewer';\n\n    /**\n     * The possible states of the test session,\n     * coming from the test context\n     * (this state comes from the backend)\n     */\n    const testSessionStates = Object.freeze({\n        initial: 0,\n        interacting: 1,\n        modalFeedback: 2,\n        suspended: 3,\n        closed: 4\n    });\n    /**\n     * The possible states of an item session,\n     * coming from the test context\n     * (this state comes from the backend)\n     */\n    const itemSessionStates = Object.freeze({\n        initial: 0,\n        interacting: 1,\n        modalFeedback: 2,\n        suspended: 3,\n        closed: 4,\n        solution: 5,\n        review: 6\n    });\n\n    /**\n     * Updates testContext with item data\n     * @param {Object} testMap\n     * @param {Number} position - item position\n     * @param {Object} testContext\n     * @param {Array} presetMap\n     */\n    function updateTestContextWithItem(testMap, position, testContext, presetMap) {\n        const jump = mapHelper.getJump(testMap, position);\n        const item = mapHelper.getItemAt(testMap, position);\n        if (!item) {\n            return;\n        }\n        testContext.testPartId = jump.part;\n        testContext.sectionId = jump.section;\n        testContext.itemIdentifier = jump.identifier;\n        testContext.itemSessionState = itemSessionStates.initial;\n        testContext.options = createContextOptions(item, presetMap);\n        testContext.allowSkipping = item.allowSkipping;\n    }\n\n    /**\n     * Convert preset categories to context.options\n     * @param {Object} item\n     * @param {Array} presetMap\n     * @returns {Object} options\n     */\n    function createContextOptions(item, presetMap) {\n        const options = {};\n        presetMap.forEach(category => {\n            const pluginId = Object.keys(category)[0];\n            const categoryId = category[pluginId];\n            if (item.categories.includes(categoryId)) {\n                options[pluginId] = true;\n            }\n        });\n        return options;\n    }\n\n    /**\n     * QTI proxy definition\n     * Related to remote services calls\n     * @type {Object}\n     */\n    return {\n        name: 'qtiTestPreviewerProxy',\n\n        /**\n         * Installs the proxy\n         */\n        install() {\n            /**\n             * A promise queue to ensure requests run sequentially\n             */\n            this.queue = promiseQueue();\n        },\n        /**\n         * Initializes the proxy\n         * @param {Object} configs - configuration from proxy\n         * @param {String} configs.options.testUri - The identifier of the test\n         * @returns {Promise} - Returns a promise. The proxy will be fully initialized on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        init(configs) {\n            this.itemStore = {};\n            return request({\n                url: urlUtil.route('init', serviceControllerInit, serviceExtension),\n                data: { testUri: configs.options.testUri },\n                noToken: true\n            }).then(response => {\n                const data = response.data;\n                //the received map is not complete and should be \"built\"\n                this.builtTestMap = mapHelper.reindex(data.testMap);\n                this.presetMap = data.presetMap || [];\n                delete data.presetMap;\n                const firstJump = this.builtTestMap.jumps[0] || {};\n                const firstItem = mapHelper.getItemAt(this.builtTestMap, 0);\n                data.testContext = {\n                    itemIdentifier: firstJump.identifier,\n                    itemPosition: 0,\n                    itemSessionState: 0,\n                    testPartId: firstJump.part,\n                    sectionId: firstJump.section,\n                    canMoveBackward: true,\n                    state: testSessionStates.interacting,\n                    attempt: 1,\n                    options: createContextOptions(firstItem, this.presetMap),\n                    allowSkipping: firstItem.allowSkipping\n                };\n                return data;\n            });\n        },\n\n        /**\n         * Uninstalls the proxy\n         * @returns {Promise} - Returns a promise. The proxy will be fully uninstalled on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        destroy() {\n            // no request, just a resources cleaning\n            this.queue = null;\n\n            if (this.itemStore) {\n                this.itemStore = null;\n            }\n\n            // the method must return a promise\n            return Promise.resolve();\n        },\n\n        /**\n         * Gets an item definition by its URI, also gets its current state\n         * @param {String} itemIdentifier - The URI of the item to get\n         * @returns {Promise} - Returns a promise. The item data will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        getItem(itemIdentifier) {\n            if (itemIdentifier in this.itemStore) {\n                // Load item from store\n                return Promise.resolve(this.itemStore[itemIdentifier]);\n            } else {\n                // Load from server; Store in store\n                const { uri } = mapHelper.getItem(this.builtTestMap, itemIdentifier) || {};\n                if (!uri) {\n                    throw new Error(`There is no item ${itemIdentifier} in the testMap!`);\n                }\n                return request({\n                    url: urlUtil.route('getItem', serviceControllerGetItem, serviceExtension),\n                    data: { serviceCallId: 'previewer', itemUri: uri },\n                    noToken: true\n                })\n                    .then(data => {\n                        data.itemData = data.content;\n                        data.itemIdentifier = data.content.data.identifier;\n                        data.itemState = {};\n                        this.itemStore[itemIdentifier] = data;\n                        return data;\n                    })\n                    .then(itemData => itemDataHandlers(itemData));\n            }\n        },\n\n        /**\n         * Call action on the test\n         * @param {string} itemIdentifier - the current item\n         * @param {string} action - the action id\n         * @param {Object} params\n         * @returns {Promise} resolves with the response\n         */\n        callItemAction(itemIdentifier, action, params = {}) {\n            const dataHolder = this.getDataHolder();\n            const testContext = dataHolder.get('testContext');\n            const testMap = dataHolder.get('testMap');\n            const actions = {\n                //simulate backend move action\n                move: () => {\n                    if (params.direction === 'next' || action === 'skip') {\n                        if (params.scope === 'testPart') {\n                            const testPartPosition = testMap.parts[testContext.testPartId].position;\n                            const nextPartsSorted = Object.values(testMap.parts)\n                                .filter(p => p.position > testPartPosition)\n                                .sort((a, b) => a.position - b.position);\n                            if (nextPartsSorted.length === 0) {\n                                testContext.state = testSessionStates.closed;\n                            } else {\n                                testContext.itemPosition = Math.min(\n                                    testMap.stats.total - 1,\n                                    nextPartsSorted[0].position\n                                );\n                            }\n                        } else {\n                            if (testContext.itemPosition + 1 >= testMap.stats.total) {\n                                testContext.state = testSessionStates.closed;\n                            } else {\n                                testContext.itemPosition = Math.min(\n                                    testMap.stats.total - 1,\n                                    testContext.itemPosition + 1\n                                );\n                            }\n                        }\n                    }\n                    if (params.direction === 'previous') {\n                        testContext.itemPosition = Math.max(0, testContext.itemPosition - 1);\n                    }\n                    if (params.direction === 'jump' && params.ref >= 0) {\n                        testContext.itemPosition = params.ref;\n                    }\n\n                    updateTestContextWithItem(testMap, testContext.itemPosition, testContext, this.presetMap);\n\n                    return { testContext, testMap };\n                },\n\n                flagItem: () => Promise.resolve()\n            };\n            actions.skip = actions.move;\n\n            if (params.itemState) {\n                // store itemState in itemStore\n                this.itemStore[itemIdentifier].itemState = params.itemState;\n            }\n\n            if (typeof actions[action] === 'function') {\n                return actions[action]();\n            }\n        },\n\n        /**\n         * Calls an action related to the test\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callTestAction() {\n            // the method must return a promise\n            return Promise.resolve();\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/component/test/tpl/qtiTest', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"previewer-test-component\\\">\\n  <header role=\\\"menubar\\\" class=\\\"dark-bar clearfix\\\">\\n      <div class=\\\"lft title-box\\\"></div>\\n      <nav role=\\\"menu\\\" class=\\\"rgt\\\">\\n          <!-- snippet: dark bar left menu -->\\n          <div class=\\\"settings-menu\\\">\\n              <ul class=\\\"clearfix plain\\\">\\n                  <li data-control=\\\"home\\\">\\n                      <a role=\\\"button\\\" id=\\\"home\\\" href=\\\"#\\\">\\n                          <span class=\\\"icon-home\\\"></span>\\n                          <span class=\\\"text hidden\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Go back to tests selection\", options) : helperMissing.call(depth0, \"__\", \"Go back to tests selection\", options)))\n    + \"</span>\\n                      </a>\\n                  </li>\\n                  <li class=\\\"infoControl sep-before\\\">\\n                      <span class=\\\"a\\\">\\n                          <span class=\\\"icon-test-taker\\\"></span>\\n                          <span class=\\\"text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"TAO Guest\", options) : helperMissing.call(depth0, \"__\", \"TAO Guest\", options)))\n    + \"</span>\\n                      </span>\\n                  </li>\\n                  <li class=\\\"infoControl sep-before\\\" data-control=\\\"logout\\\">\\n                      <a role=\\\"button\\\" id=\\\"logout\\\" class=\\\"logout\\\" href=\\\"#\\\" tabindex=\\\"0\\\">\\n                          <span class=\\\"icon-logout\\\"></span>\\n                          <span class=\\\"text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Logout\", options) : helperMissing.call(depth0, \"__\", \"Logout\", options)))\n    + \"</span>\\n                      </a>\\n                  </li>\\n              </ul>\\n          </div>\\n      </nav>\\n  </header>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('css!taoQtiTestPreviewer/previewer/component/test/css/qtiTest',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/component/test/qtiTest',[\n    'context',\n    'lodash',\n    'layout/loading-bar',\n    'taoTests/runner/runnerComponent',\n    'taoQtiTest/runner/config/assetManager',\n    'taoItems/assets/strategies',\n    'tpl!taoQtiTestPreviewer/previewer/component/test/tpl/qtiTest',\n    'css!taoQtiTestPreviewer/previewer/component/test/css/qtiTest',\n    'css!taoQtiTestCss/new-test-runner'\n], function (context, __, loadingBar, runnerComponentFactory, assetManagerFactory, assetStrategies, runnerTpl) {\n    'use strict';\n\n    /**\n     * Builds a test runner to preview test\n     * @param {jQuery|HTMLElement|String} container - The container in which renders the component\n     * @param {Object} [config] - The testRunner options\n     *\n     * @returns {runner}\n     */\n    return function qtiTestPreviewerFactory(container, config = {}) {\n        const testRunnerConfig = __.defaults(\n            {\n                testDefinition: 'test-container',\n                serviceCallId: 'previewer',\n                proxyProvider: 'qtiTestPreviewerProxy',\n                loadFromBundle: !!context.bundle,\n            },\n            config\n        );\n\n        testRunnerConfig.providers.proxy = [{\n            id: 'qtiTestPreviewerProxy',\n            module: 'taoQtiTestPreviewer/previewer/proxy/test',\n            bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n            category: 'proxy'\n        }];\n\n        //the asset manager should support taomedia strategy\n        const assetManager = assetManagerFactory(testRunnerConfig.serviceCallId);\n        assetManager.prependStrategy(assetStrategies.taomedia);\n\n        return runnerComponentFactory(container, testRunnerConfig, runnerTpl)\n            .on('render', function() {\n                const { fullPage, readOnly, hideActionBars } = this.getConfig().options;\n                this.setState('fullpage', fullPage);\n                this.setState('readonly', readOnly);\n                this.setState('hideactionbars', hideActionBars);\n            })\n            .on('ready', function(runner) {\n                runner.on('destroy', () => {\n                    // stop loading bar - started in plugin loading\n                    loadingBar.stop();\n                    this.destroy();\n                });\n            });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/adapter/test/qtiTest',[\n    'lodash',\n    'core/promiseQueue',\n    'core/request',\n    'util/url',\n    'core/logger',\n    'taoQtiTestPreviewer/previewer/component/test/qtiTest',\n    'ui/feedback',\n    'taoQtiTestPreviewer/previewer/component/topBlock/topBlock',\n], function (\n    _,\n    promiseQueue,\n    request,\n    urlUtil,\n    loggerFactory,\n    qtiTestPreviewerFactory,\n    feedback,\n    topBlockFactory\n) {\n    'use strict';\n\n    const taoExtension = 'taoQtiTestPreviewer';\n\n    const testPreviewerController = 'TestPreviewer';\n\n    const logger = loggerFactory('taoQtiTestPreviewer/previewer');\n\n    /**\n     * List of required plugins that should be loaded in order to make the previewer work properly\n     * @type {Object[]}\n     */\n    const defaultPlugins = [\n        {\n            module: 'taoQtiTestPreviewer/previewer/plugins/content/cloneLogoInTestPreview',\n            bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n            category: 'content'\n        }\n    ];\n\n    const transformConfiguration = config => {\n        const plugins = Array.isArray(config.plugins) ? [...defaultPlugins, ...config.plugins] : defaultPlugins;\n        const { view, readOnly, fullPage, hideActionBars, pluginsOptions } = config;\n        const options = _.omit({ view, readOnly, fullPage, hideActionBars }, _.isUndefined);\n\n        return request({\n            url: urlUtil.route('configuration', testPreviewerController, taoExtension),\n            noToken: true\n        }).then(response => {\n            const configuration = response.data;\n\n            configuration.providers.plugins = [...configuration.providers.plugins, ...plugins];\n\n            _.assign(configuration.options, options);\n\n            if (pluginsOptions) {\n                if (!configuration.options.plugins) {\n                    configuration.options.plugins = {};\n                }\n                _.assign(configuration.options.plugins, pluginsOptions);\n            }\n\n            return configuration;\n        });\n    };\n\n    /**\n     * Wraps the test previewer in order to be loaded by the taoItems previewer factory\n     */\n    return {\n        name: 'qtiTest',\n\n        install() {\n            this.queue = promiseQueue();\n        },\n\n        /**\n         * Builds and shows the test previewer\n         *\n         * @param {String} testUri - The URI of the test to load\n         * @param {Object} [config] - Some config entries\n         * @param {Object[]} [config.plugins] - Additional plugins to load\n         * @param {String} [config.fullPage] - Force the previewer to occupy the full window.\n         * @param {String} [config.readOnly] - Do not allow to modify the previewed item.\n         * @returns {Object}\n         */\n        init(testUri, config = {}) {\n            return transformConfiguration(config).then(testPreviewConfig => {\n                testPreviewConfig.options.testUri = testUri;\n                let topBlock = null;\n                const previewComponent = qtiTestPreviewerFactory(window.document.body, testPreviewConfig)\n                    .on('ready', function (runner) {\n                        topBlock = topBlockFactory(\n                            window.document.body,\n                            {\n                                isTest: testPreviewConfig.options.review.scope === 'test',\n                                title: runner.getTestMap().title,\n                                onClose: () =>  {\n                                    runner.trigger('exit');\n                                }\n                            });\n                    })\n                    .on('error', function (err) {\n                        if (topBlock){\n                            topBlock.destroy();\n                            topBlock = null;\n                        }\n                        if (!_.isUndefined(err.message)) {\n                            feedback().error(err.message);\n                        }\n                        logger.error(err);\n                    })\n                    .on('destroy', () => {\n                        if (topBlock){\n                            topBlock.destroy();\n                            topBlock = null;\n                        }\n                    });\n                return previewComponent;\n            });\n        },\n\n        destroy() {\n            this.queue = null;\n\n            return Promise.resolve();\n        },\n    };\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.previewer,.previewer-component{position:relative}.item-previewer-scope{position:relative;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:calc(100vh - 0px)}.item-previewer-scope .test-runner-sections{-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%;overflow:hidden;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.item-previewer-scope .test-sidebar{background:#f3f1ef;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;height:calc(100vh - 80px);overflow-y:auto;max-width:350px}.item-previewer-scope .test-sidebar>.qti-panel{max-width:350px;padding:10px}@media only screen and (max-device-width: 800px){.item-previewer-scope .test-sidebar{max-width:200px}.item-previewer-scope .test-sidebar>.qti-panel{max-width:200px}}@media only screen and (min-device-width: 800px)and (max-device-width: 1280px){.item-previewer-scope .test-sidebar{max-width:250px}.item-previewer-scope .test-sidebar>.qti-panel{max-width:250px}}@media only screen and (min-device-width: 1280px)and (max-device-width: 1440px){.item-previewer-scope .test-sidebar{max-width:300px}.item-previewer-scope .test-sidebar>.qti-panel{max-width:300px}}.item-previewer-scope .test-sidebar-left{border-right:1px #ddd solid}.item-previewer-scope .test-sidebar-right{border-left:1px #ddd solid}.item-previewer-scope .content-wrapper{position:relative;-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%;overflow:auto;padding:0}.item-previewer-scope .content-wrapper .overlay{position:absolute;left:0;right:0;top:0;bottom:0;width:100%;opacity:.9}.item-previewer-scope .content-wrapper .overlay-full{background-color:#fff;opacity:1}.item-previewer-scope #qti-content{-webkit-overflow-scrolling:touch;max-width:1024px;width:100%;margin:auto}.item-previewer-scope #qti-item{width:100%;min-width:100%;height:auto;overflow:visible}.item-previewer-scope .qti-item{padding:30px}.item-previewer-scope .size-wrapper{max-width:1280px;margin:auto;width:100%;padding-right:40px}.item-previewer-scope #qti-rubrics{margin:auto;max-width:1024px;width:100%}.item-previewer-scope #qti-rubrics .qti-rubricBlock{margin:20px 0}.item-previewer-scope #qti-rubrics .hidden{display:none}.no-controls .item-previewer-scope{height:100vh}.previewer-component{background:inherit}.previewer-component.fullpage{position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000}.previewer-component.fullpage .item-previewer-scope{height:100vh}.previewer-component.readonly .qti-item::before{content:\\\" \\\";position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000}.previewer-component.hideactionbars .test-sidebar{height:100%}.previewer-component.hideactionbars .action-bar{display:none}.item-previewer-scope .preview-console-closer{position:absolute;right:10px;top:10px;cursor:pointer;color:rgba(255,255,255,.9);text-shadow:none}.item-previewer-scope .preview-console-closer:hover{color:#fff}.item-previewer-scope .preview-console{background:#2b2b2b;color:#fff;font-family:Consolas,\\\"Andale Mono WT\\\",\\\"Andale Mono\\\",\\\"Lucida Console\\\",\\\"Lucida Sans Typewriter\\\",\\\"DejaVu Sans Mono\\\",\\\"Bitstream Vera Sans Mono\\\",\\\"Liberation Mono\\\",\\\"Nimbus Mono L\\\",Monaco,\\\"Courier New\\\",Courier,monospace;position:relative}.item-previewer-scope .preview-console .preview-console-body{padding:5px;margin:0;height:30vh;overflow:auto}.item-previewer-scope .preview-console .preview-console-body .log-time{color:#999}.item-previewer-scope .preview-console .preview-console-body .log-type{color:#eee}.item-previewer-scope .preview-console .preview-console-body .log-message{color:#69f}.item-previewer-scope .preview-console .preview-console-body pre{margin:0}.item-previewer-scope .action-bar.content-action-bar{padding:2px}.item-previewer-scope .action-bar.content-action-bar li{margin:2px 0 0 10px;border:none}.item-previewer-scope .action-bar.content-action-bar li.btn-info{padding-top:6px;height:33px;margin-top:0;border-bottom:solid 2px rgba(0,0,0,0);border-radius:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group{border:none !important;overflow:hidden;padding:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a{float:left;margin:0 2px;padding:0 15px;border:1px solid rgba(255,255,255,.3);border-radius:0px;display:inline-block;height:inherit}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a:first-of-type{border-top-left-radius:3px;border-bottom-left-radius:3px;margin-left:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a:last-of-type{border-top-right-radius:3px;border-bottom-right-radius:3px;margin-right:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a:hover,.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a.active{border-color:rgba(255,255,255,.8)}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a .no-label{padding-right:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info:hover,.item-previewer-scope .action-bar.content-action-bar li.btn-info.active{border-bottom-color:rgba(255,255,255,.8)}.item-previewer-scope .action-bar.content-action-bar li.btn-info:active,.item-previewer-scope .action-bar.content-action-bar li.btn-info.active{background:#e7eff4;border-color:rgba(255,255,255,.8)}.item-previewer-scope .action-bar.content-action-bar li.btn-info:active a,.item-previewer-scope .action-bar.content-action-bar li.btn-info.active a{color:#266d9c;text-shadow:none}.item-previewer-scope .action-bar.content-action-bar li.btn-info:active:hover,.item-previewer-scope .action-bar.content-action-bar li.btn-info.active:hover{background:#fff}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar{opacity:1;height:40px}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box{height:40px;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:space-between;-ms-flex-pack:space-between;justify-content:space-between;padding-left:10px;padding-right:40px}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box{color:rgba(255,255,255,.9);text-shadow:1px 1px 0 #000}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt{padding-left:20px}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft:first-child,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt:first-child{padding-left:0}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft:last-child ul,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt:last-child ul{display:inline-block}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box [class^=btn-],.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box [class*=\\\" btn-\\\"]{white-space:nowrap}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box{position:relative;overflow:visible}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .action{position:relative;overflow:visible}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu{color:#222;background:#f3f1ef;border:1px solid #aaa9a7;overflow:auto;list-style:none;min-width:150px;margin:0;padding:0;position:absolute;bottom:36px;left:-3px}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action{display:inline-block;text-align:left;width:100%;white-space:nowrap;overflow:hidden;color:#222;border-bottom:1px solid #c2c1bf;margin:0;-moz-border-radius:0px;-webkit-border-radius:0px;border-radius:0px;height:32px;padding:6px 15px;line-height:1;border-left:solid 3px rgba(0,0,0,0)}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .icon-checkbox-checked{display:none}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active{background-color:#dbd9d7;font-weight:bold}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon-checkbox,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon-checkbox,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active .icon-checkbox{display:none}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon-checkbox-checked,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon-checkbox-checked,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active .icon-checkbox-checked{display:inline-block}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover{background-color:#0e5d91;color:#fff;border-left-color:#313030 !important}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .label,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .label,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon{color:#fff}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon{color:#e7eff4}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .label,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .icon{font-size:14px;font-size:1.4rem;text-shadow:none;color:#222}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar{overflow:visible;position:relative}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .action{line-height:1.6}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .icon.no-label{padding-right:0}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed .btn-info .text,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed-hover .btn-info:not(:hover) .text,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.no-tool-label .text,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed .text,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed-over:not(:hover) .text{display:none}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed .btn-info .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed-hover .btn-info:not(:hover) .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.no-tool-label .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed-over:not(:hover) .icon{padding:0}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/provider/item/css/item.css.map */.top-block-preview{position:fixed;top:0;left:50%;z-index:10000;display:flex;flex-direction:column;align-items:center;justify-content:center}.top-block-preview.open{transform:translate(-50%, 0);transition:transform .5s ease-out}.top-block-preview.close{transform:translate(-50%, calc(30px - 100%));transition:transform .5s ease-out}.top-block-preview-main{display:flex;padding:12px 24px;background-color:#f3f1ef;border:solid 1px #e5e4e4}.top-block-preview-main .btn-info{margin-left:16px;white-space:nowrap}.top-block-preview-main .btn-info .icon{padding-left:9px;padding-right:0}.top-block-preview-info{display:flex;align-items:center;justify-content:center}.top-block-preview-info p{margin-bottom:0}.top-block-preview-collapser{position:relative;width:60px;height:30px;background-color:#f3f1ef;border-bottom-left-radius:30px;border-bottom-right-radius:30px;transform:translateY(-10px);display:flex;align-items:center;justify-content:center;cursor:pointer;border-left:solid 1px #e5e4e4;border-right:solid 1px #e5e4e4}.top-block-preview-collapser::before{content:\\\" \\\";width:60px;height:10px;background-color:#f3f1ef;position:absolute;top:-1px}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/component/topBlock/css/topBlock.css.map */.devices-previewer{width:100%;height:100%}.devices-previewer:not(.disabled)[data-type=desktop],.devices-previewer:not(.disabled)[data-type=mobile]{overflow:hidden}.devices-previewer:not(.disabled)[data-type=desktop] .preview-container,.devices-previewer:not(.disabled)[data-type=mobile] .preview-container{position:relative}.devices-previewer:not(.disabled)[data-type=desktop] .preview-frame,.devices-previewer:not(.disabled)[data-type=mobile] .preview-frame{position:relative;border:3px #aaa ridge;background:#5a5a5a;background:linear-gradient(135deg, rgb(90, 90, 90) 0%, rgb(86, 86, 86) 7%, rgb(68, 68, 68) 15%, rgb(20, 20, 20) 30%);-webkit-box-shadow:5px 5px 10px 0 rgba(0, 0, 0, 0.7);-moz-box-shadow:5px 5px 10px 0 rgba(0, 0, 0, 0.7);-ms-box-shadow:5px 5px 10px 0 rgba(0, 0, 0, 0.7);-o-box-shadow:5px 5px 10px 0 rgba(0, 0, 0, 0.7);box-shadow:5px 5px 10px 0 rgba(0, 0, 0, 0.7)}.devices-previewer:not(.disabled)[data-type=desktop] .preview-content,.devices-previewer:not(.disabled)[data-type=mobile] .preview-content{background:#fff;border-radius:3px;border:2px solid;border-color:#444 #999 #999 #444;overflow:auto}.devices-previewer:not(.disabled)[data-type=mobile] .preview-frame{border-radius:25px;padding:40px}.devices-previewer:not(.disabled)[data-type=desktop] .preview-frame{border-radius:5px;padding:30px}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesPreviewer.css.map */.devices-selector{display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row}.devices-selector[data-type=standard] .desktop-selector,.devices-selector[data-type=standard] .mobile-selector,.devices-selector[data-type=standard] .orientation-selector{display:none}.devices-selector[data-type=desktop] .mobile-selector,.devices-selector[data-type=desktop] .orientation-selector{display:none}.devices-selector[data-type=mobile] .desktop-selector{display:none}.devices-selector .selector{display:inline-block;margin-top:.3em}.devices-selector .selector:not(:last-child){margin-right:1rem}.devices-selector .selector select{overflow:visible}.devices-selector .selector .select2-container{text-shadow:none}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesSelector.css.map */.previewer-test-component{background:inherit}.previewer-test-component.fullpage{position:absolute;top:0;left:0;right:0;bottom:64px;z-index:1000}.previewer-test-component.fullpage .item-previewer-scope{height:100vh}.previewer-test-component.readonly .qti-item::before{content:\\\" \\\";position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000}.previewer-test-component.hideactionbars .test-sidebar{height:100%}.previewer-test-component.hideactionbars .action-bar{display:none}.previewer-test-component #preview-logo{margin:6px 30px 6px 30px;display:block;max-width:200px;height:52px;background:rgba(0,0,0,0)}.previewer-test-component footer{z-index:10000;position:relative;font-size:11px;padding:10px;border-top:1px #ddd solid}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/component/test/css/qtiTest.css.map */');\n","\ndefine(\"taoQtiTestPreviewer/loader/qtiPreviewer.bundle\", function(){});\n","define(\"taoQtiTestPreviewer/loader/qtiPreviewer.min\", [\"taoItems/loader/taoItemsRunner.min\",\"taoTests/loader/taoTestsRunner.min\",\"taoQtiItem/loader/taoQtiItemRunner.min\",\"taoQtiTest/loader/taoQtiTestRunner.min\",\"taoQtiTest/loader/testPlugins.min\"], function(){});\n"],"mappings":"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,KACAC,MAAA,MACAO,WAAA,GACAC,OAAA,KACAC,QAAA,KACA,EACAU,gCAAA,EACArB,KAAA,yBACAC,KAAA,KACAC,MAAA,KACAO,WAAA,KACAC,OAAA,KACAC,QAAA,KACA,EACAW,gCAAA,EACAtB,KAAA,4CACAC,KAAA,KACAC,MAAA,KACAO,WAAA,KACAC,OAAA,KACAC,QAAA,KACA,EACAY,kCAAA,EACAvB,KAAA,gBACAC,KAAA,KACAC,MAAA,MACAO,WAAA,GACAC,OAAA,KACAC,QAAA,KACA,EACAa,gCAAA,EACAxB,KAAA,iCACAC,KAAA,KACAC,MAAA,MACAO,WAAA,KACAC,OAAA,KACAC,QAAA,KACA,EACAc,kCAAA,EACAzB,KAAA,kBACAC,KAAA,KACAC,MAAA,KACAO,WAAA,KACAC,OAAA,KACAC,QAAA,IACA,EACAe,kCAAA,EACA1B,KAAA,4CACAC,KAAA,KACAC,MAAA,KACAO,WAAA,KACAC,OAAA,KACAC,QAAA,KACA,EACAgB,gCAAA,EACA3B,KAAA,4DACAC,KAAA,KACAC,MAAA,KACAO,WAAA,GACAC,OAAA,KACAC,QAAA,IACA,EACAiB,kCAAA,EACA5B,KAAA,0BACAC,KAAA,KACAC,MAAA,MACAO,WAAA,GACAC,OAAA,KACAC,QAAA,KACA,EACAkB,gCAAA,EACA7B,KAAA,iCACAC,KAAA,KACAC,MAAA,KACAO,WAAA,GACAC,OAAA,KACAC,QAAA,IACA,EACAmB,kCAAA,EACA9B,KAAA,2DACAC,KAAA,KACAC,MAAA,KACAO,WAAA,KACAC,OAAA,KACAC,QAAA,KACA,EACAoB,kCAAA,EACA/B,KAAA,uBACAC,KAAA,KACAC,MAAA,MACAO,WAAA,GACAC,OAAA,KACAC,QAAA,KACA,EACAqB,kCAAA,EACAhC,KAAA,yBACAC,KAAA,MACAC,MAAA,MACAO,WAAA,GACAC,OAAA,KACAC,QAAA,KACA,EACAsB,kCAAA,EACAjC,KAAA,0BACAC,KAAA,KACAC,MAAA,MACAO,WAAA,GACAC,OAAA,KACAC,QAAA,KACA,EACAuB,kCAAA,EACAlC,KAAA,sCACAC,KAAA,K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"}