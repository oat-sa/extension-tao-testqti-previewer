{"version":3,"mappings":"y0CACAA,8EACA,qEAMA,MALA,iCAKA,CAJAC,8CAIA,CAJAC,aAIA,4CACA,CAPA,CAQA,CATA,C,CCsBAF,+CACA,iCADA,CAEA,0CAFA,EAGA,2CACA,aAgBA,sLAEA,oEACAG,EADA,CACA,QADA,CACA,WACA,uLACA,kCAFA,CAGA,kCAHA,CAIA,8CACA,CANA,EAOAA,EAPA,CAOA,OAPA,CAOA,gCACAC,uDACA,CATA,CAUA,CACA,CAjCA,C,CCtBAJ,kF,CCmBAA,0DACA,SADA,CAEA,sCAFA,CAGA,0DAHA,EAIA,mCACA,aAeA,6LAEAK,kBACAC,+BADA,CAEAC,yBAFA,CAGAC,WACAJ,QACAK,qBADA,CAEAC,yDAFA,CAGAC,oDAHA,CAIAC,iBAJA,CADA,CAOAC,OACAJ,0BADA,CAEAC,iDAFA,CAGAC,oDAHA,CAIAC,gBAJA,CAPA,CAaAE,cACAL,YADA,CAEAC,kCAFA,CAGAC,0BAHA,CAIAC,uBAJA,CAbA,CAmBAG,0BAnBA,CAHA,CAwBAC,SACAC,gBADA,CAEAC,wBAFA,CAGAC,wBAHA,CAIAJ,6BAJA,CAKAK,oCALA,CAxBA,CAFA,CAsCA,MAFAf,iDAEA,uDACAF,EADA,CACA,OADA,CACA,iBAIA,GAHAkB,gBAGA,EAFAjB,uFAEA,gBACA,sCAEA,CARA,CASA,CACA,CApEA,C,CCAAJ,6DACA,QADA,CAEA,aAFA,CAGA,iDAHA,CAIA,aAJA,EAKA,2DACA,aADA,GAGAsB,6CAHA,CASAC,iBACAb,6DADA,CAEAC,oDAFA,CAGAC,mBAHA,EAIA,CACAF,uEADA,CAEAC,oDAFA,CAGAC,qBAHA,CAJA,CAQA,CACAF,gEADA,CAEAC,oDAFA,CAGAC,gBAHA,CARA,CAYA,CACAF,4EADA,CAEAC,0CAFA,CAGAC,gBAHA,CAZA,CAgBA,CACAF,2EADA,CAEAC,oDAFA,CAGAC,kBAHA,CAhBA,CATA,CAkCA,OACAY,cADA,CAcAC,IAdA,eAcAC,GAdA,CAcAC,KAdA,CAcA,sEAIA,MAHAN,mBAGA,CAFAA,sBAEA,CADAA,wHACA,sDACAlB,EADA,CACA,OADA,CACA,cACAyB,0BADA,CAIAN,iBAJA,CAEAO,6BAIA,CAPA,CAQA,CA1BA,CA4BA,CAnEA,C,CCnBA7B,uGACA,qEACA,gCADA,CAEAC,8CAFA,CAEAC,aAFA,CAGA,wGAMA,MAHA4B,mNACAC,+KADA,CAEA,2KACA,OACA,CAVA,CAWA,CAZA,C,CCAA/B,2GACA,qEACA,gCADA,CAEAC,8CAFA,CAEAC,aAFA,CAGA,2FAYA,MATA4B,cASA,EARAE,mBAQA,EARAC,8CAQA,EAPAD,0BAOA,CAPAC,kFAOA,EANAH,iCACA,MAKA,EAJAE,oBAIA,EAJAC,8CAIA,EAHAD,2BAGA,CAHAC,kFAGA,EAFAH,iCACA,UACA,OACA,CAhBA,CAiBA,CAlBA,C,CCAA9B,2F,CACAA,MCFA,8DACA,QADA,CAEA,QAFA,CAGA,MAHA,CAIA,cAJA,CAKA,mEALA,CAMA,uEANA,CAOA,mEAPA,EAQA,8DACA,aAYA,2CACA,gCACAkC,WADA,CACAC,WADA,EAEAhC,EAFA,CAEA,MAFA,CAEA,WACA,sBACA,CAJA,EAKAA,EALA,CAKA,QALA,CAKA,cACAiC,0BACAZ,0DADA,CAEAa,kBAFA,GADA,CAKAC,0BALA,CAMAA,sDANA,CAOAA,kDAPA,CAQA,8DACAA,oEACAC,4BADA,CAEAA,8BAFA,CAGAD,4BAHA,CAIAA,6BACA,CALA,CATA,CAkBA,qBACA,CAxBA,EAgCA,MAJAV,oBACAY,qBACA,CAFA,CAIA,SACA,CAEA,sBACA,CA1DA,C,CCuBAxC,oDACA,QADA,CAEA,UAFA,CAGA,aAHA,EAIA,iCACA,aADA,GAQAyC,YACAC,WACAC,6BADA,CAEAC,sCAFA,CADA,CARA,CAoBAC,UACAtC,gBADA,CAEAmC,YAFA,CAGAI,UAHA,CApBA,CAkCA,sDAGAC,MAHA,CAEAC,oDAFA,CAaA,MAPAA,gBAOA,CANAA,oBAMA,CAJAA,qBAIA,EAMAC,wDACAC,6BADA,CAEAC,YACA5C,qCADA,CAFA,CAMA,mBAEA4C,iCAFA,KAIA,qDACAvB,kCADA,KAEA,uBACA,4HAGA,iBACA,CAvBA,CA6BAwB,6CACA,4BACA,CA/BA,CAqCAC,qDACA,iFACA,CAvCA,CA6CAC,mDACA,+EACA,CA/CA,CAsDAC,mDACA,wGACA,CAxDA,CAgEAC,kEACA,sHACA,CAlEA,CAwEAC,iCACA,sBACA,CA1EA,CA4EA,CACA,CAhIA,C,CCtBAzD,qFACA,SACA,oCACA,sCADA,CAEA,SAFA,CAGA,UAHA,CADA,CAMA,oCACA,kBADA,CAEA,UAFA,CAGA,UAHA,CANA,CAWA,oCACA,+CADA,CAEA,UAFA,CAGA,UAHA,CAXA,CAgBA,oCACA,sBADA,CAEA,SAFA,CAGA,UAHA,CAhBA,CAqBA,kCACA,yCADA,CAEA,UAFA,CAGA,UAHA,CArBA,CADA,CA4BA,QACA,oCACA,wBADA,CAEA,SAFA,CAGA,UAHA,CAIA,aAJA,CAKA,WALA,CAMA,YANA,CADA,CASA,oCACA,sBADA,CAEA,SAFA,CAGA,UAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CATA,CAiBA,oCACA,sBADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAjBA,CAyBA,oCACA,sBADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAzBA,CAiCA,kCACA,sBADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAjCA,CAyCA,oCACA,sBADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAzCA,CAiDA,oCACA,sBADA,CAEA,UAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAjDA,CAyDA,kCACA,sBADA,CAEA,SAFA,CAGA,UAHA,CAIA,eAJA,CAKA,WALA,CAMA,aANA,CAzDA,CAiEA,oCACA,4CADA,CAEA,SAFA,CAGA,UAHA,CAIA,eAJA,CAKA,WALA,CAMA,aANA,CAjEA,CAyEA,oCACA,0BADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAzEA,CAiFA,kCACA,6BADA,CAEA,SAFA,CAGA,UAHA,CAIA,eAJA,CAKA,WALA,CAMA,aANA,CAjFA,CAyFA,kCACA,gDADA,CAEA,SAFA,CAGA,UAHA,CAIA,eAJA,CAKA,WALA,CAMA,aANA,CAzFA,CAiGA,oCACA,oBADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAjGA,CAyGA,kCACA,qCADA,CAEA,SAFA,CAGA,WAHA,CAIA,eAJA,CAKA,WALA,CAMA,aANA,CAzGA,CAiHA,oCACA,sBADA,CAEA,SAFA,CAGA,UAHA,CAIA,eAJA,CAKA,WALA,CAMA,YANA,CAjHA,CAyHA,oCACA,gDADA,CAEA,SAFA,CAGA,UAHA,CAIA,eAJA,CAKA,WALA,CAMA,aANA,CAzHA,CAiIA,kCACA,gEADA,CAEA,SAFA,CAGA,UAHA,CAIA,aAJA,CAKA,WALA,CAMA,YANA,CAjIA,CAyIA,oCACA,8BADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAzIA,CAiJA,kCACA,qCADA,CAEA,SAFA,CAGA,UAHA,CAIA,aAJA,CAKA,WALA,CAMA,YANA,CAjJA,CAyJA,oCACA,+DADA,CAEA,SAFA,CAGA,UAHA,CAIA,eAJA,CAKA,WALA,CAMA,aANA,CAzJA,CAiKA,oCACA,2BADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAjKA,CAyKA,oCACA,6BADA,CAEA,UAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAzKA,CAiLA,oCACA,8BADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAjLA,CAyLA,oCACA,0CADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAzLA,CAiMA,oCACA,iCADA,CAEA,SAFA,CAGA,UAHA,CAIA,eAJA,CAKA,WALA,CAMA,aANA,CAjMA,CAyMA,oCACA,yBADA,CAEA,UAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAzMA,CAiNA,oCACA,0BADA,CAEA,SAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAjNA,CAyNA,oCACA,2BADA,CAEA,SAFA,CAGA,UAHA,CAIA,aAJA,CAKA,WALA,CAMA,YANA,CAzNA,CAiOA,oCACA,yBADA,CAEA,UAFA,CAGA,WAHA,CAIA,aAJA,CAKA,WALA,CAMA,aANA,CAjOA,CA5BA,CAsQA,SACA,oCACA,sBADA,CAEA,UAFA,CAGA,WAHA,CAIA,YAJA,CAKA,aALA,CAMA,aANA,CADA,CASA,oCACA,qBADA,CAEA,UAFA,CAGA,UAHA,CAIA,YAJA,CAKA,YALA,CAMA,aANA,CATA,CAiBA,oCACA,sBADA,CAEA,UAFA,CAGA,WAHA,CAIA,YAJA,CAKA,aALA,CAMA,aANA,CAjBA,CAyBA,kCACA,qBADA,CAEA,UAFA,CAGA,UAHA,CAIA,YAJA,CAKA,YALA,CAMA,aANA,CAzBA,CAiCA,oCACA,qBADA,CAEA,UAFA,CAGA,UAHA,CAIA,YAJA,CAKA,YALA,CAMA,aANA,CAjCA,CAyCA,kCACA,oBADA,CAEA,SAFA,CAGA,UAHA,CAIA,WAJA,CAKA,YALA,CAMA,aANA,CAzCA,CAtQA,CAwTA,CAxTA,C,CCwBAA,wDACA,QADA,CAEA,2DAFA,EAGA,SACA4B,CADA,CAEA8B,UAFA,CAGA,CACA,aADA,GAeAC,gBACA,gBADA,CAEA,iBAFA,CAfA,CAuBAC,eAMAC,iDAQA,4BAEA,2EACA,OACAC,gBADA,CAEAC,kBAFA,CAGAC,kBAHA,CAIAC,oBAJA,CAMA,CAPA,CAQA,CAxBA,CA8BAC,6CACA,+CACA,CAhCA,CAsCAC,+CACA,gDACA,CAxCA,CAvBA,CAkEA,oBACA,CAzEA,C,CCAAnE,4IACA,aAEA,sBACAwB,6BADA,CAMAC,IANA,gBAMA,CACA,oCAEA2C,oCAEAC,wEACA,CAHA,CAIA,CAbA,EAeA,CAlBA,C,CCAArE,6EACA,QADA,CAEA,QAFA,CAGA,MAHA,CAIA,wBAJA,EAKA,+BACA,aAEA,sBAEAwB,2BAFA,CAOAC,IAPA,gBAOA,IACA2C,gCADA,CAOAE,2CACA,kCACA,8BACA,CAVA,CAYAF,WACAG,KADA,CACA,YADA,CACA,WACA,yBACAC,yDADA,CAEAC,2GAFA,CAGAC,qFAHA,CAQAD,wCARA,EASAA,kDACA,sDACA,CAFA,CATA,CAiBAC,yBAjBA,EAkBAA,sCACAC,0BADA,CAEAC,mEAFA,CAOAA,sCACAC,sBACA,mFACAF,+EACA,CAHA,CAGA,CAHA,CAIA,CALA,CAMA,CAbA,CAeA,CACA,CApCA,CAqCA,CAxDA,EA0DA,CAlEA,C,CCFA3E,+DACA,QADA,CAEA,QAFA,CAGA,MAHA,CAIA,UAJA,CAKA,wBALA,CAMA,gDANA,EAOA,+CACA,aAEA,sBAEAwB,YAFA,CAOAC,qBAQA,2BACA,kCACA,oCACA,CAXA,GACAqD,UADA,CAEAV,+BAFA,CAaA,2BACAW,eADA,CAEA1C,+BAFA,CAGA2C,YAHA,CAIAC,gBAJA,CAKAC,0BALA,GAbA,CAqBA,qCACAC,kBADA,CAEA,6BAFA,GAGAL,cAHA,CAIAV,4BAJA,CAMA,CANA,CArBA,CA6BA,cA7BA,CA+BAA,WACAjE,EADA,CACA,WADA,CACA,WACAmE,iBADA,EAEAQ,aAEA,CALA,EAMA3E,EANA,CAMA,YANA,CAMA,WACA2E,cACA,CARA,CASA,CA/CA,CAoDAM,yBAGA,uDACAC,gCACA,CAzDA,CA8DAC,2BACA,sBACA,CAhEA,CAqEAC,yBACA,kCACAC,WADA,CACA,UADA,CAEA,CAxEA,CA6EAC,2BACA,kCACAC,QADA,CACA,UADA,CAEA,CAhFA,CAqFAC,qBACAC,yBACA,CAvFA,CA4FAC,qBACAD,yBACA,CA9FA,EAgGA,CA1GA,C,CCtBA5F,iHACA,qEAMA,MALA,iCAKA,CAJAC,8CAIA,CAJAC,aAIA,+FACA,CAPA,CAQA,CATA,C,CCAAF,sHACA,qEACA,gCADA,CAEAC,8CAFA,CAEAC,aAFA,CAGA,2FAgBA,MAbA4B,6CAaA,EAZAE,mBAYA,EAZAC,8CAYA,EAXAD,0BAWA,CAXAC,kFAWA,EAVAH,iCACA,kCASA,EARAE,mBAQA,EARAC,8CAQA,EAPAD,0BAOA,CAPAC,kFAOA,EANAH,iCACA,qCAKA,EAJAE,sBAIA,EAJAC,8CAIA,EAHAD,6BAGA,CAHAC,kFAGA,GAFAA,kBAEA,IAFAH,cAEA,EADAA,4BACA,OACA,CApBA,CAqBA,CAtBA,C,CCAA9B,wHACA,qEACA,gCADA,CAEAC,8CAFA,CAEAC,aAFA,CAGA,wGAMA,MAHA4B,6EACAC,+LADA,CAEA,YACA,OACA,CAVA,CAWA,CAZA,C,CCsBA/B,yEACA,QADA,CAEA,QAFA,CAGA,MAHA,CAIA,QAJA,CAKA,UALA,CAMA,eANA,CAOA,aAPA,CAQA,wBARA,CASA,kDATA,CAUA,sCAVA,CAWA,gDAXA,CAYA,6EAZA,CAaA,kFAbA,CAcA,oFAdA,EAeA,SACAqE,CADA,CAEAzC,CAFA,CAGAkE,EAHA,CAIAC,MAJA,CAKAH,KALA,CAMAI,UANA,CAOAC,MAPA,CAQAC,aARA,CASAC,WATA,CAUAC,kBAVA,CAWAC,SAXA,CAYAC,UAZA,CAaAC,cAbA,CAcAC,gBAdA,CAeA,CACA,aAMA,cACAC,4CADA,CAEAC,uBAFA,CAGAC,oBAHA,EAMA,sBAEAnF,aAFA,CAOAC,IAPA,gBAOA,iBACA2C,+BADA,CAEAwC,kDAFA,CAQAtC,2CACA,kCACA,oGACA,CAXA,CAcAuC,mCACAjB,oCADA,CAEAA,wCAFA,CAGAA,0CAHA,CAIAI,uFACA,CAnBA,CAsBAc,mCACAlB,oCADA,CAEAA,0CACA,CAzBA,CA4BAmB,qDACA,UACAC,+CADA,CAEA9D,4BAFA,CAGA+D,kCAHA,EAKA,4DACA,CAnCA,CAsCAC,qDACAtF,kDACAmF,0GACA,CAFA,CAGA,CA1CA,CA4CA,eACAI,qBACApC,gBADA,CAEA1C,8BAFA,CAGA2C,4BAHA,CAIAC,4BAJA,GADA,CAOAmC,wBAPA,CAQAC,oCARA,CA5CA,CAsDA,+EAtDA,CAwDA,6CACAlC,kBADA,CAEA,+BAFA,GAGA,gBAHA,CAIAf,gCAJA,CAMA,CANA,CAxDA,CAgEA,oDACAe,kBADA,CAEA2B,aACA,CAHA,CAhEA,CAqEAxC,iBArEA,EAsEA,WAtEA,CAyEA,cAzEA,CA2EAF,WACAjE,EADA,CACA,QADA,CACA,WACAmE,iBADA,CAEA,aAFA,CAIA,aAEA,CAPA,EAQAnE,EARA,CAQA,gBARA,CAQA,oBACA+G,6CADA,CAEAL,aACA,CAXA,EAYA1G,EAZA,CAYA,WAZA,CAYA,oBACAmH,qBADA,GAEAJ,sDAFA,CAGAL,aAHA,CAKA,CAjBA,EAkBA1G,EAlBA,CAkBA,WAlBA,CAkBA,WACA,eACA,CApBA,EAqBAA,EArBA,CAqBA,YArBA,CAqBA,WACA,gBACA,CAvBA,CAwBA,CA1GA,CA+GAiF,MA/GA,kBA+GA,IAEAC,+CAFA,CAGAkC,oDAHA,CAIAA,yCAJA,CAKAA,gDALA,CAMAlC,yCACA,CAtHA,CA2HAC,OA3HA,mBA2HA,CACA1D,2DADA,CAEA,kBACA,CA9HA,CAmIA2D,MAnIA,kBAmIA,CACA,sBACAiC,IADA,CACA,UADA,KAEAhC,WAFA,CAEA,UAFA,CAGA,CAvIA,CA4IAC,OA5IA,mBA4IA,CACA,sBACA+B,IADA,CACA,UADA,KAEA9B,QAFA,CAEA,UAFA,CAGA,CAhJA,CAqJAC,IArJA,gBAqJA,CACAC,iCACA,CAvJA,CA4JAC,IA5JA,gBA4JA,CACAjE,mCACA,CA9JA,EAgKA,CA3MA,C,CCtBA5B,2HACA,qEACA,gCADA,CAEAC,8CAFA,CAEAC,aAFA,CAGA,2FAYA,MATA4B,wDASA,EARAE,yBAQA,EARAC,8CAQA,EAPAD,gCAOA,CAPAC,kFAOA,EANAH,iCACA,wBAKA,EAJAE,gCAIA,EAJAC,8CAIA,EAHAD,uCAGA,CAHAC,kFAGA,EAFAH,iCACA,wLACA,OACA,CAhBA,CAiBA,CAlBA,C,CCAA9B,8G,CCmBAA,uFACA,QADA,CAEA,QAFA,CAGA,MAHA,CAIA,cAJA,CAKA,gBALA,CAMA,uFANA,CAOA,0FAPA,EAQA,kEACA,aADA,aAmWAyH,QAnWA,CAgEA,sDACAC,cADA,CAMAC,iCACAD,QADA,GAEAA,4CAFA,CAGAA,8CAHA,CAKA,CAXA,CAcAE,KAKAC,yCACA,mCACA,CAPA,CAeAC,8CACA,qCASA,MARAC,kDAQA,CAFA,6DAEA,KACA,CA1BA,CAgCAC,2CACA,oCACA,CAlCA,CA0CAC,iDACA,qCASA,MARAF,oDAQA,CAFA,+DAEA,KACA,CArDA,CA2DAG,qDACA,yCACA,CA7DA,CAqEAC,gEACA,qCAeA,MAdAJ,8CAcA,CAZA,mBAYA,EATA,4EASA,CAFA,yEAEA,KACA,CAtFA,CA6FAK,qCACA,uCACA,CA/FA,CAqGAC,uCACA,kCACA,CAvGA,CA+GAC,2CACA,qCAeA,MAdAP,gCAcA,CAZA,mBAYA,EATA,8DASA,CAFA,2DAEA,KACA,CAhIA,CAuIAQ,uCACA,iBAwBA,MAtBA,oBAsBA,GArBA,sDAqBA,CAnBA,iBAmBA,EAhBA,wCAgBA,EAfAvE,4BAeA,CAdAC,4BAcA,GAZAD,2BAYA,CAXAC,6BAWA,EATA,6BASA,EAHA,6BAGA,MACA,CAjKA,CAwKAuE,iCAUA,MATA,oBASA,GARAb,YAQA,CAHA,0BAGA,MACA,CAnLA,CA4LAc,6CACA,uCA2BA,MAzBA,oBAyBA,GAxBAd,YAwBA,CAtBAe,6BAsBA,CArBAC,mCAqBA,CApBAC,6CAoBA,CAlBAlB,yBACA1D,KADA,CACAA,KADA,EAEAC,MAFA,CAEAA,MAFA,CAkBA,CAdAyD,2BACAmB,GADA,CACA,MADA,CACA,0DADA,EAEA7E,KAFA,CAEAA,wBAFA,EAGAC,MAHA,CAGAA,0BAHA,CAcA,CATA6E,8DASA,CARAA,yDAQA,CAHA,2BAGA,MACA,CAzNA,CA+NAC,2CACA,aACA/E,OADA,CAEAC,QAFA,EAQA,MAJA,oBAIA,GAHA+E,sFAGA,CAFAA,yFAEA,SACA,CAzOA,CA+OAC,qCACA,UACAjF,OADA,CAEAC,QAFA,EAQA,MAJA,oBAIA,GAHAiF,2CAGA,CAFAA,6CAEA,MACA,CAzPA,CAiQAC,wDACAH,QADA,CACAN,SADA,CAEAE,aACAQ,GADA,CAEAC,GAFA,CAFA,CAoBA,MAdA,yCAcA,GAbAX,6BAaA,CAZAM,8BAYA,CAXAhF,oBAWA,CAVAC,sBAUA,CARAD,qBAQA,GAPA4E,mCAOA,EAJA3E,uBAIA,GAHA2E,qCAGA,wCACA,CAtRA,CA8RAU,4BAiBA,MAhBA,oBAgBA,GAdA,aAcA,CAXA5B,mCAWA,CAVAA,mEAUA,CATAA,yDASA,CAHA,6CAGA,MACA,CAhTA,CAuTA6B,yBACA,uBAgBA,MAfA,8CAeA,GAdAC,2CAcA,CAXA9B,kEAWA,CAVAA,6BAUA,CATAA,sCASA,CAHA,yCAGA,MACA,CAzUA,CAdA,CA2VA+B,gDAEAvH,WAFA,CAEAwH,mBAFA,EAKAvJ,EALA,CAKA,MALA,CAKA,WACA,qCAGA,8CAJA,CAKA,gDALA,CAMA,kDANA,CAOA,4DAPA,CAUAyB,mBACA6H,kCACA,CAFA,CAGA,CAlBA,EAqBAtJ,EArBA,CAqBA,QArBA,CAqBA,WACA,+BACAuH,UAEAiC,qDAFA,CAGAC,6CAHA,CAIAC,iDAJA,CAOAC,oBAPA,CAQAC,6BARA,CAFA,CAgBA,qBACA,CAtCA,EAyCA5J,EAzCA,CAyCA,gBAzCA,CAyCA,WACA,cACA,mBAFA,EAIAyB,mBACAkD,oBACA,CAFA,CAIA,CAjDA,EAoDA3E,EApDA,CAoDA,SApDA,CAoDA,WACA,aADA,CAEAuH,aACA,CAvDA,CA3VA,CA0ZA,MAJA9F,oBACA6H,6BACA,CAFA,CAIA,iBACA,CA9cA,cACAO,qBADA,CAEAC,YAFA,CAGAC,cAHA,CAIAC,sBAJA,EAgdA,8BACA,CAteA,C,CCnBAnK,0HACA,qEAMA,MALA,iCAKA,CAJAC,8CAIA,CAJAC,aAIA,sRACA,CAPA,CAQA,CATA,C,CCAAF,kHACA,qEAKA,+BAEA,4BAaA,MAZA8B,iCAYA,EAXAE,oBAWA,EAXAC,8CAWA,EAVAD,2BAUA,CAVAC,kFAUA,EATAH,iCACA,KAQA,CAPAG,gIAOA,EANAA,kBAMA,IANAH,cAMA,EALAA,WAKA,EAJAE,oBAIA,EAJAC,8CAIA,EAHAD,2BAGA,CAHAC,kFAGA,EAFAH,iCACA,iBACA,OACA,CACA,+BAGA,6BACA,CAzBA,gCADA,CAEA7B,8CAFA,CAEAC,aAFA,CAGA,qGAqCA,MAZA4B,4CAYA,EAXAE,mBAWA,EAXAC,8CAWA,EAVAD,0BAUA,CAVAC,kFAUA,EATAH,iCACA,qBAQA,EAPAE,uBAOA,EAPAC,8CAOA,EANAD,8BAMA,CANAC,kFAMA,EALAH,iCACA,qCAIA,CAHAG,4HAGA,EAFAA,kBAEA,IAFAH,cAEA,EADAA,qBACA,OACA,CAzCA,CA0CA,CA3CA,C,CCAA9B,6G,CCmBAA,sFACA,QADA,CAEA,QAFA,CAGA,MAHA,CAIA,cAJA,CAKA,aALA,CAMA,+CANA,CAOA,sFAPA,CAQA,8EARA,CASA,yFATA,EAUA,8FACA,aA6EA,8CACAoK,uBADA,CAEAxI,mCAFA,CAIA,IACA,CAQA,mDACAyI,kBADA,CAEAzI,+BAFA,CAGA0I,UAHA,CAKA1I,mBALA,CAQA,IACA,CAQA,wCACA,4BAMA,MAJA2I,gBAIA,GAHAC,oBAGA,CAFAA,2BAEA,WACA,CAOA,kCAIA,MAHAA,wCAGA,EAFAA,4BAEA,UACA,CAoCA,qDAEAJ,WACAlH,SADA,CAEAuH,WAFA,CAGAC,gBAHA,CAIAC,YAJA,CAKAC,WALA,CAFA,CASAC,cATA,CAUAC,aAVA,CAWApD,aAXA,CAkBAqD,yDACAnJ,uCACA4I,8BACA,CAFA,CAGA,CAtBA,CAyBA5C,KAMAQ,qCACA,gCACA,CARA,CAcA4C,iCAMA,MAHA,oBAGA,EAFA,iDAEA,KACA,CArBA,CA2BAC,2BACA,oBACA,CA7BA,CAoCAC,+CACAJ,+BADA,CAEAV,oBAFA,CAIA,IACA,CAzCA,CAgDAe,qCACAL,+BADA,CAEAV,eAFA,CAIA,IACA,CArDA,CA4DAgB,uCACA,oDACA,CA9DA,CAuEAC,qCA4BA,MA1BAf,0DA0BA,CAzBAA,0BAyBA,GAxBAF,wBAwBA,CAvBAA,oBAuBA,CApBAS,yDAoBA,CAnBAC,uDAmBA,CAhBA,mBAgBA,GAfAQ,mDAeA,CAdA,iBAcA,EAPA,wCAOA,CAJAR,oBAIA,EAHA,uCAGA,MACA,CApGA,CA4GAS,mDAiBA,MAfAjB,iEAeA,CAdAA,iCAcA,GAbAF,+BAaA,CAVA,mBAUA,EATAkB,iEASA,CAFA,sDAEA,MACA,CA9HA,CAsIAE,yCACA,cAuBA,MApBAlB,sDAoBA,CAnBAA,4BAmBA,GAlBAF,0BAkBA,CAjBAA,kCAiBA,CAdA,wCAcA,GAbAI,gDAaA,CAZAA,SAYA,EAXAc,wCAWA,EAFA,iEAEA,MACA,CA/JA,CAuKAG,mCACA,iCAIA,MAHAC,2CAGA,EAFA,uBAEA,KACA,CA7KA,CAmLAC,uBACA,qCAIA,MAHA,mCAGA,CAFA,sCAEA,CADA,gDACA,KACA,CAzLA,CAzBA,CAsNAC,+CAEA1J,WAFA,CAEA2J,kBAFA,EAKA1L,EALA,CAKA,MALA,CAKA,WAEA,YAFA,CAKAyB,mBACAgK,iCACA,CAFA,CAGA,CAbA,EAgBAzL,EAhBA,CAgBA,QAhBA,CAgBA,WAYA,0DACA,6BACAqB,SADA,CAEAZ,uBAFA,CAGAkL,gCACA,OACAhI,gBADA,CAEAC,gBAFA,CAGAqG,mCAHA,CAKA,CANA,CAHA,IAYA,MADAtF,6DACA,UACA,CAzBA,cA4BA4C,UACAqE,kEADA,CAEAC,qGAFA,CAGAC,kGAHA,CAIAC,8FAJA,CA7BA,CAmCAC,iCAnCA,CAsCA,uEACA,4CACArH,mDACA,CAHA,CAtCA,CA4CA,iBA5CA,CAiDA,qBACA,CAlEA,EAqEA3E,EArEA,CAqEA,SArEA,CAqEA,WACA,mBADA,EAEA4K,8BAEA,CAzEA,EA0EA5K,EA1EA,CA0EA,QA1EA,CA0EA,WACA,mBADA,EAEA4K,8BAEA,CA9EA,EAiFA5K,EAjFA,CAiFA,SAjFA,CAiFA,WACAyB,iCADA,CAEA8F,aAFA,CAGA0C,aAHA,CAIAU,aAJA,CAKAD,gBACA,CAvFA,CAtNA,CAqTA,MAJAjJ,oBACAgK,4BACA,CAFA,CAIA,gBACA,CA1dA,GAmBAQ,WACAlJ,eADA,CAEAuH,WAFA,CAGAC,uBAHA,CAnBA,CA6BA2B,kBACAvI,gBADA,CAEAC,uBAFA,CAGA8G,cAHA,CAIAH,cAJA,EAKA,CACA5G,eADA,CAEAC,2BAFA,CAGA8G,cAHA,CAIAH,cAJA,CALA,CAUA,CACA5G,cADA,CAEAC,0BAFA,CAGA8G,cAHA,CAIAH,cAJA,CAVA,CA7BA,CAkDA4B,yBACAxI,iBADA,CAEAC,qBAFA,EAGA,CACAD,gBADA,CAEAC,oBAFA,CAHA,CAlDA,CAgEAwI,aACArJ,cADA,CAEAuH,kBAFA,CAGAG,kBAHA,CAIAD,mBAJA,CAKAD,4BALA,CAhEA,CA4dA,6BACA,CAveA,C,CCCA1K,kEACA,QADA,CAEA,QAFA,CAGA,UAHA,CAIA,gBAJA,CAKA,wBALA,CAMA,8EANA,CAOA,6EAPA,EAQA,SACAqE,CADA,CAEAzC,CAFA,CAGA4K,IAHA,CAIAC,eAJA,CAKAvG,aALA,CAMAwG,uBANA,CAOAC,sBAPA,CAQA,CACA,aAEA,sBAEAnL,YAFA,CAOAC,qBAQA,2BACA,kCACA,8BACA,CAXA,GACAqD,UADA,CAEAV,+BAFA,CAcA,gCAdA,CAgBAE,iBAhBA,EAiBA,WAjBA,CAoBA,cApBA,CAsBAF,WACAjE,EADA,CACA,QADA,CACA,WACAmE,iBADA,CAEAQ,WAFA,CAIAA,WAEA,CAPA,EAQA3E,EARA,CAQA,YARA,CAQA,gCACA2E,qBADA,EAEAA,sBACAwD,aADA,CACApF,IADA,EAEAiF,oBAFA,CAEAuC,WAFA,EAGA5C,cAHA,CAGAoB,gBAHA,EAIAjB,eAJA,CAIAiB,iBAJA,EAKAX,aALA,EAOA,CAjBA,EAkBApI,EAlBA,CAkBA,WAlBA,CAkBA,WACA2E,aACA,CApBA,EAqBA3E,EArBA,CAqBA,YArBA,CAqBA,WACA2E,cACA,CAvBA,CAwBA,CArDA,CA2DAM,yBAQA,sBACAN,8CADA,EAQAV,mBACA,YADA,CAEAU,oCAFA,CAGAA,qCAHA,CAIAA,8BAJA,CAOA,CAvBA,GACAA,UADA,CAEAV,+BAFA,CAGAwI,+BAHA,CAkCA,MANAvI,uGACAS,yDADA,EAEA+H,YAEA,CAJA,CAIA,EAJA,EAMA,cACA,8BACA/H,wEACA3E,EADA,CACA,OADA,CACA,WACA2E,wBADA,EAEA,cAFA,CAKA,gCACA,mBADA,EAEA+H,YAEA,CAJA,CALA,CAWA,oDACAA,YACA,CAFA,CAXA,CAeAC,SACA,CAjBA,CAkBA,CAnBA,CADA,CAqBA,8BACAhI,oFACA3E,EADA,CACA,OADA,CACA,WACA,sCADA,CAEA2M,SACA,CAJA,CAKA,CANA,CArBA,EA6BA,CA1HA,CAiIAxH,2BACA,SADA,EAEAjB,4BAFA,CAIA,oBAJA,EAKA,8BALA,CAOA,qBAPA,EAQA,+BARA,CAUA,yBAVA,CAWA,0BACA,CA7IA,CAkJAkB,yBACA,oBADA,EAEA,6BAEA,CAtJA,CA2JAE,2BACA,oBADA,EAEA,8BAEA,CA/JA,CAoKAE,qBACA,oBADA,EAEA,2BAEA,CAxKA,CA6KAE,qBACA,oBADA,EAEA,2BAEA,CAjLA,EAmLA,CAtMA,C,CCpBA7F,8FACA,qEAMA,MALA,iCAKA,CAJAC,8CAIA,CAJAC,aAIA,+7BACA,CAPA,CAQA,CATA,C,CCsBAF,2DACA,QADA,CAEA,QAFA,CAGA,MAHA,CAIA,aAJA,CAKA,4BALA,CAMA,2BANA,CAOA,uBAPA,CAQA,sCARA,CASA,iCATA,CAUA,uCAVA,CAWA,4BAXA,CAYA,gDAZA,CAaA,0DAbA,EAcA,SACAqE,CADA,CAEAzC,CAFA,CAGAkE,EAHA,CAIAjE,QAJA,CAKAkL,iBALA,CAMAC,gBANA,CAOAC,YAPA,CAQAC,cARA,CASAC,aATA,CAUAC,mBAVA,CAWAC,eAXA,CAYAC,eAZA,CAaAC,SAbA,CAcA,CACA,aAQA,8BACAC,8CADA,CAEAF,oCACA,CACA,0BACAA,6CADA,CAEAE,sBACA,CAZA,uCACAC,sDALA,CAQA,2BAYA,OAGAjM,uBAHA,CASAkM,cATA,0BASA,CACA,2BAEA,kCACAC,4CADA,CAEAC,iCAFA,CAGAC,kDAHA,CAIAC,yDAJA,CAKA/I,iDALA,CAMAgJ,uDANA,CAOAC,qCAPA,CAQAC,8CARA,CASAC,mDATA,EAWA,CAvBA,CA6BAC,SA7BA,qBA6BA,CACA,iMACA,6HACA,CAhCA,CAsCAC,aAtCA,yBAsCA,IACA/M,wBADA,CAIAiJ,2DAJA,CAKA,mCACA,CA5CA,CAiDA+D,OAjDA,mBAiDA,CACA,6CACAtN,OAFA,EAGAa,6CACA,4DACA,qCACAA,uBAFA,EAGA0M,wBAEA,CACA,CAPA,CASA,CA7DA,CAwEA7M,IAxEA,gBAwEA,iBACA8M,+BADA,CAEA3B,+BAFA,CA2EA,MAvEAA,oDAuEA,CAtEAA,8BAsEA,CAjEA,KACAzM,EADA,CACA,YADA,CACA,cACAqO,uCADA,CAEAC,8CAFA,CAOA,MAHA,0CAGA,CAFA,wDAEA,mBACAC,UADA,CACAH,gCADA,CACAC,SADA,CACAC,aADA,EAEAE,IAFA,CAEA,mBACA,oCADA,CAEA,kDACA,CALA,EAMAC,KANA,CAMA,cACA,uCADA,CAIA,cAJA,EAKA,mCACAC,6EADA,CAEA,+CAFA,CAKA,CAhBA,CAiBA,CAzBA,EA0BA1O,EA1BA,CA0BA,OA1BA,CA0BA,cACA2O,gDADA,CAEAC,mCAFA,CAIAD,cAJA,GAKAC,QALA,CAMA,0CANA,CAQA,+BARA,CAWA,CArCA,EAsCA5O,EAtCA,CAsCA,UAtCA,CAsCA,2BACAoO,wCADA,CAEAA,mCACA,CAzCA,EA0CApO,EA1CA,CA0CA,YA1CA,CA0CA,WACA,uCACA,CA5CA,EA6CAA,EA7CA,CA6CA,YA7CA,CA6CA,WACA,sCACA,CA/CA,EAgDAA,EAhDA,CAgDA,aAhDA,CAgDA,WACA,8BACA,CAlDA,EAmDAA,EAnDA,CAmDA,YAnDA,CAmDA,WACA,6BACA,CArDA,EAsDAA,EAtDA,CAsDA,OAtDA,CAsDA,WACA,wCACA,CAxDA,EAyDAA,EAzDA,CAyDA,cAzDA,CAyDA,WACA,yCADA,CAEA,cACA,CA5DA,EA6DAA,EA7DA,CA6DA,OA7DA,CA6DA,WACA,gBACA,CA/DA,CAiEA,iBACAsB,IADA,GAEAkN,IAFA,CAEA,eACAJ,oDADA,CAEAA,wCACA,CALA,CAMA,CAzJA,CAkKAnJ,MAlKA,kBAkKA,IACA/D,wBADA,CAEAuL,+BAFA,CAIAvL,iDAJA,CAMAuL,2DACA,CAzKA,CAoLAoC,QApLA,mBAoLAF,cApLA,CAoLA,CACA,8CACA,CAtLA,CAkMAG,UAlMA,qBAkMAH,cAlMA,CAkMAC,QAlMA,CAkMA,iBACAnC,+BADA,CAEA5L,gCAFA,CAIAkO,mCACA,gDACA,CANA,CAUA,MAFAC,wCAEA,sCACAJ,qCADA,CAGAtB,gDAHA,CAIAA,sDAJA,CAMA,2FACAA,yBADA,EAEAzM,OAFA,GAGAb,EAHA,CAGA,OAHA,CAGA,cACA,2BADA,CAEAiP,WAFA,CAGAvN,uGACA,CAPA,EAQA1B,EARA,CAQA,MARA,CAQA,4BACA,oEACA,wFACA,CAXA,EAYAA,EAZA,CAYA,QAZA,CAYA,8BACA,qCADA,CAEA,kCAFA,CAGA2M,SACA,CAhBA,EAiBArL,IAjBA,EAkBA,CAxBA,CAyBA,CArOA,CA+OA4N,UA/OA,sBA+OA,uBACA,yDADA,CAGA,eAHA,CAIA,8BACA,kBACAlP,EADA,CACA,OADA,CACA2M,OADA,EAEAwC,KAFA,EAGA,CAJA,CAJA,CAUAC,iBACA,CA1PA,CAmQAjK,OAnQA,mBAmQA,CACA,oCAGA,eAJA,EAKA,gBACAnF,EADA,CACA,OADA,CACAqP,cADA,EAEAF,KAFA,EALA,CASA,oBATA,CAWA1C,UAXA,EAYAA,iCAEA,CAjRA,CAmRA,CAnUA,C,CCNA5M,+DACA,QADA,CAEA,SAFA,CAGA,QAHA,CAIA,mBAJA,EAKA,wCACA,aADA,GAGAyP,6BAHA,CAIAC,WAJA,CAeA,MAVAD,sBAUA,EANAE,8BACAC,OADA,CACAH,qBADA,EAEAI,IAFA,CAEA3B,cAFA,EAGAS,IAHA,CAGA,oCAHA,CAMA,2CACAe,gBADA,CAGA,mBAHA,CAIAA,qBAJA,CAMAA,mCACA,0FACA,CAFA,CAEAA,qBAFA,CANA,CAEAH,yBAQA,CACA,CA/BA,C,CCMAvP,mDACA,QADA,CAEA,mBAFA,CAGA,cAHA,CAIA,2CAJA,CAKA,sDALA,EAMA,oEACA,aAOA,OACAwB,4BADA,CAMA6M,OANA,mBAMA,CAIA,yBAJA,CAWA,wDAEA,iDAFA,MAIAzM,8BAJA,CAKAA,mDACAA,gCADA,CAEAkO,qBAFA,CAIAhM,KACA,CALA,CALA,CAaAiM,YACA,CAzBA,CAoCA,iFACA,oBACAC,OADA,CAEA9P,kCAFA,CAGA+P,6BAHA,CAIAC,uBAJA,CAKAC,eALA,CAMAC,aANA,CAOAC,aAPA,CAQAvN,uCARA,GAUA6L,IAVA,CAUA,yBACA,mBADA,CAGA2B,0BAHA,CAIAf,yBAJA,CAMAA,wBAEA,CAlBA,EAmBAX,KAnBA,CAmBA,gBAIA,MAHA2B,mDAGA,EAFA,4BAEA,sBACA,CAxBA,CAyBA,CACA,CArEA,CAiFA9O,IAjFA,eAiFAJ,MAjFA,CAiFAmP,MAjFA,CAiFA,CAKA,MAHA,6CAGA,2EACA,CAvFA,CA8FAlL,OA9FA,mBA8FA,CAMA,MAJA,wBAIA,CAHA,eAGA,kBACA,CArGA,CA8GAmL,cA9GA,yBA8GAC,MA9GA,CA8GAF,MA9GA,CA8GA,CACA,iFACA,CAhHA,CA0HAG,cA1HA,yBA0HA7B,cA1HA,CA0HA4B,MA1HA,CA0HAF,MA1HA,CA0HA,CACA,gGACA,CA5HA,CAqIAI,OArIA,kBAqIA9B,cArIA,CAqIA0B,MArIA,CAqIA,CACA,oBACA,6DADA,CAEAA,MAFA,CAGA,MAHA,KAKA7B,IALA,CAKA,qDALA,CAMA,CA5IA,CAuJAD,UAvJA,qBAuJAI,cAvJA,CAuJAnN,KAvJA,CAuJA2O,QAvJA,CAuJAE,MAvJA,CAuJA,CACA,iBACA,CACAhC,eADA,CAEAqC,qBAFA,CADA,CAKAL,UALA,EAQA,oGACA,CAjKA,CAmKA,CAjLA,C,CCAAxQ,mDACA,mBADA,CAEA,cAFA,CAGA,UAHA,CAIA,+BAJA,CAKA,sDALA,EAMA,kEACA,aADA,cAwMAyH,QAxMA,CA0CA,8EACAqJ,yCADA,CAEAC,0CAFA,CAGAA,IAHA,GAMAC,gCANA,CAOAA,kCAPA,CAQAA,0CARA,CASAA,sDATA,CAUAA,wDAVA,CAWAA,4CAXA,CAYA,CAQA,8CACA,eAQA,MAPAC,yCACAC,kCADA,CAEAC,6BAFA,CAGAJ,oCAHA,GAIA/P,oBAJA,CAMA,CANA,CAOA,QACA,CAxEA,GAGAoQ,sCAHA,CAIAC,oCAJA,CAMAzO,sCANA,CAaA0O,iCACAC,SADA,CAEAC,aAFA,CAGAC,eAHA,CAIAC,WAJA,CAKAC,QALA,EAbA,CAyBAC,iCACAL,SADA,CAEAC,aAFA,CAGAC,eAHA,CAIAC,WAJA,CAKAC,QALA,CAMAE,UANA,CAOAC,QAPA,EAzBA,CA+EA,OACAtQ,4BADA,CAMA6M,OANA,mBAMA,CAIA,yBACA,CAXA,CAmBA5M,IAnBA,eAmBAsQ,OAnBA,CAmBA,iBAEA,MADA,kBACA,UACA/B,0DADA,CAEA9P,sCAFA,CAGAiQ,UAHA,GAIAxB,IAJA,CAIA,mBACA,uBAEA,mDAHA,CAIA,mCAJA,CAKA,qBALA,IAMAqD,2CANA,CAOAC,oDAPA,CAoBA,MAZA/R,mBACA4O,mCADA,CAEAoD,cAFA,CAGAC,kBAHA,CAIAC,yBAJA,CAKAC,2BALA,CAMAC,kBANA,CAOA3Q,mCAPA,CAQA4Q,SARA,CASAvR,wDATA,CAUAwR,qCAVA,CAYA,KACA,CAzBA,CA0BA,CA/CA,CAsDAlN,OAtDA,mBAsDA,CASA,MAPA,gBAOA,CALA,cAKA,GAJA,mBAIA,mBACA,CAhEA,CAwEAsL,OAxEA,kBAwEA9B,cAxEA,CAwEA,iBACA,oCAEA,uDAGA,8EACA,QACA,+EAEA,gBACAkB,sEADA,CAEA9P,4CAFA,CAGAiQ,UAHA,GAKAxB,IALA,CAKA,eAKA,MAJAzO,2BAIA,CAHAA,gDAGA,CAFAA,iBAEA,CADA,qCACA,KACA,CAXA,EAYAyO,IAZA,CAYA,qDAZA,CAcA,CAhGA,CAyGAgC,cAzGA,yBAyGA7B,cAzGA,CAyGA4B,MAzGA,CAyGA,kFACAnC,+BADA,CAEAyC,yCAFA,CAGAyB,iCAHA,CAIAC,SAEAC,kCA2BAlL,QA3BA,CACA,8CACA,iCACAmL,gEADA,CAEAC,6CACAC,MADA,CACA,+CADA,EAEAC,IAFA,CAEA,2CAFA,CAFA,CAKA,0BALA,CAMA/B,0CANA,CAQAA,mCACAyB,qBADA,CAEAI,2BAFA,CAKA,CAbA,IAcA7B,gDAdA,CAeAA,0CAfA,CAiBAA,mCACAyB,qBADA,CAEAzB,0BAFA,CAjBA,CAiCA,MATA,6BASA,GARAA,+DAQA,EANA,wCAMA,GALAA,mCAKA,EAFAgC,wFAEA,0CACA,CAtCA,CAwCAC,sDAxCA,CAJA,CAqDA,GAPAP,yBAOA,CALAlC,gBAKA,GAHA,yDAGA,qCACA,wBAEA,CAjKA,CAwKAC,cAxKA,0BAwKA,CAEA,wBACA,CA3KA,CA6KA,CAlQA,C,CCtBAzQ,kGACA,qEACA,gCADA,CAEAC,8CAFA,CAEAC,aAFA,CAGA,wGAUA,MAPA4B,4iBACAC,yNADA,CAEA,qRAFA,CAGAA,uLAHA,CAIA,sWAJA,CAKAA,iLALA,CAMA,wIACA,OACA,CAdA,CAeA,CAhBA,C,CCAA/B,sF,CCmBAA,+DACA,SADA,CAEA,QAFA,CAGA,oBAHA,CAIA,iCAJA,CAKA,uCALA,CAMA,4BANA,CAOA,8DAPA,CAQA,8DARA,CASA,mCATA,EAUA,qGACA,aASA,wHACAK,6BACA,CACAC,+BADA,CAEAC,yBAFA,CAGA2S,qCAHA,CAIAC,+BAJA,CADA,CAOA9R,MAPA,CADA,CAWAhB,mCACAI,0BADA,CAEAC,iDAFA,CAGAC,oDAHA,CAIAC,gBAJA,EAXA,CAmBA,qEAGA,MAFA6M,uDAEA,8DACAtN,EADA,CACA,QADA,CACA,WACA,2LACA,kCAFA,CAGA,kCAHA,CAIA,8CACA,CANA,EAOAA,EAPA,CAOA,OAPA,CAOA,kCACAC,+BAEAgT,iBAFA,CAGA,iBACA,CAJA,CAKA,CAbA,CAcA,CACA,CAzDA,C,CCAApT,6DACA,QADA,CAEA,mBAFA,CAGA,cAHA,CAIA,UAJA,CAKA,aALA,CAMA,sDANA,CAOA,aAPA,CAQA,2DARA,EASA,SACA4B,CADA,CAEAyR,YAFA,CAGAC,OAHA,CAIAC,OAJA,CAKAC,aALA,CAMAC,uBANA,CAOA5R,QAPA,CAQA6R,eARA,CASA,CACA,aADA,GAGAC,mCAHA,CAKAC,uCALA,CAOAtS,qDAPA,CAaAC,gBACA,CACAb,6EADA,CAEAC,oDAFA,CAGAC,kBAHA,CADA,CAbA,CAqBAiT,kEACA9S,kHADA,CAEAE,IAFA,CAEAI,MAFA,CAEAJ,IAFA,CAEAC,QAFA,CAEAG,MAFA,CAEAH,QAFA,CAEAC,QAFA,CAEAE,MAFA,CAEAF,QAFA,CAEAC,cAFA,CAEAC,MAFA,CAEAD,cAFA,CAEA0S,cAFA,CAEAzS,MAFA,CAEAyS,cAFA,CAGA9S,2GAHA,CAKA,gBACAgP,gFADA,CAEAG,UAFA,GAGAxB,IAHA,CAGA,mBACA,gCAaA,MAXAoF,2HAWA,CATAnS,uCASA,CAPAkS,cAOA,GANA,8BAMA,GALAC,gCAKA,EAHAnS,sDAGA,eACA,CAlBA,CAmBA,CA7CA,CAkDA,OACAJ,cADA,CAGA6M,OAHA,mBAGA,CACA,yBACA,CALA,CAiBA5M,IAjBA,eAiBAuS,OAjBA,CAiBA,sEACA,uEACAC,yCADA,IAEAzR,cAFA,CAGA0R,iFACA/T,EADA,CACA,OADA,CACA,iBACAqC,yBACA2R,oBADA,CAEA,CACAC,sDADA,CAEA/R,+BAFA,CAGAgS,2BACAjU,sBACA,CALA,CAFA,CASA,CAXA,EAYAD,EAZA,CAYA,OAZA,CAYA,cACAqC,QADA,GAEAA,kBAFA,CAGAA,aAHA,EAKAZ,0BALA,EAMAC,6BANA,CAQAP,iBACA,CArBA,EAsBAnB,EAtBA,CAsBA,SAtBA,CAsBA,WACAqC,QADA,GAEAA,kBAFA,CAGAA,aAHA,CAKA,CA3BA,CAHA,CA+BA,uBACA,CAhCA,CAiCA,CAnDA,CAqDA8C,OArDA,mBAqDA,CAGA,MAFA,gBAEA,kBACA,CAzDA,CA2DA,CA/HA,C,CCnBA,gOACA,2kgBADA,C,CCAAtF,qE,CACAA,MCFA,8P","names":["define","helpers","data","on","runner","testRunnerConfig","testDefinition","serviceCallId","providers","id","module","bundle","category","proxy","communicator","plugins","options","view","readOnly","fullPage","hideActionBars","config","logger","defaultPlugins","name","init","uri","state","_","feedback","buffer","escapeExpression","helper","stack1","setTemplate","topBlockTpl","$info","title","$element","$icon","topBlock","_defaults","bootstrap","serviceController","serviceExtension","_entries","timeout","undef","storage","getParameters","type","parameters","getServiceCallId","getServiceController","getServiceExtension","getTestActionUrl","getItemActionUrl","getTimeout","deviceList","deviceTypeMap","devicesHelper","getDevicesByType","value","label","width","height","getMobileDevices","getDesktopDevices","testRunner","$","isPluginAllowed","after","$contentArea","$extendedTextinteractionTextAreas","$ckeEditorsContent","$ckeEditorContent","$ckeEditorIFrame","setTimeout","self","control","icon","text","className","e","render","$container","destroy","enable","removeClass","disable","addClass","show","hider","hide","__","moment","autoscroll","strPad","pluginFactory","pciResponse","rendererStrategies","buttonTpl","consoleTpl","consoleLineTpl","consoleCloserTpl","submitTitle","submitText","submitIcon","pluginConfig","showConsole","hideConsole","addConsoleLine","time","message","showResponses","$button","$console","$consoleCloser","responses","$navigation","prop","Math","controls","resetScale","api","getDeviceWidth","setDeviceWidth","componentConfig","getDeviceHeight","setDeviceHeight","getDeviceOrientation","setDeviceOrientation","isDeviceMode","getDeviceType","setDeviceType","previewDevice","clearScale","applyScale","frameSize","frameMargins","scaleFactor","css","transformer","getFrameMargins","margins","getFrameSize","size","getScaleFactor","x","y","wrap","unwrap","$wasWrappedElement","devicesPreviewer","devicesPreviewerTpl","$previewContainer","$previewFrame","$previewContent","$wrappedElement","$wrappedElementContainer","deviceType","deviceWith","deviceHeight","deviceOrientation","selected","list","identifier","current","$selector","device","orientation","desktop","mobile","devicesList","typeData","setControlsProp","updateMode","getType","getOrientation","getDevice","getDeviceData","setType","updateSelect2","setOrientation","setDevice","select","setterName","reset","devicesSelector","devicesSelectorTpl","items","$typeSelector","$desktopSelector","$mobileSelector","$orientationSelector","lookupSelecter","defaults","deviceTypesList","deviceOrientationsList","callbackMap","uuid","namespaceHelper","devicesPreviewerFactory","devicesSelectorFactory","areaBroker","resizeItem","resolve","areaBrokerFactory","testStoreFactory","proxyFactory","toolboxFactory","qtiItemRunner","assetManagerFactory","assetStrategies","containerHelper","layoutTpl","_$previousContext","assetManager","loadAreaBroker","contentWrapper","content","toolbox","navigation","actionsBar","panel","header","context","loadProxy","loadTestStore","install","plugin","dataHolder","itemState","itemResponses","submitItem","then","catch","err","itemIdentifier","itemData","loadItem","renderItem","changeState","setContext","reject","unloadItem","clear","Promise","restoreContext","moduleConfig","handlers","moduleLoader","addList","load","JSON","actionParams","url","method","contentType","noToken","background","sequential","response","error","params","callTestAction","action","callItemAction","getItem","itemResponse","jump","item","testContext","presetMap","pluginId","categoryId","serviceControllerInit","serviceControllerGetItem","testSessionStates","initial","interacting","modalFeedback","suspended","closed","itemSessionStates","solution","review","configs","firstJump","firstItem","itemPosition","itemSessionState","testPartId","sectionId","canMoveBackward","attempt","allowSkipping","testMap","actions","move","testPartPosition","nextPartsSorted","filter","sort","updateTestContextWithItem","flagItem","proxyProvider","loadFromBundle","loadingBar","promiseQueue","request","urlUtil","loggerFactory","qtiTestPreviewerFactory","topBlockFactory","taoExtension","testPreviewerController","transformConfiguration","pluginsOptions","configuration","testUri","testPreviewConfig","previewComponent","window","isTest","onClose"],"sources":["../previewer/runner!tpl","../previewer/runner.js","../previewer/provider/item/css/item!css","../previewer/component/qtiItem.js","../previewer/adapter/item/qtiItem.js","../previewer/component/topBlock/tpl/topBlock!tpl","../previewer/component/topBlock/tpl/topBlockData!tpl","../previewer/component/topBlock/css/topBlock!css","../previewer/component/topBlock/topBlock.js","../previewer/config/item.js","../previewer/resources/devices.json!json","../previewer/helpers/devices.js","../previewer/plugins/content/cloneLogoInTestPreview.js","../previewer/plugins/content/enhancedReadOnlyMode.js","../previewer/plugins/controls/close.js","tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console","tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-line","tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-closer","../previewer/plugins/navigation/submit/submit.js","tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-previewer","../previewer/plugins/tools/scale/component/css/devicesPreviewer!css","../previewer/plugins/tools/scale/component/devicesPreviewer.js","tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-selector","../previewer/plugins/tools/scale/component/tpl/selector!tpl","../previewer/plugins/tools/scale/component/css/devicesSelector!css","../previewer/plugins/tools/scale/component/devicesSelector.js","../previewer/plugins/tools/scale/scale.js","../previewer/provider/item/tpl/item!tpl","../previewer/provider/item/item.js","../previewer/proxy/itemDataHandlers.js","../previewer/proxy/item.js","../previewer/proxy/test.js","../previewer/component/test/tpl/qtiTest!tpl","../previewer/component/test/css/qtiTest!css","../previewer/component/test/qtiTest.js","../previewer/adapter/test/qtiTest.js","onLayerEnd0.js","module-create.js","/github/workspace/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\ndefine('tpl!taoQtiTestPreviewer/previewer/runner', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"previewer-component\\\"></div>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Component that embeds the QTI previewer for tests and items\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/runner',[\n    'taoTests/runner/runnerComponent',\n    'tpl!taoQtiTestPreviewer/previewer/runner'\n], function (runnerComponentFactory, runnerTpl) {\n    'use strict';\n\n    /**\n     * Builds a test runner to preview test item\n     * @param {jQuery|HTMLElement|String} container - The container in which renders the component\n     * @param {Object}   config - The testRunner options\n     * @param {String}  [config.provider] - The provider to use\n     * @param {Object[]} [config.providers] - A collection of providers to load.\n     * @param {Boolean} [config.replace] - When the component is appended to its container, clears the place before\n     * @param {Number|String} [config.width] - The width in pixels, or 'auto' to use the container's width\n     * @param {Number|String} [config.height] - The height in pixels, or 'auto' to use the container's height\n     * @param {Boolean} [config.options.fullPage] - Force the previewer to occupy the full window.\n     * @param {Booleanh} [config.options.readOnly] - Do not allow to modify the previewed item.\n     * @param {Function} [template] - An optional template for the component\n     * @returns {previewer}\n     */\n    return function previewerFactory(container, config = {}, template = null) {\n\n        return runnerComponentFactory(container, config, template || runnerTpl)\n            .on('render', function() {\n                const { fullPage, readOnly, hideActionBars } = this.getConfig().options;\n                this.setState('fullpage', fullPage);\n                this.setState('readonly', readOnly);\n                this.setState('hideactionbars', hideActionBars);\n            })\n            .on('ready', function(runner) {\n                runner.on('destroy', () => this.destroy() );\n            });\n    };\n});\n\n","\ndefine('css!taoQtiTestPreviewer/previewer/provider/item/css/item',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/component/qtiItem',[\n    'context',\n    'taoQtiTestPreviewer/previewer/runner',\n    'css!taoQtiTestPreviewer/previewer/provider/item/css/item'\n], function (context, previewerFactory) {\n    'use strict';\n\n    /**\n     * Builds a test runner to preview test item\n     * @param {jQuery|HTMLElement|String} container - The container in which renders the component\n     * @param {Object} [config] - The testRunner options\n     * @param {String} [config.itemUri] - The URI of the item to load\n     * @param {Object} [config.itemState] - The state of the item when relevant\n     * @param {Object[]} [config.plugins] - Additional plugins to load\n     * @param {Object[]} [config.pluginsOptions] - Options for the plugins\n     * @param {String} [config.fullPage] - Force the previewer to occupy the full window.\n     * @param {String} [config.readOnly] - Do not allow to modify the previewed item.\n     * @param {Function} [template] - An optional template for the component\n     * @returns {previewer}\n     */\n    return function qtiItemPreviewerFactory(container, config = {}, template = null) {\n\n        const testRunnerConfig = {\n            testDefinition: 'test-container',\n            serviceCallId: 'previewer',\n            providers: {\n                runner: {\n                    id: 'qtiItemPreviewer',\n                    module: 'taoQtiTestPreviewer/previewer/provider/item/item',\n                    bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n                    category: 'runner'\n                },\n                proxy: {\n                    id: 'qtiItemPreviewerProxy',\n                    module: 'taoQtiTestPreviewer/previewer/proxy/item',\n                    bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n                    category: 'proxy'\n                },\n                communicator: {\n                    id: 'request',\n                    module: 'core/communicator/request',\n                    bundle: 'loader/vendor.min',\n                    category: 'communicator'\n                },\n                plugins: config.plugins || []\n            },\n            options: {\n                view: config.view,\n                readOnly: config.readOnly,\n                fullPage: config.fullPage,\n                plugins: config.pluginsOptions,\n                hideActionBars: config.hideActionBars,\n            }\n        };\n\n        //extra context config\n        testRunnerConfig.loadFromBundle = !!context.bundle;\n\n        return previewerFactory(container, testRunnerConfig, template)\n            .on('ready', runner => {\n                if (config.itemState) {\n                    runner.on('renderitem', () => runner.itemRunner.setState(config.itemState));\n                }\n                if (config.itemUri) {\n                    return runner.loadItem(config.itemUri);\n                }\n            });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/adapter/item/qtiItem',[\n    'lodash',\n    'core/logger',\n    'taoQtiTestPreviewer/previewer/component/qtiItem',\n    'ui/feedback'\n], function (_, loggerFactory, qtiItemPreviewerFactory, feedback) {\n    'use strict';\n\n    const logger = loggerFactory('taoQtiTest/previewer');\n\n    /**\n     * List of required plugins that should be loaded in order to make the previewer work properly\n     * @type {Object[]}\n     */\n    const defaultPlugins = [{\n        module: 'taoQtiTestPreviewer/previewer/plugins/controls/close',\n        bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n        category: 'controls'\n    }, {\n        module: 'taoQtiTestPreviewer/previewer/plugins/navigation/submit/submit',\n        bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n        category: 'navigation'\n    }, {\n        module: 'taoQtiTestPreviewer/previewer/plugins/tools/scale/scale',\n        bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n        category: 'tools'\n    }, {\n        module: 'taoQtiTest/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher',\n        bundle: 'taoQtiTest/loader/testPlugins.min',\n        category: 'tools'\n    }, {\n        module: 'taoQtiTestPreviewer/previewer/plugins/content/enhancedReadOnlyMode',\n        bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n        category: 'content'\n    }];\n\n    /**\n     * Wraps the legacy item previewer in order to be loaded by the taoItems previewer factory\n     */\n    return {\n        name: 'qtiItem',\n\n        /**\n         * Builds and shows the legacy item previewer\n         *\n         * @param {String} uri - The URI of the item to load\n         * @param {Object} state - The state of the item\n         * @param {Object} [config] - Some config entries\n         * @param {Object[]} [config.plugins] - Additional plugins to load\n         * @param {String} [config.fullPage] - Force the previewer to occupy the full window.\n         * @param {String} [config.readOnly] - Do not allow to modify the previewed item.\n         * @returns {Object}\n         */\n        init(uri, state, config = {}) {\n            config.itemUri = uri;\n            config.itemState = state;\n            config.plugins = Array.isArray(config.plugins) ? [...defaultPlugins, ...config.plugins] : defaultPlugins;\n            return qtiItemPreviewerFactory(window.document.body, config)\n                .on('error', function (err) {\n                    if (!_.isUndefined(err.message)) {\n                        feedback().error(err.message);\n                    } else {\n                        logger.error(err);\n                    }\n                });\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/component/topBlock/tpl/topBlock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"top-block-preview open\\\">\\n\t<div class=\\\"top-block-preview-main\\\">\\n\t\t<div class=\\\"top-block-preview-info\\\"></div>\\n\t\t<button class=\\\"btn-info small close\\\" type=\\\"button\\\">\\n\t\t\t\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close\", options) : helperMissing.call(depth0, \"__\", \"Close\", options)))\n    + \"\\n\t\t\t<span class=\\\"icon icon-close\\\"></span>\\n\t\t</button>\\n\t</div>\\n\t<div class=\\\"top-block-preview-collapser\\\"><span class=\\\"icon icon-up\\\"></span></div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/component/topBlock/tpl/topBlockData', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<p>\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" <b>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</b></p>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoQtiTestPreviewer/previewer/component/topBlock/css/topBlock',[],function(){});\n","define('taoQtiTestPreviewer/previewer/component/topBlock/topBlock',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'tpl!taoQtiTestPreviewer/previewer/component/topBlock/tpl/topBlock',\n    'tpl!taoQtiTestPreviewer/previewer/component/topBlock/tpl/topBlockData',\n    'css!taoQtiTestPreviewer/previewer/component/topBlock/css/topBlock',\n], function ($, _, __, componentFactory, topBlockTpl, topBlockDataTpl) {\n    'use strict';\n\n    /**\n     * Builds a topBlock component\n     *\n     * @param {JQuery} container\n     * @param {Object} config\n     * @param {String} config.title - the test title\n     * @param {Function} config.onClose - the callback function\n     * @returns {component}\n     * @fires ready - When the component is ready to work\n     */\n    function topBlockFactory(container, config) {\n        const topBlock = componentFactory()\n            .setTemplate(topBlockTpl)\n            .on('init', function(){\n                this.render(container);\n            })\n            .on('render', function () {\n                const $info = $(topBlockDataTpl({\n                    name: config.isTest ? __('Test Preview:') : __('Item Preview:'),\n                    title: config.title\n                }));\n                const $element = this.getElement();\n                $element.find('.top-block-preview-info').append($info);\n                $element.find('.close').on('click', config.onClose);\n                const $icon = $element.find('.top-block-preview-collapser .icon');\n                $element.find('.top-block-preview-collapser').on('click', () => {\n                    $icon.toggleClass('icon-up');\n                    $icon.toggleClass('icon-down');\n                    $element.toggleClass('open');\n                    $element.toggleClass('close');\n                });\n                /**\n                 * @event ready\n                 */\n                this.trigger('ready');\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(function() {\n            topBlock.init(config);\n        });\n\n        return topBlock;\n    }\n\n    return topBlockFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Config manager for the proxy of the QTI item previewer\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/config/item',[\n    'lodash',\n    'util/url',\n    'util/config'\n], function(_, urlUtil, configHelper) {\n    'use strict';\n\n    /**\n     * Some default config values\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        bootstrap : {\n            serviceController : 'Previewer',\n            serviceExtension : 'taoQtiTestPreviewer'\n        }\n    };\n\n    /**\n     * The list of handled config entries. Each required entry is set to true, while optional entries are set to false.\n     * @type {Object}\n     * @private\n     */\n    var _entries = {\n        serviceCallId : true,\n        bootstrap : false,\n        timeout : false\n    };\n\n    /**\n     * Creates a config object for the proxy implementation\n     * @param {Object} config - Some required and optional config\n     * @param {String} config.serviceCallId - An identifier for the service call\n     * @param {String} [config.bootstrap.serviceController] - The name of the service controller\n     * @param {String} [config.bootstrap.serviceExtension] - The name of the extension containing the service controller\n     * @returns {Object}\n     */\n    return function itemPreviewerConfigFactory(config) {\n        // protected storage\n        var storage = configHelper.from(config, _entries, _defaults);\n        var undef;\n\n        // convert some values from seconds to milliseconds\n        if (storage.timeout) {\n            storage.timeout *= 1000;\n        } else {\n            storage.timeout = undef;\n        }\n\n        // returns only a proxy storage object : no direct access to data is provided\n        return {\n            /**\n             * Gets the list of parameters\n             * @param {String|Object} [itemIdentifier]\n             * @returns {Object}\n             */\n            getParameters: function getParameters(itemIdentifier) {\n                var type = typeof itemIdentifier;\n                var parameters = {\n                    serviceCallId : this.getServiceCallId()\n                };\n\n                if (type === 'string') {\n                    // simple item identifier\n                    parameters.itemUri = itemIdentifier;\n                    // structured item identifier (a list of parameters)\n                } else if (type === 'object' && _.isPlainObject(itemIdentifier)) {\n                    _.merge(parameters, itemIdentifier);\n                } else if (type !== 'undefined') {\n                    throw new TypeError('Wrong parameter type provided for itemIdentifier: ' + type + '. Only string or plain object are allowed!');\n                }\n\n                return parameters;\n            },\n\n            /**\n             * Gets the URI of the service call\n             * @returns {String}\n             */\n            getServiceCallId : function getServiceCallId() {\n                return storage.serviceCallId;\n            },\n\n            /**\n             * Gets the name of the service controller\n             * @returns {String}\n             */\n            getServiceController : function getServiceController() {\n                return storage.bootstrap.serviceController || _defaults.bootstrap.serviceController;\n            },\n\n            /**\n             * Gets the name of the extension containing the service controller\n             * @returns {String}\n             */\n            getServiceExtension : function getServiceExtension() {\n                return storage.bootstrap.serviceExtension || _defaults.bootstrap.serviceExtension;\n            },\n\n            /**\n             * Gets an URL of a service action\n             * @param {String} action - the name of the action to request\n             * @returns {String} - Returns the URL\n             */\n            getTestActionUrl : function getTestActionUrl(action) {\n                return urlUtil.route(action, this.getServiceController(), this.getServiceExtension(), this.getParameters());\n            },\n\n            /**\n             * Gets an URL of a service action related to a particular item\n             * @param {String|Object} itemIdentifier - The URI of the item\n             * @param {String} action - the name of the action to request\n             * @returns {String} - Returns the URL\n             */\n            getItemActionUrl : function getItemActionUrl(itemIdentifier, action) {\n                return urlUtil.route(action, this.getServiceController(), this.getServiceExtension(), this.getParameters(itemIdentifier));\n            },\n\n            /**\n             * Gets the request timeout\n             * @returns {Number}\n             */\n            getTimeout : function getTimeout() {\n                return storage.timeout;\n            }\n        };\n    };\n});\n\n","\ndefine(\"json!taoQtiTestPreviewer/previewer/resources/devices.json\", function(){ return {\n    \"tablets\": {\n        \"193986c3715c81838870f908fa98d69a\": {\n            \"label\": \"Amazon Kindle Fire HDX 7\\u2033\",\n            \"width\": 960,\n            \"height\": 600\n        },\n        \"4e8eafab11aad1486992d7ee2c8c16ca\": {\n            \"label\": \"Apple iPad\",\n            \"width\": 1024,\n            \"height\": 768\n        },\n        \"5aac2932d9ad00d6d8a1604b8f9e4e8d\": {\n            \"label\": \"Google Nexus 10, Motorola Xoom, Xyboard\",\n            \"width\": 1280,\n            \"height\": 800\n        },\n        \"9805d9753ad08c7630a9ee5418aa6c6c\": {\n            \"label\": \"Google Nexus 7\",\n            \"width\": 966,\n            \"height\": 604\n        },\n        \"d4a431cedf4705d6bf2cba6d5788378b\": {\n            \"label\": \"Samsung Galaxy Tab 7.7, 8.9, 10.1\",\n            \"width\": 1280,\n            \"height\": 800\n        }\n    },\n    \"phones\": {\n        \"1b89338531ef0155c8d6abc2ac02c81a\": {\n            \"label\": \"Apple iPhone 3GS\",\n            \"width\": 320,\n            \"height\": 480,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 320,\n            \"dpHeight\": 480\n        },\n        \"3f89da99d84214cde7df87ebe0699a6f\": {\n            \"label\": \"Apple iPhone 4\",\n            \"width\": 640,\n            \"height\": 960,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1920\n        },\n        \"0d36971a5b98b367f54ced708c9af849\": {\n            \"label\": \"Apple iPhone 5\",\n            \"width\": 640,\n            \"height\": 1136,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 320,\n            \"dpHeight\": 2272\n        },\n        \"026beffcc051af995660ebdede986ace\": {\n            \"label\": \"BlackBerry Z10\",\n            \"width\": 768,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 384,\n            \"dpHeight\": 2560\n        },\n        \"fd2dd53e667d6d49e4fa73356fa941dd\": {\n            \"label\": \"BlackBerry Z30\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"707584c1ae17d9b5b2cbe8603c91c147\": {\n            \"label\": \"Google Nexus 4\",\n            \"width\": 768,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 384,\n            \"dpHeight\": 2560\n        },\n        \"91823264de952e7f2347e07db5c4058b\": {\n            \"label\": \"Google Nexus 5\",\n            \"width\": 1080,\n            \"height\": 1920,\n            \"scaleFactor\": 3,\n            \"dpWidth\": 360,\n            \"dpHeight\": 5760\n        },\n        \"cd69817a6e147e8a4677389e56fcf568\": {\n            \"label\": \"Google Nexus S\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"75994faa6a38e31e99b53fcd75534a33\": {\n            \"label\": \"HTC Evo, Touch HD, Desire HD, Desire\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"0cab4dfccdfc880687cb608cfe4159db\": {\n            \"label\": \"HTC One X, EVO LTE\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"c4ff41fcba24d74fc21dc3490ca1edc9\": {\n            \"label\": \"HTC Sensation, Evo 3D\",\n            \"width\": 540,\n            \"height\": 960,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 360,\n            \"dpHeight\": 1440\n        },\n        \"fa969a5e0dd2de53700eeee4ba4ba142\": {\n            \"label\": \"LG Optimus 2X, Optimus 3D, Optimus Black\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"33c4f9364e295ec03531f3a3425819cf\": {\n            \"label\": \"LG Optimus G\",\n            \"width\": 768,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 384,\n            \"dpHeight\": 2560\n        },\n        \"bc47f5275f0efd56fee52d43a8082981\": {\n            \"label\": \"LG Optimus LTE, Optimus 4X HD\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 1.7,\n            \"dpWidth\": 424,\n            \"dpHeight\": 2176\n        },\n        \"0732887e6e324fd10777b735520a34cf\": {\n            \"label\": \"LG Optimus One\",\n            \"width\": 320,\n            \"height\": 480,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 213,\n            \"dpHeight\": 720\n        },\n        \"2e38a78364f09d0da0e9e1a3a68e7fb0\": {\n            \"label\": \"Motorola Defy, Droid, Droid X, Milestone\",\n            \"width\": 480,\n            \"height\": 854,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1281\n        },\n        \"bd4b78dddc7c9625a4141a1b1ddabb87\": {\n            \"label\": \"Motorola Droid 3, Droid 4, Droid Razr, Atrix 4G, Atrix 2\",\n            \"width\": 540,\n            \"height\": 960,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 540,\n            \"dpHeight\": 960\n        },\n        \"3bf1edf21cfa81006183d2b02974c84e\": {\n            \"label\": \"Motorola Droid Razr HD\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 720,\n            \"dpHeight\": 1280\n        },\n        \"ab5a352e0e016b97dac986f06c394f55\": {\n            \"label\": \"Nokia C5, C6, C7, N97, N8, X7\",\n            \"width\": 360,\n            \"height\": 640,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 360,\n            \"dpHeight\": 640\n        },\n        \"4826fb7d7257aeaac992ce699df41b3c\": {\n            \"label\": \"Nokia Lumia 7X0, Lumia 8XX, Lumia 900, N800, N810, N900\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"0a691ab20add7c432200f8fa6527b488\": {\n            \"label\": \"Samsung Galaxy Note\",\n            \"width\": 800,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 400,\n            \"dpHeight\": 2560\n        },\n        \"9c23ee31be29960fbac9e9bbfc2fc7b0\": {\n            \"label\": \"Samsung Galaxy Note 3\",\n            \"width\": 1080,\n            \"height\": 1920,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 540,\n            \"dpHeight\": 3840\n        },\n        \"92177c0508c1d73905a58e2338f2a81f\": {\n            \"label\": \"Samsung Galaxy Note II\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"5222b8866dc4cc606725e16ffcc0a783\": {\n            \"label\": \"Samsung Galaxy S III, Galaxy Nexus\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"37c1541e2bd55cfd0f4073b0ccdf68b3\": {\n            \"label\": \"Samsung Galaxy S, S II, W\",\n            \"width\": 480,\n            \"height\": 800,\n            \"scaleFactor\": 1.5,\n            \"dpWidth\": 320,\n            \"dpHeight\": 1200\n        },\n        \"2f7f64b7dda0144907ff300e83eed465\": {\n            \"label\": \"Samsung Galaxy S4\",\n            \"width\": 1080,\n            \"height\": 1920,\n            \"scaleFactor\": 3,\n            \"dpWidth\": 360,\n            \"dpHeight\": 5760\n        },\n        \"9c24f9057744dad56043702a9703127f\": {\n            \"label\": \"Sony Xperia S, Ion\",\n            \"width\": 720,\n            \"height\": 1280,\n            \"scaleFactor\": 2,\n            \"dpWidth\": 360,\n            \"dpHeight\": 2560\n        },\n        \"0a8b2732a016a9395c3af5f12dd9c0da\": {\n            \"label\": \"Sony Xperia Sola, U\",\n            \"width\": 480,\n            \"height\": 854,\n            \"scaleFactor\": 1,\n            \"dpWidth\": 480,\n            \"dpHeight\": 854\n        },\n        \"5a153d7f53d82dcb0801f041574a6a43\": {\n            \"label\": \"Sony Xperia Z, Z1\",\n            \"width\": 1080,\n            \"height\": 1920,\n            \"scaleFactor\": 3,\n            \"dpWidth\": 360,\n            \"dpHeight\": 5760\n        }\n    },\n    \"screens\": {\n        \"9e523ae15b61dc766f5c818726881ecf\": {\n            \"label\": \"1920 \\u00d7 1080\",\n            \"width\": 1920,\n            \"height\": 1080,\n            \"dpWidth\": 1920,\n            \"dpHeight\": 1080,\n            \"scaleFactor\": 1\n        },\n        \"07769cd8d0a7d09818b2f0b018042fb7\": {\n            \"label\": \"1366 \\u00d7 768\",\n            \"width\": 1366,\n            \"height\": 768,\n            \"dpWidth\": 1366,\n            \"dpHeight\": 768,\n            \"scaleFactor\": 1\n        },\n        \"72d5478a24194f98b9378e8e0fd65737\": {\n            \"label\": \"1280 \\u00d7 1024\",\n            \"width\": 1280,\n            \"height\": 1024,\n            \"dpWidth\": 1280,\n            \"dpHeight\": 1024,\n            \"scaleFactor\": 1\n        },\n        \"b7a6dd5900cc72e61f0d3479c7e314ec\": {\n            \"label\": \"1280 \\u00d7 800\",\n            \"width\": 1280,\n            \"height\": 800,\n            \"dpWidth\": 1280,\n            \"dpHeight\": 800,\n            \"scaleFactor\": 1\n        },\n        \"43193b0ff671a37d8232ab664190a125\": {\n            \"label\": \"1024 \\u00d7 768\",\n            \"width\": 1024,\n            \"height\": 768,\n            \"dpWidth\": 1024,\n            \"dpHeight\": 768,\n            \"scaleFactor\": 1\n        },\n        \"c29e48814af5443ff5688d9e967ce917\": {\n            \"label\": \"800 \\u00d7 600\",\n            \"width\": 800,\n            \"height\": 600,\n            \"dpWidth\": 800,\n            \"dpHeight\": 600,\n            \"scaleFactor\": 1\n        }\n    }\n};});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA;\n */\n/**\n * Helper to work with screen values and mobile devices list\n * for \"select device\" select-box  on any test-item preview  page\n * for example using scale plugin app/taoQtiTestPreviewer/views/js/previewer/plugins/tools/scale/scale.js\n *\n * @author Dieter Raber <dieter@taotesting.com>\n * @author Pavel Hendelman <pavel@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/helpers/devices',[\n    'lodash',\n    'json!taoQtiTestPreviewer/previewer/resources/devices.json'\n], function (\n    _,\n    deviceList\n) {\n    'use strict';\n\n    /**\n     * @typedef {Object} deviceScreen\n     * @property {String} value - The selector's value to use\n     * @property {String} label - The label to display in the selector\n     * @property {Number} width - The width of the screen\n     * @property {Number} height - The height of the screen\n     */\n\n    /**\n     * Translation map to convert a device type to a collection's name in the provided list.\n     * @type {Object}\n     */\n    var deviceTypeMap = {\n        'mobile': 'tablets',\n        'desktop': 'screens'\n    };\n\n    /**\n     * Helpers to get the list of devices\n     */\n    var devicesHelper = {\n        /**\n         * Gets the list of devices to test item through. This list is meant to be used by a selector.\n         * @param {String} type - The type of device from the list ['mobile', 'desktop']\n         * @returns {deviceScreen[]} - The list of devices to test item through, filtered by the provided type\n         */\n        getDevicesByType : function getDevicesByType(type) {\n            /*\n             * @todo\n             * The device list is currently based on the devices found on the Chrome emulator.\n             * This is not ideal and should be changed in the future.\n             * I have http://en.wikipedia.org/wiki/List_of_displays_by_pixel_density in mind but we\n             * will need to figure what criteria to apply when generating the list.\n             */\n            var key = deviceTypeMap[type];\n\n            return _.map(deviceList[key] || [], function mapDeviceData(device, identifier) {\n                return {\n                    value: identifier,\n                    label: device.label,\n                    width: device.width,\n                    height: device.height\n                };\n            });\n        },\n\n        /**\n         * Gets the list of mobile devices\n         * @returns {deviceScreen[]} - The list of mobile devices to test item through\n         */\n        getMobileDevices: function getMobileDevices() {\n            return devicesHelper.getDevicesByType('mobile');\n        },\n\n        /**\n         * Gets the list of desktop devices\n         * @returns {deviceScreen[]} - The list of desktop devices to test item through\n         */\n        getDesktopDevices: function getDesktopDevices() {\n            return devicesHelper.getDevicesByType('desktop');\n        }\n    };\n\n    return devicesHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Content Plugin : cloneLogoInTestPreview\n *\n * This plugin can be used as a hook to clone logo from the header in the back office to the header in the test preview\n *\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/content/cloneLogoInTestPreview',['jquery', 'taoTests/runner/plugin'], function ($, pluginFactory) {\n    'use strict';\n\n    return pluginFactory({\n        name: 'cloneLogoInTestPreview',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            const testRunner = this.getTestRunner();\n\n            testRunner.after('ready', () => {\n                // clone logo to preview - because logo source + class + styles can be customized by client extension\n                $('#tao-main-logo').clone().appendTo('.previewer-test-component header');\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Content Plugin : EnhancedReadOnlyMode\n *\n * This plugin can be used as a hook to do modification in the item preview for read only mode\n *\n * @author Ansul Sharma <ansul@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/content/enhancedReadOnlyMode',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin'\n], function ($, _, __, pluginFactory) {\n    'use strict';\n\n    return pluginFactory({\n\n        name: 'EnhancedReadOnlyMode',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            const testRunner = this.getTestRunner();\n\n            /**\n             * Enables the plugin only in readOnly mode\n             * @returns {Boolean}\n             */\n            const isPluginAllowed = () => {\n                const config = testRunner.getConfig();\n                return config.options.readOnly;\n            };\n\n            testRunner\n                .after('renderitem', () => {\n                    if (isPluginAllowed()) {\n                        const $contentArea = testRunner.getAreaBroker().getContentArea();\n                        const $extendedTextinteractionTextAreas = $contentArea.find('.qti-extendedTextInteraction textarea.text-container');\n                        const $ckeEditorsContent = $contentArea.find('.qti-extendedTextInteraction div.cke_contents');\n\n                        /**\n                         * Updates the height of textarea element of all extended text interactions based on the height of the content\n                         */\n                        if($extendedTextinteractionTextAreas.length) {\n                            $extendedTextinteractionTextAreas.each(function() {\n                                this.style.height = `${this.scrollHeight + 20}px`;\n                            });\n                        }\n\n                        /**\n                         * Updates the height of all the ckeEditor container of wysiwyg extended text interaction based on the height of the iFrame\n                         */\n                        if($ckeEditorsContent.length) {\n                            $ckeEditorsContent.each(function() {\n                                const $ckeEditorContent = $(this);\n                                const $ckeEditorIFrame = $ckeEditorContent.find('iframe.cke_wysiwyg_frame');\n\n                                /**\n                                 * Only update the height when the iFrame has finished loading the styles because font-size may change the height\n                                 */\n                                $ckeEditorIFrame.on('load', () => {\n                                    setTimeout(() => {\n                                        const ckeEditorBody = $ckeEditorIFrame[0].contentWindow.document.querySelector('body');\n                                        $ckeEditorContent[0].style.height = `${ckeEditorBody.scrollHeight + 20}px`;\n                                    }, 0);\n                                });\n                            });\n                        }\n                    }\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Control Plugin : Close\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/controls/close',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, buttonTpl) {\n    'use strict';\n\n    return pluginFactory({\n\n        name: 'close',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            function isPluginAllowed() {\n                var config = testRunner.getConfig();\n                return !config.options.hideActionBars;\n            }\n\n            this.$element = $(buttonTpl({\n                control: 'close',\n                title: __('Close the previewer'),\n                icon: 'close',\n                text: __('Close'),\n                className: 'context-action'\n            }));\n\n            this.$element.on('click', function (e) {\n                e.preventDefault();\n                if (self.getState('enabled') !== false) {\n                    self.disable();\n                    testRunner.trigger('finish');\n                }\n            });\n\n            this.disable();\n\n            testRunner\n                .on('enablenav', function () {\n                  if (isPluginAllowed()) {\n                      self.enable();\n                  }\n                })\n                .on('disablenav', function () {\n                    self.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n\n            //attach the element to the navigation area\n            var $container = this.getAreaBroker().getArea('context');\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.$element.prop('disabled', false)\n                .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.$element.prop('disabled', true)\n                .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"preview-console hidden\\\">\\n    <ul class=\\\"preview-console-body\\\"></ul>\\n</div>\";\n  });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-line', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li><pre><span class=\\\"log-time\\\">\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span><span class=\\\"log-type\\\">\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span><span class=\\\"log-message\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span></pre></li>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-closer', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<span class=\\\"icon-close preview-console-closer hidden\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close console\", options) : helperMissing.call(depth0, \"__\", \"Close console\", options)))\n    + \"\\\"></span>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2021 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Navigation Plugin : Submit\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/navigation/submit/submit',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/hider',\n    'ui/autoscroll',\n    'util/strPad',\n    'taoTests/runner/plugin',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/runner/rendererStrategies',\n    'tpl!taoQtiTest/runner/plugins/templates/button',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-line',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/navigation/submit/preview-console-closer'\n], function (\n    $,\n    _,\n    __,\n    moment,\n    hider,\n    autoscroll,\n    strPad,\n    pluginFactory,\n    pciResponse,\n    rendererStrategies,\n    buttonTpl,\n    consoleTpl,\n    consoleLineTpl,\n    consoleCloserTpl\n) {\n    'use strict';\n\n    /**\n     * Some default config for the plugin\n     * @type {Object}\n     */\n    const defaults = {\n        submitTitle: __('Submit and show the result'),\n        submitText: __('Submit'),\n        submitIcon: 'forward'\n    };\n\n    return pluginFactory({\n\n        name: 'submit',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            const testRunner = this.getTestRunner();\n            const pluginConfig = _.defaults(this.getConfig(), defaults);\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            const isPluginAllowed = () => {\n                const config = testRunner.getConfig();\n                return !config.options.readOnly && rendererStrategies(config.options.view).getName() !== 'reviewRenderer';\n            };\n\n            // display the console and its related controls, then auto scrolls to the last element\n            const showConsole = () => {\n                hider.show(this.controls.$console);\n                hider.show(this.controls.$consoleBody);\n                hider.show(this.controls.$consoleCloser);\n                autoscroll(this.controls.$consoleBody.children().last(), this.controls.$consoleBody);\n            };\n\n            // hide the console and its related controls\n            const hideConsole = () => {\n                hider.hide(this.controls.$console);\n                hider.hide(this.controls.$consoleCloser);\n            };\n\n            // add a line to the console\n            const addConsoleLine = (type, message) => {\n                const data = {\n                    time: strPad(moment().format('HH:mm:ss'), 12, ' '),\n                    type: strPad(type || '', 18, ' '),\n                    message: strPad(message || '', 18, ' ')\n                };\n                this.controls.$consoleBody.append($(consoleLineTpl(data)));\n            };\n\n            // display responses in the console\n            const showResponses = (type, responses) => {\n                _.forEach(responses, (response, identifier) => {\n                    addConsoleLine(type, strPad(`${identifier}: `, 15, ' ') + _.escape(pciResponse.prettyPrint(response)));\n                });\n            };\n\n            this.controls = {\n                $button: $(buttonTpl({\n                    control: 'submit',\n                    title: pluginConfig.submitTitle,\n                    icon: pluginConfig.submitIcon,\n                    text: pluginConfig.submitText\n                })),\n                $console: $(consoleTpl()),\n                $consoleCloser: $(consoleCloserTpl())\n            };\n            this.controls.$consoleBody = this.controls.$console.find('.preview-console-body');\n\n            this.controls.$button.on('click', e => {\n                e.preventDefault();\n                if (this.getState('enabled') !== false) {\n                    this.disable();\n                    testRunner.trigger('submititem');\n                }\n            });\n\n            this.controls.$consoleCloser.on('click', e => {\n                e.preventDefault();\n                hideConsole();\n            });\n\n            if (!isPluginAllowed()) {\n                this.hide();\n            }\n\n            this.disable();\n\n            testRunner\n                .on('render', () => {\n                    if (isPluginAllowed()) {\n                        this.show();\n                    } else {\n                        this.hide();\n                    }\n                })\n                .on('submitresponse', responses => {\n                    showResponses(__('Submitted data'), responses);\n                    showConsole();\n                })\n                .on('scoreitem', responses => {\n                    if (responses.itemSession) {\n                        showResponses(__('Output data'), responses.itemSession);\n                        showConsole();\n                    }\n                })\n                .on('enablenav', () => {\n                    this.enable();\n                })\n                .on('disablenav', () => {\n                    this.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render() {\n            //attach the element to the navigation area\n            const $container = this.getAreaBroker().getContainer();\n            const $navigation = this.getAreaBroker().getNavigationArea();\n            $navigation.append(this.controls.$button);\n            $navigation.append(this.controls.$consoleCloser);\n            $container.append(this.controls.$console);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy() {\n            _.forEach(this.controls, $el => $el.remove());\n            this.controls = null;\n        },\n\n        /**\n         * Enable the button\n         */\n        enable() {\n            this.controls.$button\n                .prop('disabled', false)\n                .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable() {\n            this.controls.$button\n                .prop('disabled', true)\n                .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show() {\n            hider.show(this.controls.$button);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide() {\n            _.forEach(this.controls, hider.hide);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-previewer', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"devices-previewer\\\" data-type=\\\"\";\n  if (helper = helpers.deviceType) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.deviceType); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-orientation=\\\"\";\n  if (helper = helpers.deviceOrientation) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.deviceOrientation); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <div class=\\\"preview-container\\\">\\n        <div class=\\\"preview-frame\\\">\\n            <div class=\\\"preview-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesPreviewer',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/tools/scale/component/devicesPreviewer',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/transformer',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-previewer',\n    'css!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesPreviewer.css'\n], function ($, _, __, componentFactory, transformer, devicesPreviewerTpl) {\n    'use strict';\n\n    /**\n     * @typedef {Object} size\n     * @property {Number} width\n     * @property {Number} height\n     */\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    var defaults = {\n        deviceType: 'standard',\n        deviceWith: 0,\n        deviceHeight: 0,\n        deviceOrientation: null\n    };\n\n    /**\n     * Builds a devices previewer component. It will works in two modes:\n     * - the standard mode will do nothing special, this is simply a sleeping mode\n     * - the device mode will redesign the view to show a content using a device's layout and aspect ratio\n     *\n     * @example\n     *  var devicesPreviewer = devicesPreviewerFactory('.previewer .previewer-content);\n     *  ...\n     *  // react to changes\n     *  devicesPreviewer\n     *      .on('devicewidthchange', function(width) {\n     *          // the width has changed\n     *      })\n     *      .on('deviceheightchange', function(height) {\n     *          // the height has changed\n     *      })\n     *      .on('deviceorientationchange', function(orientation) {\n     *          // the orientation has changed\n     *      })\n     *      .on('devicetypechange', function(type) {\n     *          // the type has changed\n     *      })\n     *      .on('devicepreview', function() {\n     *          // the device preview mode has been applied\n     *      });\n     *  ...\n     *  // apply changes\n     *  devicesPreviewer\n     *      .setDeviceType(type)\n     *      .setDeviceOrientation(orientation)\n     *      .setDeviceWidth(width)\n     *      .setDeviceHeight(height)\n     *      .previewDevice();\n     * ...\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @param {String} [config.deviceType='standard'] - The preview mode to apply\n     * @param {Number} [config.deviceWidth=null] - The width of the device to preview\n     * @param {Number} [config.deviceHeight=null] - The height of the device to preview\n     * @param {String} [config.deviceOrientation='landscape'] - The device orientation\n     * @returns {devicesPreviewer}\n     * @fires ready - When the component is ready to work\n     */\n    function devicesPreviewerFactory(container, config) {\n        var controls = null;\n\n        /**\n         * Remove the applied scale\n         */\n        var resetScale = function resetScale() {\n            if (controls) {\n                controls.$previewContent.removeAttr('style');\n                controls.$previewContainer.removeAttr('style');\n            }\n        };\n\n        // component specific API\n        var api = {\n            /**\n             * Gets the device width.\n             * @returns {Number}\n             */\n            getDeviceWidth: function getDeviceWidth() {\n                return this.getConfig().deviceWidth;\n            },\n\n            /**\n             * Sets the device width.\n             * @param {String|Number} width\n             * @returns {devicesPreviewer}\n             * @fires devicewidthchange\n             */\n            setDeviceWidth: function setDeviceWidth(width) {\n                var componentConfig = this.getConfig();\n                componentConfig.deviceWidth = parseInt(width, 10) || 0;\n\n                /**\n                 * @event devicewidthchange\n                 * @param {Number} deviceWidth\n                 */\n                this.trigger('devicewidthchange', componentConfig.deviceWidth);\n\n                return this;\n            },\n\n            /**\n             * Gets the device height.\n             * @returns {Number}\n             */\n            getDeviceHeight: function getDeviceHeight() {\n                return this.getConfig().deviceHeight;\n            },\n\n            /**\n             * Sets the device height.\n             * @param {String|Number} height\n             * @returns {devicesPreviewer}\n             * @fires deviceheightchange\n             */\n            setDeviceHeight: function setDeviceHeight(height) {\n                var componentConfig = this.getConfig();\n                componentConfig.deviceHeight = parseInt(height, 10) || 0;\n\n                /**\n                 * @event deviceheightchange\n                 * @param {Number} deviceHeight\n                 */\n                this.trigger('deviceheightchange', componentConfig.deviceHeight);\n\n                return this;\n            },\n\n            /**\n             * Gets the device orientation.\n             * @returns {String}\n             */\n            getDeviceOrientation: function getDeviceOrientation() {\n                return this.getConfig().deviceOrientation;\n            },\n\n            /**\n             * Sets the device orientation.\n             * @param {String} orientation\n             * @returns {devicesPreviewer}\n             * @fires deviceorientationchange\n             */\n            setDeviceOrientation: function setDeviceOrientation(orientation) {\n                var componentConfig = this.getConfig();\n                componentConfig.deviceOrientation = orientation;\n\n                if (this.is('rendered')) {\n                    // use .attr() instead of .data() to ensure the DOM will be properly updated\n                    // this is required as CSS must take the relay to control the display\n                    this.getElement().attr('data-orientation', componentConfig.deviceOrientation);\n                }\n\n                /**\n                 * @event deviceorientationchange\n                 * @param {String} deviceOrientation\n                 */\n                this.trigger('deviceorientationchange', componentConfig.deviceOrientation);\n\n                return this;\n            },\n\n            /**\n             * Tells if the previewer has entered in a device mode or in the standard mode.\n             * Standard mode means 'actual size'.\n             * @returns {Boolean}\n             */\n            isDeviceMode: function isDeviceMode() {\n                return this.getDeviceType() !== 'standard';\n            },\n\n            /**\n             * Gets the device type.\n             * @returns {String}\n             */\n            getDeviceType: function getDeviceType() {\n                return this.getConfig().deviceType;\n            },\n\n            /**\n             * Sets the type of device\n             * @param {String} type\n             * @returns {devicesPreviewer}\n             * @fires devicetypechange\n             */\n            setDeviceType: function setDeviceType(type) {\n                var componentConfig = this.getConfig();\n                componentConfig.deviceType = type;\n\n                if (this.is('rendered')) {\n                    // use .attr() instead of .data() to ensure the DOM will be properly updated\n                    // this is required as CSS must take the relay to control the display\n                    this.getElement().attr('data-type', componentConfig.deviceType);\n                }\n\n                /**\n                 * @event devicetypechange\n                 * @param {String} deviceType\n                 */\n                this.trigger('devicetypechange', componentConfig.deviceType);\n\n                return this;\n            },\n\n            /**\n             * Previews the content using the current device settings\n             * @returns {devicesPreviewer}\n             * @fires devicepreview after the device has been set on preview\n             */\n            previewDevice: function previewDevice() {\n                var width, height;\n\n                if (this.is('rendered')) {\n                    if (this.is('disabled') || this.getDeviceType() === 'standard') {\n                        // standard mode and disabled state both should be reflected by a \"no scale\" view\n                        this.clearScale();\n                    } else {\n                        // in device preview mode, we need to apply the device's size with respect to the orientation\n                        if (this.getDeviceOrientation() === 'portrait') {\n                            width = this.getDeviceHeight();\n                            height = this.getDeviceWidth();\n                        } else {\n                            width = this.getDeviceWidth();\n                            height = this.getDeviceHeight();\n                        }\n                        this.applyScale(width, height);\n                    }\n\n                    /**\n                     * @event devicepreview\n                     */\n                    this.trigger('devicepreview');\n                }\n\n                return this;\n            },\n\n            /**\n             * Removes the scale settings applied on the devices previewer\n             * @returns {devicesPreviewer}\n             * @fires scaleclear after the scale settings have been cleared\n             */\n            clearScale: function clearScale() {\n                if (this.is('rendered')) {\n                    resetScale();\n\n                    /**\n                     * @event scaleclear\n                     */\n                    this.trigger('scaleclear');\n                }\n\n                return this;\n            },\n\n            /**\n             * Computes and applies the scale settings on the devices previewer\n             * @param {Number} width\n             * @param {Number} height\n             * @returns {devicesPreviewer}\n             * * @fires scalechange after the scale settings have been applied\n             */\n            applyScale: function applyScale(width, height) {\n                var frameSize, frameMargins, scaleFactor;\n\n                if (this.is('rendered')) {\n                    resetScale();\n\n                    frameSize = this.getFrameSize();\n                    frameMargins = this.getFrameMargins();\n                    scaleFactor = this.getScaleFactor(width, height);\n\n                    controls.$previewContent\n                        .width(width)\n                        .height(height);\n\n                    controls.$previewContainer\n                        .css('left', (frameSize.width - (width + frameMargins.width) * scaleFactor) / 2)\n                        .width(width + frameMargins.width)\n                        .height(height + frameMargins.height);\n\n                    transformer.setTransformOrigin(controls.$previewContainer, 0, 0);\n                    transformer.scale(controls.$previewContainer, scaleFactor);\n\n                    /**\n                     * @event scalechange\n                     */\n                    this.trigger('scalechange');\n                }\n\n                return this;\n            },\n\n            /**\n             * Computes and gets the margins of the previewer frame\n             * @returns {size}\n             */\n            getFrameMargins: function getFrameMargins() {\n                var margins = {\n                    width: 0,\n                    height: 0\n                };\n                if (this.is('rendered')) {\n                    margins.width = controls.$previewContainer.outerWidth() - controls.$previewContent.width();\n                    margins.height = controls.$previewContainer.outerHeight() - controls.$previewContent.height();\n                }\n                return margins;\n            },\n\n            /**\n             * Computes and gets the available size in the previewer frame\n             * @returns {size}\n             */\n            getFrameSize: function getFrameSize() {\n                var size = {\n                    width: 0,\n                    height: 0\n                };\n                if (this.is('rendered')) {\n                    size.width = this.getContainer().innerWidth();\n                    size.height = this.getContainer().innerHeight();\n                }\n                return size;\n            },\n\n            /**\n             * Computes and gets the scale factor of the previewer frame\n             * @param {Number} width\n             * @param {Number} height\n             * @returns {Number}\n             */\n            getScaleFactor: function getScaleFactor(width, height) {\n                var margins, frameSize;\n                var scaleFactor = {\n                    x: 1,\n                    y: 1\n                };\n                if (this.is('rendered') && this.isDeviceMode()) {\n                    frameSize = this.getFrameSize();\n                    margins = this.getFrameMargins();\n                    width += margins.width;\n                    height += margins.height;\n\n                    if (width > frameSize.width) {\n                        scaleFactor.x = frameSize.width / width;\n                    }\n\n                    if (height > frameSize.height) {\n                        scaleFactor.y = frameSize.height / height;\n                    }\n                }\n                return Math.min(scaleFactor.x, scaleFactor.y);\n            },\n\n            /**\n             * Wraps the previewed content into the previewer frame\n             * @param {HTMLElement|jQuery} element\n             * @returns {devicesPreviewer}\n             * @fires wrap after the element has been wrapped\n             */\n            wrap: function wrap(element) {\n                if (this.is('rendered')) {\n                    // restore current wrapped element to its previous place\n                    this.unwrap();\n\n                    // move the element to wrap in the preview container\n                    controls.$wrappedElement = $(element);\n                    controls.$wrappedElementContainer = controls.$wrappedElement.parent();\n                    controls.$previewContent.append(controls.$wrappedElement);\n\n                    /**\n                     * @event wrap\n                     * @param {jQuery} $wrappedElement - The element that has been wrapped\n                     */\n                    this.trigger('wrap', controls.$wrappedElement);\n                }\n\n                return this;\n            },\n\n            /**\n             * Unwraps the previewed content from the previewer frame\n             * @returns {devicesPreviewer}\n             * @fires unwrap after the element has been unwrapped\n             */\n            unwrap: function unwrap() {\n                var $wasWrappedElement;\n                if (this.is('rendered') && controls.$wrappedElement) {\n                    $wasWrappedElement = controls.$wrappedElement;\n\n                    // restore current wrapped element to its previous place\n                    controls.$wrappedElementContainer.append(controls.$wrappedElement);\n                    controls.$wrappedElement = null;\n                    controls.$wrappedElementContainer = null;\n\n                    /**\n                     * @event unwrap\n                     * @param {jQuery} $wrappedElement - The element that was wrapped\n                     */\n                    this.trigger('unwrap', $wasWrappedElement);\n                }\n\n                return this;\n            }\n        };\n\n        // build and setup the component\n        var devicesPreviewer = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(devicesPreviewerTpl)\n\n            // auto render on init\n            .on('init', function () {\n                var componentConfig = this.getConfig();\n\n                // init the internal state\n                this.setDeviceType(componentConfig.deviceType);\n                this.setDeviceWidth(componentConfig.deviceWidth);\n                this.setDeviceHeight(componentConfig.deviceHeight);\n                this.setDeviceOrientation(componentConfig.deviceOrientation);\n\n                // auto render on init\n                _.defer(function () {\n                    devicesPreviewer.render(container);\n                });\n            })\n\n            // renders the component\n            .on('render', function () {\n                var $element = this.getElement();\n                controls = {\n                    // internal elements\n                    $previewContainer: $element.find('.preview-container'),\n                    $previewFrame: $element.find('.preview-frame'),\n                    $previewContent: $element.find('.preview-content'),\n\n                    // placeholder for the wrapped element\n                    $wrappedElement: null,\n                    $wrappedElementContainer: null\n                };\n\n                /**\n                 * @event ready\n                 */\n                this.trigger('ready');\n            })\n\n            // take care of the disable state\n            .on('disable enable', function () {\n                var self = this;\n                if (this.is('rendered')) {\n                    // need to defer the call as the enable/disable events are emitted before the state is updated\n                    _.defer(function () {\n                        self.previewDevice();\n                    });\n                }\n            })\n\n            // cleanup the place\n            .on('destroy', function () {\n                this.unwrap();\n                controls = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(function () {\n            devicesPreviewer.init(config);\n        });\n\n        return devicesPreviewer;\n    }\n\n    return devicesPreviewerFactory;\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-selector', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"devices-selector\\\" data-type=\\\"standard\\\">\\n    <div class=\\\"selector type-selector\\\"></div>\\n    <div class=\\\"selector desktop-selector\\\"></div>\\n    <div class=\\\"selector mobile-selector\\\"></div>\\n    <div class=\\\"selector orientation-selector\\\"></div>\\n</div>\";\n  });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/selector', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <option value=\\\"\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"selected=\\\"selected\\\"\";\n  }\n\n  buffer += \"<select class=\\\"select2\\\" name=\\\"\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-category=\\\"\";\n  if (helper = helpers.category) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.category); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-has-search=\\\"false\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</select>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesSelector',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/tools/scale/component/devicesSelector',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/selecter',\n    'taoQtiTestPreviewer/previewer/helpers/devices',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/devices-selector',\n    'tpl!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/tpl/selector',\n    'css!taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesSelector.css'\n], function ($, _, __, componentFactory, lookupSelecter, devicesHelper, devicesSelectorTpl, selectorTpl) {\n    'use strict';\n\n    /**\n     * @typedef {Object} selectorEntry\n     * @property {String} value - The value that identifies the entry\n     * @property {String} label - The text displayed to describe the entry\n     */\n\n    /**\n     * @typedef {selectorEntry} mainSelectorEntry\n     * @property {Boolean} devicesList - tells if a list of devices is expected\n     * @property {Boolean} orientation - tells if a list of orientations is expected\n     */\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    var defaults = {\n        type: 'standard',\n        device: null,\n        orientation: 'landscape'\n    };\n\n    /**\n     * List of available types of devices\n     * @type {mainSelectorEntry[]}\n     */\n    var deviceTypesList = [{\n        value: 'standard',\n        label: __('Actual size'),\n        devicesList: false,\n        orientation: false\n    }, {\n        value: 'desktop',\n        label: __('Desktop preview'),\n        devicesList: true,\n        orientation: false\n    }, {\n        value: 'mobile',\n        label: __('Mobile preview'),\n        devicesList: true,\n        orientation: true\n    }];\n\n    /**\n     * List of available orientations\n     * @type {selectorEntry[]}\n     */\n    var deviceOrientationsList = [{\n        value: 'landscape',\n        label: __('Landscape')\n    }, {\n        value: 'portrait',\n        label: __('Portrait')\n    }];\n\n    /**\n     * Map selector's names to setter callbacks.\n     * This will be used to call the expected setter when selecting a value.\n     * @see devicesSelector.select()\n     * @type {Object}\n     */\n    var callbackMap = {\n        type: 'setType',\n        device: 'setDevice',\n        mobile: 'setDevice',\n        desktop: 'setDevice',\n        orientation: 'setOrientation'\n    };\n\n    /**\n     * Gets the data for a selected entry\n     * @param {String} selected\n     * @param {selectorEntry[]|deviceScreen[]} list\n     * @returns {selectorEntry|deviceScreen|null}\n     */\n    function getSelectorData(selected, list) {\n        if (selected && _.size(list)) {\n            return _.find(list, {value: selected}) || null;\n        }\n        return null;\n    }\n\n    /**\n     * Ensures an identifier is valid with respect to the provided list, or defaulted to null.\n     * @param {String} identifier\n     * @param {selectorEntry[]} list\n     * @returns {String|null}\n     */\n    function getValidIdentifier(identifier, list) {\n        if (list && list.length) {\n            if (_.find(list, {value: identifier})) {\n                return identifier;\n            } else {\n                return _.first(list).value;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Update a Select2 control\n     * @param {jQuery} $selector\n     * @param {String} value\n     * @returns {jQuery}\n     */\n    function updateSelect2($selector, value) {\n        var current = $selector.val();\n        // avoid to stress the setters if the value is already set\n        if (current !== value) {\n            $selector.val(value);\n            $selector.trigger('change');\n        }\n        return $selector;\n    }\n\n    /**\n     * Uninstalls a Select2 control\n     * @param {jQuery} $selector\n     * @returns {jQuery}\n     */\n    function removeSelect2($selector) {\n        if ($selector.hasClass(\"select2-offscreen\")) {\n            $selector.select2('destroy');\n        }\n        return $selector;\n    }\n\n    /**\n     * Builds a devices selector component. It will provides 3 selectors in cascade:\n     * - the first allows to select the type of device\n     * - the second allows to select the device itself, the list being filtered by the value of the first selector\n     * - the third allows to select the display orientation, if applicable\n     *\n     * @example\n     *  var devicesSelector = devicesSelectorFactory('.previewer .previewer-top-bar);\n     *  ...\n     *  // react to type change\n     *  devicesSelector.on('typechange', function(type) {\n     *      if (!this.isDeviceMode()) {\n     *          // reset the type to standard, we can re-apply the default size\n     *      }\n     *  });\n     *\n     *  // react to device change\n     *  devicesSelector.on('devicechange', function(device, data) {\n     *      // apply the size provided in data\n     *  });\n     *\n     *  // react to orientation change\n     *  devicesSelector.on('orientationchange', function(orientation) {\n     *      // apply the orientation\n     *  });\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @param {String} [config.type='standard'] - The default selected device type\n     * @param {String} [config.device=null] - The default selected device\n     * @param {String} [config.orientation='landscape'] - The default selected orientation\n     * @returns {devicesSelector}\n     * @fires ready - When the component is ready to work\n     */\n    function devicesSelectorFactory(container, config) {\n        // internal state\n        var selected = {\n            type: null,\n            device: null,\n            orientation: null,\n            desktop: null,\n            mobile: null\n        };\n        var devicesList = [];\n        var typeData = null;\n        var controls = null;\n\n        /**\n         * Changes a DOM property on each selector\n         * @param {String} property\n         * @param {String|Boolean|Number} value\n         */\n        var setControlsProp = function setControlsProp(property, value) {\n            _.forEach(controls, function($selector) {\n                $selector.prop(property, value);\n            });\n        };\n\n        // component specific API\n        var api = {\n            /**\n             * Tells if the selector has entered in a device mode or in the standard mode.\n             * Standard mode means 'actual size'.\n             * @returns {Boolean}\n             */\n            isDeviceMode: function isDeviceMode() {\n                return selected.type !== 'standard';\n            },\n\n            /**\n             * Reflects the mode to the DOM\n             * @returns {devicesSelector}\n             */\n            updateMode: function updateMode() {\n                // use .attr() instead of .data() to ensure the DOM will be properly updated\n                // this is required as CSS must take the relay to control the display\n                if (this.is('rendered')) {\n                    this.getElement().attr('data-type', selected.type);\n                }\n                return this;\n            },\n\n            /**\n             * Gets the selected device type.\n             * @returns {String} The type of device, from the list `['standard', 'mobile', 'desktop']`\n             */\n            getType: function getType() {\n                return selected.type;\n            },\n\n            /**\n             * Gets the selected device orientation.\n             * If the current mode is not a device mode (i.e. actual size), null is returned.\n             * @returns {String}\n             */\n            getOrientation: function getOrientation() {\n                if (typeData && typeData.orientation) {\n                    return selected.orientation;\n                }\n                return null;\n            },\n\n            /**\n             * Gets the identifier of the selected device.\n             * If the current mode is not a device mode (i.e. actual size), null is returned.\n             * @returns {String|null}\n             */\n            getDevice: function getDevice() {\n                if (typeData && typeData.devicesList) {\n                    return selected.device;\n                }\n                return null;\n            },\n\n            /**\n             * Gets the data for the selected device.\n             * If the current mode is not a device mode (i.e. actual size), null is returned.\n             * @returns {deviceScreen|null}\n             */\n            getDeviceData: function getDeviceData() {\n                return getSelectorData(this.getDevice(), devicesList);\n            },\n\n            /**\n             * Selects a type of device\n             * @param {String} identifier\n             * @returns {devicesSelector}\n             * @fires typechange event after the type has been changed\n             * @fires devicechange event after the device has been updated if a list of devices is expected\n             */\n            setType: function setType(identifier) {\n                // validate the identifier before applying the change\n                identifier = getValidIdentifier(identifier, deviceTypesList);\n                if (identifier !== selected.type) {\n                    selected.type = identifier;\n                    selected.device = null;\n\n                    // when the type changes, the list of devices must be updated\n                    devicesList = devicesHelper.getDevicesByType(selected.type);\n                    typeData = getSelectorData(selected.type, deviceTypesList);\n\n                    // update the rendered content\n                    if (this.is('rendered')) {\n                        updateSelect2(controls.$typeSelector, selected.type);\n                        this.updateMode();\n                    }\n\n                    /**\n                     * @event typechange\n                     * @param {String} selectedType\n                     */\n                    this.trigger('typechange', selected.type);\n\n                    // the current device must be adapted if a list of devices is expected\n                    if (typeData.devicesList) {\n                        this.setDevice(selected[selected.type]);\n                    }\n                }\n                return this;\n            },\n\n            /**\n             * Sets the selected device orientation\n             * @param {String} identifier\n             * @returns {devicesSelector}\n             * @fires orientationchange event after the type has been changed\n             */\n            setOrientation: function setOrientation(identifier) {\n                // validate the identifier before applying the change\n                identifier = getValidIdentifier(identifier, deviceOrientationsList);\n                if (identifier !== selected.orientation) {\n                    selected.orientation = identifier;\n\n                    // update the rendered content\n                    if (this.is('rendered')) {\n                        updateSelect2(controls.$orientationSelector, selected.orientation);\n                    }\n\n                    /**\n                     * @event orientationchange\n                     * @param {String} selectedOrientation\n                     */\n                    this.trigger('orientationchange', selected.orientation);\n                }\n                return this;\n            },\n\n            /**\n             * Selects a device\n             * @param {String} identifier\n             * @returns {devicesSelector}\n             * @fires devicechange event after the device has been changed\n             */\n            setDevice: function setDevice(identifier) {\n                var $selector;\n\n                // validate the identifier before applying the change\n                identifier = getValidIdentifier(identifier, devicesList);\n                if (identifier !== selected.device) {\n                    selected.device = identifier;\n                    selected[selected.type] = identifier;\n\n                    // update the rendered content, depending on the device's category\n                    if (this.is('rendered') && this.isDeviceMode()) {\n                        $selector = controls['$' + selected.type + 'Selector'];\n                        if ($selector) {\n                            updateSelect2($selector, selected.device);\n                        }\n                    }\n\n                    /**\n                     * @event devicechange\n                     * @param {String} selectedDevice\n                     * @param {deviceScreen} deviceData\n                     */\n                    this.trigger('devicechange', selected.device, this.getDeviceData());\n                }\n                return this;\n            },\n\n            /**\n             * Selects a value in the proper selector\n             * @param {String} name - The name of the selector\n             * @param {String} value - The value to select\n             * @returns {devicesSelector}\n             */\n            select: function select(name, value) {\n                var setterName = callbackMap[name];\n                if (setterName && _.isFunction(this[setterName])) {\n                    this[setterName](value);\n                }\n                return this;\n            },\n\n            /**\n             * Reset to default values, from the config.\n             * @returns {devicesSelector}\n             */\n            reset: function reset() {\n                var componentConfig = this.getConfig();\n                this.setType(componentConfig.type);\n                this.setDevice(componentConfig.device);\n                this.setOrientation(componentConfig.orientation);\n                return this;\n            }\n        };\n\n        // build and setup the component\n        var devicesSelector = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(devicesSelectorTpl)\n\n            // auto render on init\n            .on('init', function () {\n                // ensure the initial state is aligned with the config\n                this.reset();\n\n                // auto render on init\n                _.defer(function () {\n                    devicesSelector.render(container);\n                });\n            })\n\n            // renders the component\n            .on('render', function () {\n                var self = this;\n\n                /**\n                 * Renders a selector from a list of entries. Takes care of the currently selected value.\n                 * @param {String} name - The name of the selector\n                 * @param {selectorEntry[]} list - The list of entries\n                 * @param {String} selectedValue - The currently selected value\n                 * @param {String} [category=name] - The category of the selector (type, device, orientation).\n                 *                                   Defaulted to the name if not provided.\n                 * @returns {jQuery}\n                 */\n                function renderSelector(name, list, selectedValue, category) {\n                    var $selector = $(selectorTpl({\n                        name: name,\n                        category: category || name,\n                        items: _.map(list, function(item) {\n                            return {\n                                value: item.value,\n                                label: item.label,\n                                selected: selectedValue === item.value\n                            };\n                        })\n                    }));\n                    self.getElement().find('.' + name + '-selector').html($selector);\n                    return $selector;\n                }\n\n                // create each selector, and keep access to them\n                controls = {\n                    $typeSelector: renderSelector('type', deviceTypesList, selected.type),\n                    $desktopSelector: renderSelector('desktop', devicesHelper.getDesktopDevices(), selected.device, 'device'),\n                    $mobileSelector: renderSelector('mobile', devicesHelper.getMobileDevices(), selected.device, 'device'),\n                    $orientationSelector: renderSelector('orientation', deviceOrientationsList, selected.orientation)\n                };\n                lookupSelecter(this.getElement());\n\n                // react to any change in selectors and then forward the event to the related entry\n                this.getElement().on('change', '.selector', function onSelectorChange(e) {\n                    var $selector = $(e.target).closest('select');\n                    self.select($selector.attr('name'), $selector.val());\n                });\n\n                // initialize the display mode\n                this.updateMode();\n\n                /**\n                 * @event ready\n                 */\n                this.trigger('ready');\n            })\n\n            // take care of the disable state\n            .on('disable', function () {\n                if (this.is('rendered')) {\n                    setControlsProp(\"disabled\", true);\n                }\n            })\n            .on('enable', function () {\n                if (this.is('rendered')) {\n                    setControlsProp(\"disabled\", false);\n                }\n            })\n\n            // cleanup the place\n            .on('destroy', function () {\n                _.forEach(controls, removeSelect2);\n                controls = null;\n                selected = null;\n                typeData = null;\n                devicesList = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(function () {\n            devicesSelector.init(config);\n        });\n\n        return devicesSelector;\n    }\n\n    return devicesSelectorFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Previewer Responsive Scale plugin : Scale\n */\ndefine('taoQtiTestPreviewer/previewer/plugins/tools/scale/scale',[\n    'jquery',\n    'lodash',\n    'lib/uuid',\n    'util/namespace',\n    'taoTests/runner/plugin',\n    'taoQtiTestPreviewer/previewer/plugins/tools/scale/component/devicesPreviewer',\n    'taoQtiTestPreviewer/previewer/plugins/tools/scale/component/devicesSelector'\n], function (\n    $,\n    _,\n    uuid,\n    namespaceHelper,\n    pluginFactory,\n    devicesPreviewerFactory,\n    devicesSelectorFactory\n) {\n    'use strict';\n\n    return pluginFactory({\n\n        name: 'scale',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            function isPluginAllowed() {\n                var config = testRunner.getConfig();\n                return !config.options.readOnly;\n            }\n\n            // generate unique id for global events\n            this.nsId = this.getName() + uuid(6);\n\n            if (!isPluginAllowed()) {\n                this.hide();\n            }\n\n            this.disable();\n\n            testRunner\n                .on('render', function () {\n                    if (isPluginAllowed()) {\n                        self.show();\n                    } else {\n                        self.hide();\n                    }\n                })\n                .on('resizeitem', function (size, orientation, type) {\n                    if (self.devicesPreviewer) {\n                        self.devicesPreviewer\n                            .setDeviceType(type)\n                            .setDeviceOrientation(orientation)\n                            .setDeviceWidth(size && size.width)\n                            .setDeviceHeight(size && size.height)\n                            .previewDevice();\n                    }\n                })\n                .on('enablenav', function () {\n                    self.enable();\n                })\n                .on('disablenav', function () {\n                    self.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         * Renders plugins controls on proper place\n         */\n        render: function render() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var areaBroker = this.getAreaBroker();\n\n            /**\n             * Triggers an item resize based on the current selected device\n             */\n            function resizeItem() {\n                if (self.devicesSelector && self.getState('enabled')) {\n                    /**\n                     * @event resizeitem\n                     * @param {deviceScreen} deviceData - The device data, containing width and height\n                     * @param {String} orientation - The device orientation\n                     * @param {String} type - The type of device\n                     */\n                    testRunner.trigger(\n                        'resizeitem',\n                        self.devicesSelector.getDeviceData(),\n                        self.devicesSelector.getOrientation(),\n                        self.devicesSelector.getType()\n                    );\n                }\n            }\n\n            /**\n             * adjust device frame position and size when browser size change\n             */\n            $(window).on(namespaceHelper.namespaceAll('resize orientationchange', this.nsId), _.throttle(function () {\n                if (self.devicesSelector && self.devicesSelector.isDeviceMode()) {\n                    resizeItem();\n                }\n            }, 50));\n\n            return Promise.all([\n                new Promise(function (resolve) {\n                    self.devicesSelector = devicesSelectorFactory(areaBroker.getHeaderArea())\n                        .on('ready', function () {\n                            if (!self.getState('enabled')) {\n                                this.disable();\n                            }\n\n                            this.on('typechange', function () {\n                                if (!this.isDeviceMode()) {\n                                    resizeItem();\n                                }\n                            });\n\n                            this.on('devicechange orientationchange', function () {\n                                resizeItem();\n                            });\n\n                            resolve();\n                        });\n                }),\n                new Promise(function (resolve) {\n                    self.devicesPreviewer = devicesPreviewerFactory(areaBroker.getArea('contentWrapper'))\n                        .on('ready', function () {\n                            this.wrap(areaBroker.getContentArea());\n                            resolve();\n                        });\n                })\n            ]);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         * clears all controls tied to applications DOM\n         * detaches the global events\n         */\n        destroy: function destroy() {\n            if (this.nsId) {\n                $(window).off('.' + this.nsId);\n            }\n            if (this.devicesSelector) {\n                this.devicesSelector.destroy();\n            }\n            if (this.devicesPreviewer) {\n                this.devicesPreviewer.destroy();\n            }\n            this.devicesSelector = null;\n            this.devicesPreviewer = null;\n        },\n\n        /**\n         * Enable default controls\n         */\n        enable: function enable() {\n            if (this.devicesSelector) {\n                this.devicesSelector.enable();\n            }\n        },\n\n        /**\n         * Disable default controls\n         */\n        disable: function disable() {\n            if (this.devicesSelector) {\n                this.devicesSelector.disable();\n            }\n        },\n\n        /**\n         * Show default controls\n         */\n        show: function show() {\n            if (this.devicesSelector) {\n                this.devicesSelector.show();\n            }\n        },\n\n        /**\n         * Hide default controls\n         */\n        hide: function hide() {\n            if (this.devicesSelector) {\n                this.devicesSelector.hide();\n            }\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/provider/item/tpl/item', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<main class=\\\"item-previewer-scope\\\">\\n    <div class=\\\"action-bar content-action-bar horizontal-action-bar top-action-bar\\\">\\n        <div class=\\\"control-box size-wrapper\\\">\\n            <div class=\\\"lft tools-box\\\"></div>\\n            <div class=\\\"rgt navi-box\\\">\\n                <ul class=\\\"plain navi-box-list\\\"></ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"test-runner-sections\\\">\\n\\n        <aside class=\\\"test-sidebar test-sidebar-left\\\"></aside>\\n\\n        <section class=\\\"content-wrapper\\\">\\n            <div id=\\\"qti-content\\\"></div>\\n        </section>\\n    </div>\\n\\n    <nav class=\\\"action-bar content-action-bar horizontal-action-bar bottom-action-bar\\\">\\n        <div class=\\\"control-box size-wrapper\\\">\\n            <div class=\\\"lft tools-box\\\"></div>\\n            <div class=\\\"rgt navi-box\\\">\\n                <ul class=\\\"plain navi-box-list\\\"></ul>\\n            </div>\\n        </div>\\n    </nav>\\n\\n</main>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2020 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner provider for the QTI item previewer\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/provider/item/item',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/feedback',\n    'taoTests/runner/areaBroker',\n    'taoTests/runner/testStore',\n    'taoTests/runner/proxy',\n    'taoQtiTest/runner/ui/toolbox/toolbox',\n    'taoQtiItem/runner/qtiItemRunner',\n    'taoQtiTest/runner/config/assetManager',\n    'taoItems/assets/strategies',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'tpl!taoQtiTestPreviewer/previewer/provider/item/tpl/item'\n], function (\n    $,\n    _,\n    __,\n    feedback,\n    areaBrokerFactory,\n    testStoreFactory,\n    proxyFactory,\n    toolboxFactory,\n    qtiItemRunner,\n    assetManagerFactory,\n    assetStrategies,\n    containerHelper,\n    layoutTpl\n) {\n    'use strict';\n\n    //the asset strategies\n    const assetManager = assetManagerFactory();\n    assetManager.prependStrategy(assetStrategies.taomedia);\n\n    //store the current execution context of the common renderer (preview)\n    let _$previousContext = null;\n    function setContext($context){\n        _$previousContext = containerHelper.getContext();\n        containerHelper.setContext($context);\n    }\n    function restoreContext(){\n        containerHelper.setContext(_$previousContext);\n        _$previousContext = null;\n    }\n    /**\n     * A Test runner provider to be registered against the runner\n     */\n    return {\n\n        //provider name\n        name: 'qtiItemPreviewer',\n\n        /**\n         * Initialize and load the area broker with a correct mapping\n         * @returns {areaBroker}\n         */\n        loadAreaBroker() {\n            const $layout = $(layoutTpl());\n\n            return areaBrokerFactory($layout, {\n                contentWrapper: $('.content-wrapper', $layout),\n                content: $('#qti-content', $layout),\n                toolbox: $('.bottom-action-bar .tools-box', $layout),\n                navigation: $('.bottom-action-bar .navi-box-list', $layout),\n                control: $('.top-action-bar .control-box', $layout),\n                actionsBar: $('.bottom-action-bar .control-box', $layout),\n                panel: $('.test-sidebar-left', $layout),\n                header: $('.top-action-bar .tools-box', $layout),\n                context: $('.top-action-bar .navi-box-list', $layout)\n            });\n        },\n\n        /**\n         * Initialize and load the test runner proxy\n         * @returns {proxy}\n         */\n        loadProxy() {\n            const {proxyProvider, serviceCallId, bootstrap, timeout} = this.getConfig();\n            return proxyFactory(proxyProvider || 'qtiItemPreviewerProxy', {serviceCallId, bootstrap, timeout});\n        },\n\n        /**\n         * Initialize and load the test store\n         * @returns {testStore}\n         */\n        loadTestStore() {\n            const config = this.getConfig();\n\n            //the test run needs to be identified uniquely\n            const identifier = config.serviceCallId || `test-${Date.now()}`;\n            return testStoreFactory(identifier);\n        },\n\n        /**\n         * Installation of the provider, called during test runner init phase.\n         */\n        install() {\n            const {plugins} = this.getConfig().options;\n            if (plugins) {\n                _.forEach(this.getPlugins(), plugin => {\n                    if (_.isPlainObject(plugin) && _.isFunction(plugin.setConfig)) {\n                        const config = plugins[plugin.getName()];\n                        if (_.isPlainObject(config)) {\n                            plugin.setConfig(config);\n                        }\n                    }\n                });\n            }\n        },\n\n        /**\n         * Initialization of the provider, called during test runner init phase.\n         *\n         * We install behaviors during this phase (ie. even handlers)\n         * and we call proxy.init.\n         *\n         * @this {runner} the runner context, not the provider\n         * @returns {Promise} to chain proxy.init\n         */\n        init() {\n            const dataHolder = this.getDataHolder();\n            const areaBroker = this.getAreaBroker();\n\n            areaBroker.setComponent('toolbox', toolboxFactory());\n            areaBroker.getToolbox().init();\n\n            /*\n             * Install behavior on events\n             */\n            this\n                .on('submititem', () => {\n                    const itemState = this.itemRunner.getState();\n                    const itemResponses = this.itemRunner.getResponses();\n\n                    this.trigger('disabletools disablenav');\n                    this.trigger('submitresponse', itemResponses, itemState);\n\n                    return this.getProxy()\n                        .submitItem(dataHolder.get('itemIdentifier'), itemState, itemResponses)\n                        .then(response => {\n                            this.trigger('scoreitem', response);\n                            this.trigger('enabletools enablenav resumeitem');\n                        })\n                        .catch(err => {\n                            this.trigger('enabletools enablenav');\n\n                            //some server errors are valid, so we don't fail (prevent empty responses)\n                            if (err.code === 200) {\n                                this.trigger('alert.submitError',\n                                    err.message || __('An error occurred during results submission. Please retry.'),\n                                    () => this.trigger('resumeitem')\n                                );\n                            }\n                        });\n                })\n                .on('ready', () => {\n                    const itemIdentifier = dataHolder.get('itemIdentifier');\n                    const itemData = dataHolder.get('itemData');\n\n                    if (itemIdentifier) {\n                        if (itemData) {\n                            this.renderItem(itemIdentifier, itemData);\n                        } else {\n                            this.loadItem(itemIdentifier);\n                        }\n                    }\n                })\n                .on('loaditem', (itemRef, itemData) => {\n                    dataHolder.set('itemIdentifier', itemRef);\n                    dataHolder.set('itemData', itemData);\n                })\n                .on('renderitem', () => {\n                    this.trigger('enabletools enablenav');\n                })\n                .on('resumeitem', () => {\n                    this.trigger('enableitem enablenav');\n                })\n                .on('disableitem', () => {\n                    this.trigger('disabletools');\n                })\n                .on('enableitem', () => {\n                    this.trigger('enabletools');\n                })\n                .on('error', () => {\n                    this.trigger('disabletools enablenav');\n                })\n                .on('finish leave', () => {\n                    this.trigger('disablenav disabletools');\n                    this.flush();\n                })\n                .on('flush', () => {\n                    this.destroy();\n                });\n\n            return this.getProxy()\n                .init()\n                .then(data => {\n                    dataHolder.set('itemIdentifier', data.itemIdentifier);\n                    dataHolder.set('itemData', data.itemData);\n                });\n        },\n\n        /**\n         * Rendering phase of the test runner\n         *\n         * Attach the test runner to the DOM\n         *\n         * @this {runner} the runner context, not the provider\n         */\n        render() {\n            const config = this.getConfig();\n            const areaBroker = this.getAreaBroker();\n\n            config.renderTo.append(areaBroker.getContainer());\n\n            areaBroker.getToolbox().render(areaBroker.getToolboxArea());\n        },\n\n        /**\n         * LoadItem phase of the test runner\n         *\n         * We call the proxy in order to get the item data\n         *\n         * @this {runner} the runner context, not the provider\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @returns {Promise} that calls in parallel the state and the item data\n         */\n        loadItem(itemIdentifier) {\n            return this.getProxy().getItem(itemIdentifier);\n        },\n\n        /**\n         * RenderItem phase of the test runner\n         *\n         * Here we initialize the item runner and wrap it's call to the test runner\n         *\n         * @this {runner} the runner context, not the provider\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @param {Object} itemData - The definition data of the item\n         * @returns {Promise} resolves when the item is ready\n         */\n        renderItem(itemIdentifier, itemData) {\n            const areaBroker = this.getAreaBroker();\n            const options = this.getConfig().options;\n\n            const changeState = () => {\n                this.setItemState(itemIdentifier, 'changed', true);\n            };\n\n            setContext(areaBroker.getContentArea());\n\n            return new Promise((resolve, reject) => {\n                itemData.content = itemData.content || {};\n\n                assetManager.setData('baseUrl', itemData.baseUrl);\n                assetManager.setData('assets', itemData.content.assets);\n\n                this.itemRunner = qtiItemRunner(itemData.content.type, itemData.content.data, Object.assign({\n                    assetManager: assetManager\n                }, options))\n                    .on('error', err => {\n                        this.trigger('enablenav');\n                        reject(err);\n                        feedback().error(__('It seems that there is an error during item preview loading. Please, try again.'));\n                    })\n                    .on('init', function onItemRunnerInit() {\n                        const {state, portableElements} = itemData;\n                        this.render(areaBroker.getContentArea(), {state, portableElements});\n                    })\n                    .on('render', function onItemRunnerRender() {\n                        this.on('responsechange', changeState);\n                        this.on('statechange', changeState);\n                        resolve();\n                    })\n                    .init();\n            });\n        },\n\n        /**\n         * UnloadItem phase of the test runner\n         *\n         * Item clean up\n         *\n         * @this {runner} the runner context, not the provider\n         * @returns {Promise} resolves when the item is cleared\n         */\n        unloadItem() {\n            this.trigger('beforeunloaditem disablenav disabletools');\n\n            if (this.itemRunner) {\n                return new Promise(resolve => {\n                    this.itemRunner\n                        .on('clear', resolve)\n                        .clear();\n                });\n            }\n            return Promise.resolve();\n        },\n\n        /**\n         * Destroy phase of the test runner\n         *\n         * Clean up\n         *\n         * @this {runner} the runner context, not the provider\n         */\n        destroy() {\n            const areaBroker = this.getAreaBroker();\n\n            // prevent the item to be displayed while test runner is destroying\n            if (this.itemRunner) {\n                this.itemRunner\n                    .on('clear', restoreContext)\n                    .clear();\n            }\n            this.itemRunner = null;\n\n            if (areaBroker) {\n                areaBroker.getToolbox().destroy();\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiTestPreviewer/previewer/proxy/itemDataHandlers',[\n    'module',\n    'context',\n    'lodash',\n    'core/moduleLoader'\n], function (module, context, _, moduleLoader) {\n    'use strict';\n\n    const moduleConfig = module.config();\n    let handlers = [];\n    if (moduleConfig.handlers) {\n        /*\n         * This loads all the modules from module configuration, which are in the `handlers` array.\n         */\n        moduleLoader({}, _.isFunction)\n            .addList(moduleConfig.handlers)\n            .load(context.bundle)\n            .then(data => (handlers = data));\n    }\n\n    return function itemDataHandlers(itemData) {\n        if (!handlers.length) {\n            return Promise.resolve(itemData);\n        } if (handlers.length === 1) {\n            return handlers[0](itemData);\n        } else {\n            return handlers.reduce(function(prev, cur) {\n                return prev.then(updateItemData => cur(updateItemData)).catch(cur().reject);\n            }, handlers[0](itemData));\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2022 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner proxy for the QTI item previewer\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/proxy/item',[\n    'lodash',\n    'core/promiseQueue',\n    'core/request',\n    'taoQtiTestPreviewer/previewer/config/item',\n    'taoQtiTestPreviewer/previewer/proxy/itemDataHandlers'\n], function (_, promiseQueue, coreRequest, configFactory, itemDataHandlers) {\n    'use strict';\n\n    /**\n     * QTI proxy definition\n     * Related to remote services calls\n     * @type {Object}\n     */\n    return {\n        name: 'qtiItemPreviewerProxy',\n\n        /**\n         * Installs the proxy\n         */\n        install() {\n            /**\n             * A promise queue to ensure requests run sequentially\n             */\n            this.queue = promiseQueue();\n\n            /**\n             * Some parameters needs special handling...\n             * @param {Object} actionParams - the input parameters\n             * @returns {Object} output parameters\n             */\n            this.prepareParams = function prepareParams(actionParams) {\n                //some parameters need to be JSON.stringified\n                const stringifyParams = ['itemState', 'itemResponse'];\n\n                if (_.isPlainObject(actionParams)) {\n                    return _.mapValues(actionParams, (value, key) => {\n                        if (_.contains(stringifyParams, key)) {\n                            return JSON.stringify(value);\n                        }\n                        return value;\n                    });\n                }\n\n                return actionParams;\n            };\n\n            /**\n             * Proxy request function. Returns a promise\n             * Applied options: asynchronous call, JSON data, no cache\n             * @param {String} url\n             * @param {Object} [reqParams]\n             * @param {String} [contentType] - to force the content type\n             * @param {Boolean} [noToken] - to disable the token\n             * @returns {Promise}\n             */\n            this.request = function request(url, reqParams, contentType, noToken) {\n                return coreRequest({\n                    url: url,\n                    data: this.prepareParams(reqParams),\n                    method: reqParams ? 'POST' : 'GET',\n                    contentType: contentType,\n                    noToken: noToken,\n                    background: false,\n                    sequential: true,\n                    timeout: this.configStorage.getTimeout()\n                })\n                    .then(response => {\n                        this.setOnline();\n\n                        if (response && response.success) {\n                            return Promise.resolve(response);\n                        } else {\n                            return Promise.reject(response);\n                        }\n                    })\n                    .catch(error => {\n                        if (error.data && this.isConnectivityError(error.data)) {\n                            this.setOffline('request');\n                        }\n                        return Promise.reject(error);\n                    });\n            };\n        },\n\n        /**\n         * Initializes the proxy\n         * @param {Object} config - The config provided to the proxy factory\n         * @param {String} config.testDefinition - The URI of the test\n         * @param {String} config.testCompilation - The URI of the compiled delivery\n         * @param {String} config.serviceCallId - The URI of the service call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The proxy will be fully initialized on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        init(config, params) {\n            // store config in a dedicated configStorage\n            this.configStorage = configFactory(config || {});\n\n            // request for initialization\n            return this.request(this.configStorage.getTestActionUrl('init'), params, void 0, true);\n        },\n\n        /**\n         * Uninstalls the proxy\n         * @returns {Promise} - Returns a promise. The proxy will be fully uninstalled on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        destroy() {\n            // no request, just a resources cleaning\n            this.configStorage = null;\n            this.queue = null;\n\n            // the method must return a promise\n            return Promise.resolve();\n        },\n\n        /**\n         * Calls an action related to the test\n         * @param {String} action - The name of the action to call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callTestAction(action, params) {\n            return this.request(this.configStorage.getTestActionUrl(action), params, void 0, true);\n        },\n\n        /**\n         * Calls an action related to a particular item\n         * @param {String} itemIdentifier - The identifier of the item for which call the action\n         * @param {String} action - The name of the action to call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callItemAction(itemIdentifier, action, params) {\n            return this.request(this.configStorage.getItemActionUrl(itemIdentifier, action), params, void 0, true);\n        },\n\n        /**\n         * Gets an item definition by its identifier, also gets its current state\n         * @param {String} itemIdentifier - The identifier of the item to get\n         * @param {Object} [params] - additional parameters\n         * @returns {Promise} - Returns a promise. The item data will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        getItem(itemIdentifier, params) {\n            return this.request(\n                this.configStorage.getItemActionUrl(itemIdentifier, 'getItem'),\n                params,\n                void 0,\n                true\n            ).then(itemData => itemDataHandlers(itemData));\n        },\n\n        /**\n         * Submits the state and the response of a particular item\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @param {Object} state - The state to submit\n         * @param {Object} response - The response object to submit\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        submitItem(itemIdentifier, state, response, params) {\n            const body = _.merge(\n                {\n                    itemState: state,\n                    itemResponse: response\n                },\n                params || {}\n            );\n\n            return this.request(this.configStorage.getItemActionUrl(itemIdentifier, 'submitItem'), body, void 0, true);\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020-2022 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner proxy for the QTI test previewer\n *\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/proxy/test',[\n    'core/promiseQueue',\n    'core/request',\n    'util/url',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTestPreviewer/previewer/proxy/itemDataHandlers'\n], function (promiseQueue, request, urlUtil, mapHelper, itemDataHandlers) {\n    'use strict';\n\n    const serviceControllerInit = 'TestPreviewer';\n    const serviceControllerGetItem = 'Previewer';\n\n    const serviceExtension = 'taoQtiTestPreviewer';\n\n    /**\n     * The possible states of the test session,\n     * coming from the test context\n     * (this state comes from the backend)\n     */\n    const testSessionStates = Object.freeze({\n        initial: 0,\n        interacting: 1,\n        modalFeedback: 2,\n        suspended: 3,\n        closed: 4\n    });\n    /**\n     * The possible states of an item session,\n     * coming from the test context\n     * (this state comes from the backend)\n     */\n    const itemSessionStates = Object.freeze({\n        initial: 0,\n        interacting: 1,\n        modalFeedback: 2,\n        suspended: 3,\n        closed: 4,\n        solution: 5,\n        review: 6\n    });\n\n    /**\n     * Updates testContext with item data\n     * @param {Object} testMap\n     * @param {Number} position - item position\n     * @param {Object} testContext\n     * @param {Array} presetMap\n     */\n    function updateTestContextWithItem(testMap, position, testContext, presetMap) {\n        const jump = mapHelper.getJump(testMap, position);\n        const item = mapHelper.getItemAt(testMap, position);\n        if (!item) {\n            return;\n        }\n        testContext.testPartId = jump.part;\n        testContext.sectionId = jump.section;\n        testContext.itemIdentifier = jump.identifier;\n        testContext.itemSessionState = itemSessionStates.initial;\n        testContext.options = createContextOptions(item, presetMap);\n        testContext.allowSkipping = item.allowSkipping;\n    }\n\n    /**\n     * Convert preset categories to context.options\n     * @param {Object} item\n     * @param {Array} presetMap\n     * @returns {Object} options\n     */\n    function createContextOptions(item, presetMap) {\n        const options = {};\n        presetMap.forEach(category => {\n            const pluginId = Object.keys(category)[0];\n            const categoryId = category[pluginId];\n            if (item.categories.includes(categoryId)) {\n                options[pluginId] = true;\n            }\n        });\n        return options;\n    }\n\n    /**\n     * QTI proxy definition\n     * Related to remote services calls\n     * @type {Object}\n     */\n    return {\n        name: 'qtiTestPreviewerProxy',\n\n        /**\n         * Installs the proxy\n         */\n        install() {\n            /**\n             * A promise queue to ensure requests run sequentially\n             */\n            this.queue = promiseQueue();\n        },\n        /**\n         * Initializes the proxy\n         * @param {Object} configs - configuration from proxy\n         * @param {String} configs.options.testUri - The identifier of the test\n         * @returns {Promise} - Returns a promise. The proxy will be fully initialized on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        init(configs) {\n            this.itemStore = {};\n            return request({\n                url: urlUtil.route('init', serviceControllerInit, serviceExtension),\n                data: { testUri: configs.options.testUri },\n                noToken: true\n            }).then(response => {\n                const data = response.data;\n                //the received map is not complete and should be \"built\"\n                this.builtTestMap = mapHelper.reindex(data.testMap);\n                this.presetMap = data.presetMap || [];\n                delete data.presetMap;\n                const firstJump = this.builtTestMap.jumps[0] || {};\n                const firstItem = mapHelper.getItemAt(this.builtTestMap, 0);\n                data.testContext = {\n                    itemIdentifier: firstJump.identifier,\n                    itemPosition: 0,\n                    itemSessionState: 0,\n                    testPartId: firstJump.part,\n                    sectionId: firstJump.section,\n                    canMoveBackward: true,\n                    state: testSessionStates.interacting,\n                    attempt: 1,\n                    options: createContextOptions(firstItem, this.presetMap),\n                    allowSkipping: firstItem.allowSkipping\n                };\n                return data;\n            });\n        },\n\n        /**\n         * Uninstalls the proxy\n         * @returns {Promise} - Returns a promise. The proxy will be fully uninstalled on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        destroy() {\n            // no request, just a resources cleaning\n            this.queue = null;\n\n            if (this.itemStore) {\n                this.itemStore = null;\n            }\n\n            // the method must return a promise\n            return Promise.resolve();\n        },\n\n        /**\n         * Gets an item definition by its URI, also gets its current state\n         * @param {String} itemIdentifier - The URI of the item to get\n         * @returns {Promise} - Returns a promise. The item data will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        getItem(itemIdentifier) {\n            if (itemIdentifier in this.itemStore) {\n                // Load item from store\n                return Promise.resolve(this.itemStore[itemIdentifier]);\n            } else {\n                // Load from server; Store in store\n                const { uri } = mapHelper.getItem(this.builtTestMap, itemIdentifier) || {};\n                if (!uri) {\n                    throw new Error(`There is no item ${itemIdentifier} in the testMap!`);\n                }\n                return request({\n                    url: urlUtil.route('getItem', serviceControllerGetItem, serviceExtension),\n                    data: { serviceCallId: 'previewer', itemUri: uri },\n                    noToken: true\n                })\n                    .then(data => {\n                        data.itemData = data.content;\n                        data.itemIdentifier = data.content.data.identifier;\n                        data.itemState = {};\n                        this.itemStore[itemIdentifier] = data;\n                        return data;\n                    })\n                    .then(itemData => itemDataHandlers(itemData));\n            }\n        },\n\n        /**\n         * Call action on the test\n         * @param {string} itemIdentifier - the current item\n         * @param {string} action - the action id\n         * @param {Object} params\n         * @returns {Promise} resolves with the response\n         */\n        callItemAction(itemIdentifier, action, params = {}) {\n            const dataHolder = this.getDataHolder();\n            const testContext = dataHolder.get('testContext');\n            const testMap = dataHolder.get('testMap');\n            const actions = {\n                //simulate backend move action\n                move: () => {\n                    if (params.direction === 'next' || action === 'skip') {\n                        if (params.scope === 'testPart') {\n                            const testPartPosition = testMap.parts[testContext.testPartId].position;\n                            const nextPartsSorted = Object.values(testMap.parts)\n                                .filter(p => p.position > testPartPosition)\n                                .sort((a, b) => a.position - b.position);\n                            if (nextPartsSorted.length === 0) {\n                                testContext.state = testSessionStates.closed;\n                            } else {\n                                testContext.itemPosition = Math.min(\n                                    testMap.stats.total - 1,\n                                    nextPartsSorted[0].position\n                                );\n                            }\n                        } else {\n                            if (testContext.itemPosition + 1 >= testMap.stats.total) {\n                                testContext.state = testSessionStates.closed;\n                            } else {\n                                testContext.itemPosition = Math.min(\n                                    testMap.stats.total - 1,\n                                    testContext.itemPosition + 1\n                                );\n                            }\n                        }\n                    }\n                    if (params.direction === 'previous') {\n                        testContext.itemPosition = Math.max(0, testContext.itemPosition - 1);\n                    }\n                    if (params.direction === 'jump' && params.ref >= 0) {\n                        testContext.itemPosition = params.ref;\n                    }\n\n                    updateTestContextWithItem(testMap, testContext.itemPosition, testContext, this.presetMap);\n\n                    return { testContext, testMap };\n                },\n\n                flagItem: () => Promise.resolve()\n            };\n            actions.skip = actions.move;\n\n            if (params.itemState) {\n                // store itemState in itemStore\n                this.itemStore[itemIdentifier].itemState = params.itemState;\n            }\n\n            if (typeof actions[action] === 'function') {\n                return actions[action]();\n            }\n        },\n\n        /**\n         * Calls an action related to the test\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callTestAction() {\n            // the method must return a promise\n            return Promise.resolve();\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiTestPreviewer/previewer/component/test/tpl/qtiTest', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"previewer-test-component\\\">\\n  <header role=\\\"menubar\\\" class=\\\"dark-bar clearfix\\\">\\n      <div class=\\\"lft title-box\\\"></div>\\n      <nav role=\\\"menu\\\" class=\\\"rgt\\\">\\n          <!-- snippet: dark bar left menu -->\\n          <div class=\\\"settings-menu\\\">\\n              <ul class=\\\"clearfix plain\\\">\\n                  <li data-control=\\\"home\\\">\\n                      <a role=\\\"button\\\" id=\\\"home\\\" href=\\\"#\\\">\\n                          <span class=\\\"icon-home\\\"></span>\\n                          <span class=\\\"text hidden\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Go back to tests selection\", options) : helperMissing.call(depth0, \"__\", \"Go back to tests selection\", options)))\n    + \"</span>\\n                      </a>\\n                  </li>\\n                  <li class=\\\"infoControl sep-before\\\">\\n                      <span class=\\\"a\\\">\\n                          <span class=\\\"icon-test-taker\\\"></span>\\n                          <span class=\\\"text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"TAO Guest\", options) : helperMissing.call(depth0, \"__\", \"TAO Guest\", options)))\n    + \"</span>\\n                      </span>\\n                  </li>\\n                  <li class=\\\"infoControl sep-before\\\" data-control=\\\"logout\\\">\\n                      <a role=\\\"button\\\" id=\\\"logout\\\" class=\\\"logout\\\" href=\\\"#\\\" tabindex=\\\"0\\\">\\n                          <span class=\\\"icon-logout\\\"></span>\\n                          <span class=\\\"text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Logout\", options) : helperMissing.call(depth0, \"__\", \"Logout\", options)))\n    + \"</span>\\n                      </a>\\n                  </li>\\n              </ul>\\n          </div>\\n      </nav>\\n  </header>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoQtiTestPreviewer/previewer/component/test/css/qtiTest',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/component/test/qtiTest',[\n    'context',\n    'lodash',\n    'layout/loading-bar',\n    'taoTests/runner/runnerComponent',\n    'taoQtiTest/runner/config/assetManager',\n    'taoItems/assets/strategies',\n    'tpl!taoQtiTestPreviewer/previewer/component/test/tpl/qtiTest',\n    'css!taoQtiTestPreviewer/previewer/component/test/css/qtiTest',\n    'css!taoQtiTestCss/new-test-runner'\n], function (context, __, loadingBar, runnerComponentFactory, assetManagerFactory, assetStrategies, runnerTpl) {\n    'use strict';\n\n    /**\n     * Builds a test runner to preview test\n     * @param {jQuery|HTMLElement|String} container - The container in which renders the component\n     * @param {Object} [config] - The testRunner options\n     *\n     * @returns {runner}\n     */\n    return function qtiTestPreviewerFactory(container, config = {}) {\n        const testRunnerConfig = __.defaults(\n            {\n                testDefinition: 'test-container',\n                serviceCallId: 'previewer',\n                proxyProvider: 'qtiTestPreviewerProxy',\n                loadFromBundle: !!context.bundle,\n            },\n            config\n        );\n\n        testRunnerConfig.providers.proxy = [{\n            id: 'qtiTestPreviewerProxy',\n            module: 'taoQtiTestPreviewer/previewer/proxy/test',\n            bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n            category: 'proxy'\n        }];\n\n        //the asset manager should support taomedia strategy\n        const assetManager = assetManagerFactory(testRunnerConfig.serviceCallId);\n        assetManager.prependStrategy(assetStrategies.taomedia);\n\n        return runnerComponentFactory(container, testRunnerConfig, runnerTpl)\n            .on('render', function() {\n                const { fullPage, readOnly, hideActionBars } = this.getConfig().options;\n                this.setState('fullpage', fullPage);\n                this.setState('readonly', readOnly);\n                this.setState('hideactionbars', hideActionBars);\n            })\n            .on('ready', function(runner) {\n                runner.on('destroy', () => {\n                    // stop loading bar - started in plugin loading\n                    loadingBar.stop();\n                    this.destroy();\n                });\n            });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('taoQtiTestPreviewer/previewer/adapter/test/qtiTest',[\n    'lodash',\n    'core/promiseQueue',\n    'core/request',\n    'util/url',\n    'core/logger',\n    'taoQtiTestPreviewer/previewer/component/test/qtiTest',\n    'ui/feedback',\n    'taoQtiTestPreviewer/previewer/component/topBlock/topBlock',\n], function (\n    _,\n    promiseQueue,\n    request,\n    urlUtil,\n    loggerFactory,\n    qtiTestPreviewerFactory,\n    feedback,\n    topBlockFactory\n) {\n    'use strict';\n\n    const taoExtension = 'taoQtiTestPreviewer';\n\n    const testPreviewerController = 'TestPreviewer';\n\n    const logger = loggerFactory('taoQtiTestPreviewer/previewer');\n\n    /**\n     * List of required plugins that should be loaded in order to make the previewer work properly\n     * @type {Object[]}\n     */\n    const defaultPlugins = [\n        {\n            module: 'taoQtiTestPreviewer/previewer/plugins/content/cloneLogoInTestPreview',\n            bundle: 'taoQtiTestPreviewer/loader/qtiPreviewer.min',\n            category: 'content'\n        }\n    ];\n\n    const transformConfiguration = config => {\n        const plugins = Array.isArray(config.plugins) ? [...defaultPlugins, ...config.plugins] : defaultPlugins;\n        const { view, readOnly, fullPage, hideActionBars, pluginsOptions } = config;\n        const options = _.omit({ view, readOnly, fullPage, hideActionBars }, _.isUndefined);\n\n        return request({\n            url: urlUtil.route('configuration', testPreviewerController, taoExtension),\n            noToken: true\n        }).then(response => {\n            const configuration = response.data;\n\n            configuration.providers.plugins = [...configuration.providers.plugins, ...plugins];\n\n            _.assign(configuration.options, options);\n\n            if (pluginsOptions) {\n                if (!configuration.options.plugins) {\n                    configuration.options.plugins = {};\n                }\n                _.assign(configuration.options.plugins, pluginsOptions);\n            }\n\n            return configuration;\n        });\n    };\n\n    /**\n     * Wraps the test previewer in order to be loaded by the taoItems previewer factory\n     */\n    return {\n        name: 'qtiTest',\n\n        install() {\n            this.queue = promiseQueue();\n        },\n\n        /**\n         * Builds and shows the test previewer\n         *\n         * @param {String} testUri - The URI of the test to load\n         * @param {Object} [config] - Some config entries\n         * @param {Object[]} [config.plugins] - Additional plugins to load\n         * @param {String} [config.fullPage] - Force the previewer to occupy the full window.\n         * @param {String} [config.readOnly] - Do not allow to modify the previewed item.\n         * @returns {Object}\n         */\n        init(testUri, config = {}) {\n            return transformConfiguration(config).then(testPreviewConfig => {\n                testPreviewConfig.options.testUri = testUri;\n                let topBlock = null;\n                const previewComponent = qtiTestPreviewerFactory(window.document.body, testPreviewConfig)\n                    .on('ready', function (runner) {\n                        topBlock = topBlockFactory(\n                            window.document.body,\n                            {\n                                isTest: testPreviewConfig.options.review.scope === 'test',\n                                title: runner.getTestMap().title,\n                                onClose: () =>  {\n                                    runner.trigger('exit');\n                                }\n                            });\n                    })\n                    .on('error', function (err) {\n                        if (topBlock){\n                            topBlock.destroy();\n                            topBlock = null;\n                        }\n                        if (!_.isUndefined(err.message)) {\n                            feedback().error(err.message);\n                        }\n                        logger.error(err);\n                    })\n                    .on('destroy', () => {\n                        if (topBlock){\n                            topBlock.destroy();\n                            topBlock = null;\n                        }\n                    });\n                return previewComponent;\n            });\n        },\n\n        destroy() {\n            this.queue = null;\n\n            return Promise.resolve();\n        },\n    };\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.previewer,.previewer-component{position:relative}.item-previewer-scope{position:relative;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:calc(100vh - 0px)}.item-previewer-scope .test-runner-sections{-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%;overflow:hidden;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.item-previewer-scope .test-sidebar{background:#f3f1ef;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;height:calc(100vh - 80px);overflow-y:auto;max-width:350px}.item-previewer-scope .test-sidebar>.qti-panel{max-width:350px;padding:10px}@media only screen and (max-device-width: 800px){.item-previewer-scope .test-sidebar{max-width:200px}.item-previewer-scope .test-sidebar>.qti-panel{max-width:200px}}@media only screen and (min-device-width: 800px) and (max-device-width: 1280px){.item-previewer-scope .test-sidebar{max-width:250px}.item-previewer-scope .test-sidebar>.qti-panel{max-width:250px}}@media only screen and (min-device-width: 1280px) and (max-device-width: 1440px){.item-previewer-scope .test-sidebar{max-width:300px}.item-previewer-scope .test-sidebar>.qti-panel{max-width:300px}}.item-previewer-scope .test-sidebar-left{border-right:1px #ddd solid}.item-previewer-scope .test-sidebar-right{border-left:1px #ddd solid}.item-previewer-scope .content-wrapper{position:relative;-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%;overflow:auto;padding:0}.item-previewer-scope .content-wrapper .overlay{position:absolute;left:0;right:0;top:0;bottom:0;width:100%;opacity:.9}.item-previewer-scope .content-wrapper .overlay-full{background-color:#fff;opacity:1}.item-previewer-scope #qti-content{-webkit-overflow-scrolling:touch;max-width:1024px;width:100%;margin:auto}.item-previewer-scope #qti-item{width:100%;min-width:100%;height:auto;overflow:visible}.item-previewer-scope .qti-item{padding:30px}.item-previewer-scope .size-wrapper{max-width:1280px;margin:auto;width:100%;padding-right:40px}.item-previewer-scope #qti-rubrics{margin:auto;max-width:1024px;width:100%}.item-previewer-scope #qti-rubrics .qti-rubricBlock{margin:20px 0}.item-previewer-scope #qti-rubrics .hidden{display:none}.no-controls .item-previewer-scope{height:100vh}.previewer-component{background:inherit}.previewer-component.fullpage{position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000}.previewer-component.fullpage .item-previewer-scope{height:100vh}.previewer-component.readonly .qti-item::before{content:\\' \\';position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000}.previewer-component.hideactionbars .test-sidebar{height:100%}.previewer-component.hideactionbars .action-bar{display:none}.item-previewer-scope .preview-console-closer{position:absolute;right:10px;top:10px;cursor:pointer;color:rgba(255,255,255,0.9);text-shadow:none}.item-previewer-scope .preview-console-closer:hover{color:white}.item-previewer-scope .preview-console{background:#2b2b2b;color:#fff;font-family:Consolas,\\\"Andale Mono WT\\\",\\\"Andale Mono\\\",\\\"Lucida Console\\\",\\\"Lucida Sans Typewriter\\\",\\\"DejaVu Sans Mono\\\",\\\"Bitstream Vera Sans Mono\\\",\\\"Liberation Mono\\\",\\\"Nimbus Mono L\\\",Monaco,\\\"Courier New\\\",Courier,monospace;position:relative}.item-previewer-scope .preview-console .preview-console-body{padding:5px;margin:0;height:30vh;overflow:auto}.item-previewer-scope .preview-console .preview-console-body .log-time{color:#999}.item-previewer-scope .preview-console .preview-console-body .log-type{color:#eee}.item-previewer-scope .preview-console .preview-console-body .log-message{color:#69f}.item-previewer-scope .preview-console .preview-console-body pre{margin:0}.item-previewer-scope .action-bar.content-action-bar{padding:2px}.item-previewer-scope .action-bar.content-action-bar li{margin:2px 0 0 10px;border:none}.item-previewer-scope .action-bar.content-action-bar li.btn-info{padding-top:6px;height:33px;margin-top:0;border-bottom:solid 2px transparent;border-radius:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group{border:none !important;overflow:hidden;padding:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a{float:left;margin:0 2px;padding:0 15px;border:1px solid rgba(255,255,255,0.3);border-radius:0px;display:inline-block;height:inherit}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a:first-of-type{border-top-left-radius:3px;border-bottom-left-radius:3px;margin-left:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a:last-of-type{border-top-right-radius:3px;border-bottom-right-radius:3px;margin-right:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a:hover,.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a.active{border-color:rgba(255,255,255,0.8)}.item-previewer-scope .action-bar.content-action-bar li.btn-info.btn-group a .no-label{padding-right:0}.item-previewer-scope .action-bar.content-action-bar li.btn-info:hover,.item-previewer-scope .action-bar.content-action-bar li.btn-info.active{border-bottom-color:rgba(255,255,255,0.8)}.item-previewer-scope .action-bar.content-action-bar li.btn-info:active,.item-previewer-scope .action-bar.content-action-bar li.btn-info.active{background:#e7eff4;border-color:rgba(255,255,255,0.8)}.item-previewer-scope .action-bar.content-action-bar li.btn-info:active a,.item-previewer-scope .action-bar.content-action-bar li.btn-info.active a{color:#266d9c;text-shadow:none}.item-previewer-scope .action-bar.content-action-bar li.btn-info:active:hover,.item-previewer-scope .action-bar.content-action-bar li.btn-info.active:hover{background:#fff}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar{opacity:1;height:40px}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box{height:40px;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:space-between;-ms-flex-pack:space-between;justify-content:space-between;padding-left:10px;padding-right:40px}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box{color:rgba(255,255,255,0.9);text-shadow:1px 1px 0 black}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt{padding-left:20px}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft:first-child,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt:first-child{padding-left:0}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft:last-child ul,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt:last-child ul{display:inline-block}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box [class^=\\\"btn-\\\"],.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box [class*=\\\" btn-\\\"]{white-space:nowrap}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box{position:relative;overflow:visible}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .action{position:relative;overflow:visible}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu{color:#222;background:#f3f1ef;border:1px solid #aaa9a7;overflow:auto;list-style:none;min-width:150px;margin:0;padding:0;position:absolute;bottom:36px;left:-3px}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action{display:inline-block;text-align:left;width:100%;white-space:nowrap;overflow:hidden;color:#222;border-bottom:1px solid #c2c1bf;margin:0;-moz-border-radius:0px;-webkit-border-radius:0px;border-radius:0px;height:32px;padding:6px 15px;line-height:1;border-left:solid 3px transparent}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .icon-checkbox-checked{display:none}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active{background-color:#dbd9d7;font-weight:bold}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon-checkbox,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon-checkbox,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active .icon-checkbox{display:none}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon-checkbox-checked,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon-checkbox-checked,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active .icon-checkbox-checked{display:inline-block}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover{background-color:#0e5d91;color:#fff;border-left-color:#313030 !important}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .label,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .label,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon{color:#fff}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon{color:#e7eff4}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .label,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .icon{font-size:14px;font-size:1.4rem;text-shadow:none;color:#222}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar{overflow:visible;position:relative}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .action{line-height:1.6}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .icon.no-label{padding-right:0}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed .btn-info .text,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed-hover .btn-info:not(:hover) .text,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.no-tool-label .text,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed .text,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed-over:not(:hover) .text{display:none}.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed .btn-info .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed-hover .btn-info:not(:hover) .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.no-tool-label .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed .icon,.item-previewer-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed-over:not(:hover) .icon{padding:0}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/provider/item/css/item.css.map */.top-block-preview{position:fixed;top:0;left:50%;z-index:10000;display:flex;flex-direction:column;align-items:center;justify-content:center}.top-block-preview.open{transform:translate(-50%, 0);transition:transform .5s ease-out}.top-block-preview.close{transform:translate(-50%, calc(30px - 100%));transition:transform .5s ease-out}.top-block-preview-main{display:flex;padding:12px 24px;background-color:#f3f1ef;border:solid 1px #E5E4E4}.top-block-preview-main .btn-info{margin-left:16px;white-space:nowrap}.top-block-preview-main .btn-info .icon{padding-left:9px;padding-right:0}.top-block-preview-info{display:flex;align-items:center;justify-content:center}.top-block-preview-info p{margin-bottom:0}.top-block-preview-collapser{position:relative;width:60px;height:30px;background-color:#f3f1ef;border-bottom-left-radius:30px;border-bottom-right-radius:30px;transform:translateY(-10px);display:flex;align-items:center;justify-content:center;cursor:pointer;border-left:solid 1px #E5E4E4;border-right:solid 1px #E5E4E4}.top-block-preview-collapser::before{content:\\\" \\\";width:60px;height:10px;background-color:#f3f1ef;position:absolute;top:-1px}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/component/topBlock/css/topBlock.css.map */.devices-previewer{width:100%;height:100%}.devices-previewer:not(.disabled)[data-type=\\\"desktop\\\"],.devices-previewer:not(.disabled)[data-type=\\\"mobile\\\"]{overflow:hidden}.devices-previewer:not(.disabled)[data-type=\\\"desktop\\\"] .preview-container,.devices-previewer:not(.disabled)[data-type=\\\"mobile\\\"] .preview-container{position:relative}.devices-previewer:not(.disabled)[data-type=\\\"desktop\\\"] .preview-frame,.devices-previewer:not(.disabled)[data-type=\\\"mobile\\\"] .preview-frame{position:relative;border:3px #aaa ridge;background:#5a5a5a;background:linear-gradient(135deg, #5a5a5a 0%, #565656 7%, #444 15%, #141414 30%);-webkit-box-shadow:5px 5px 10px 0 rgba(0,0,0,0.7);-moz-box-shadow:5px 5px 10px 0 rgba(0,0,0,0.7);-ms-box-shadow:5px 5px 10px 0 rgba(0,0,0,0.7);-o-box-shadow:5px 5px 10px 0 rgba(0,0,0,0.7);box-shadow:5px 5px 10px 0 rgba(0,0,0,0.7)}.devices-previewer:not(.disabled)[data-type=\\\"desktop\\\"] .preview-content,.devices-previewer:not(.disabled)[data-type=\\\"mobile\\\"] .preview-content{background:#fff;border-radius:3px;border:2px solid;border-color:#444 #999 #999 #444;overflow:auto}.devices-previewer:not(.disabled)[data-type=\\\"mobile\\\"] .preview-frame{border-radius:25px;padding:40px}.devices-previewer:not(.disabled)[data-type=\\\"desktop\\\"] .preview-frame{border-radius:5px;padding:30px}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesPreviewer.css.map */.devices-selector{display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row}.devices-selector[data-type=\\\"standard\\\"] .desktop-selector,.devices-selector[data-type=\\\"standard\\\"] .mobile-selector,.devices-selector[data-type=\\\"standard\\\"] .orientation-selector{display:none}.devices-selector[data-type=\\\"desktop\\\"] .mobile-selector,.devices-selector[data-type=\\\"desktop\\\"] .orientation-selector{display:none}.devices-selector[data-type=\\\"mobile\\\"] .desktop-selector{display:none}.devices-selector .selector{display:inline-block;margin-top:0.3em}.devices-selector .selector:not(:last-child){margin-right:1rem}.devices-selector .selector select{overflow:visible}.devices-selector .selector .select2-container{text-shadow:none}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/plugins/tools/scale/component/css/devicesSelector.css.map */.previewer-test-component{background:inherit}.previewer-test-component.fullpage{position:absolute;top:0;left:0;right:0;bottom:64px;z-index:1000}.previewer-test-component.fullpage .item-previewer-scope{height:100vh}.previewer-test-component.readonly .qti-item::before{content:\\' \\';position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000}.previewer-test-component.hideactionbars .test-sidebar{height:100%}.previewer-test-component.hideactionbars .action-bar{display:none}.previewer-test-component #preview-logo{margin:6px 30px 6px 30px;display:block;max-width:200px;height:52px;background:transparent}.previewer-test-component footer{z-index:10000;position:relative;font-size:11px;padding:10px;border-top:1px #ddd solid}\\n\\n/*# sourceMappingURL=taoQtiTestPreviewer/previewer/component/test/css/qtiTest.css.map */');\n","\ndefine(\"taoQtiTestPreviewer/loader/qtiPreviewer.bundle\", function(){});\n","define(\"taoQtiTestPreviewer/loader/qtiPreviewer.min\", [\"taoItems/loader/taoItemsRunner.min\",\"taoTests/loader/taoTestsRunner.min\",\"taoQtiItem/loader/taoQtiItemRunner.min\",\"taoQtiTest/loader/taoQtiTestRunner.min\",\"taoQtiTest/loader/testPlugins.min\"], function(){});\n"]}